/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// WindowsTargetDetails WindowsTargetDetails
type WindowsTargetDetails struct {
	Certificate *string `json:"certificate,omitempty"`
	DomainName *string `json:"domain_name,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Password *string `json:"password,omitempty"`
	Port *string `json:"port,omitempty"`
	UseTls *bool `json:"use_tls,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewWindowsTargetDetails instantiates a new WindowsTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWindowsTargetDetails() *WindowsTargetDetails {
	this := WindowsTargetDetails{}
	return &this
}

// NewWindowsTargetDetailsWithDefaults instantiates a new WindowsTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWindowsTargetDetailsWithDefaults() *WindowsTargetDetails {
	this := WindowsTargetDetails{}
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *WindowsTargetDetails) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WindowsTargetDetails) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *WindowsTargetDetails) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *WindowsTargetDetails) SetCertificate(v string) {
	o.Certificate = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *WindowsTargetDetails) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WindowsTargetDetails) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *WindowsTargetDetails) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *WindowsTargetDetails) SetDomainName(v string) {
	o.DomainName = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *WindowsTargetDetails) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WindowsTargetDetails) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *WindowsTargetDetails) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *WindowsTargetDetails) SetHostname(v string) {
	o.Hostname = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *WindowsTargetDetails) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WindowsTargetDetails) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *WindowsTargetDetails) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *WindowsTargetDetails) SetPassword(v string) {
	o.Password = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *WindowsTargetDetails) GetPort() string {
	if o == nil || o.Port == nil {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WindowsTargetDetails) GetPortOk() (*string, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *WindowsTargetDetails) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *WindowsTargetDetails) SetPort(v string) {
	o.Port = &v
}

// GetUseTls returns the UseTls field value if set, zero value otherwise.
func (o *WindowsTargetDetails) GetUseTls() bool {
	if o == nil || o.UseTls == nil {
		var ret bool
		return ret
	}
	return *o.UseTls
}

// GetUseTlsOk returns a tuple with the UseTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WindowsTargetDetails) GetUseTlsOk() (*bool, bool) {
	if o == nil || o.UseTls == nil {
		return nil, false
	}
	return o.UseTls, true
}

// HasUseTls returns a boolean if a field has been set.
func (o *WindowsTargetDetails) HasUseTls() bool {
	if o != nil && o.UseTls != nil {
		return true
	}

	return false
}

// SetUseTls gets a reference to the given bool and assigns it to the UseTls field.
func (o *WindowsTargetDetails) SetUseTls(v bool) {
	o.UseTls = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *WindowsTargetDetails) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WindowsTargetDetails) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *WindowsTargetDetails) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *WindowsTargetDetails) SetUsername(v string) {
	o.Username = &v
}

func (o WindowsTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.DomainName != nil {
		toSerialize["domain_name"] = o.DomainName
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.UseTls != nil {
		toSerialize["use_tls"] = o.UseTls
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableWindowsTargetDetails struct {
	value *WindowsTargetDetails
	isSet bool
}

func (v NullableWindowsTargetDetails) Get() *WindowsTargetDetails {
	return v.value
}

func (v *NullableWindowsTargetDetails) Set(val *WindowsTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableWindowsTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableWindowsTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWindowsTargetDetails(val *WindowsTargetDetails) *NullableWindowsTargetDetails {
	return &NullableWindowsTargetDetails{value: val, isSet: true}
}

func (v NullableWindowsTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWindowsTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


