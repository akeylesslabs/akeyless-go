/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// MongoDBTargetDetails struct for MongoDBTargetDetails
type MongoDBTargetDetails struct {
	MongodbAtlasApiPrivateKey *string `json:"mongodb_atlas_api_private_key,omitempty"`
	MongodbAtlasApiPublicKey *string `json:"mongodb_atlas_api_public_key,omitempty"`
	// mongodb atlas fields
	MongodbAtlasProjectId *string `json:"mongodb_atlas_project_id,omitempty"`
	// common fields
	MongodbDbName *string `json:"mongodb_db_name,omitempty"`
	MongodbDefaultAuthDb *string `json:"mongodb_default_auth_db,omitempty"`
	MongodbHostPort *string `json:"mongodb_host_port,omitempty"`
	MongodbIsAtlas *bool `json:"mongodb_is_atlas,omitempty"`
	MongodbPassword *string `json:"mongodb_password,omitempty"`
	// mongodb fields
	MongodbUriConnection *string `json:"mongodb_uri_connection,omitempty"`
	MongodbUriOptions *string `json:"mongodb_uri_options,omitempty"`
	MongodbUsername *string `json:"mongodb_username,omitempty"`
}

// NewMongoDBTargetDetails instantiates a new MongoDBTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMongoDBTargetDetails() *MongoDBTargetDetails {
	this := MongoDBTargetDetails{}
	return &this
}

// NewMongoDBTargetDetailsWithDefaults instantiates a new MongoDBTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongoDBTargetDetailsWithDefaults() *MongoDBTargetDetails {
	this := MongoDBTargetDetails{}
	return &this
}

// GetMongodbAtlasApiPrivateKey returns the MongodbAtlasApiPrivateKey field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbAtlasApiPrivateKey() string {
	if o == nil || o.MongodbAtlasApiPrivateKey == nil {
		var ret string
		return ret
	}
	return *o.MongodbAtlasApiPrivateKey
}

// GetMongodbAtlasApiPrivateKeyOk returns a tuple with the MongodbAtlasApiPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbAtlasApiPrivateKeyOk() (*string, bool) {
	if o == nil || o.MongodbAtlasApiPrivateKey == nil {
		return nil, false
	}
	return o.MongodbAtlasApiPrivateKey, true
}

// HasMongodbAtlasApiPrivateKey returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbAtlasApiPrivateKey() bool {
	if o != nil && o.MongodbAtlasApiPrivateKey != nil {
		return true
	}

	return false
}

// SetMongodbAtlasApiPrivateKey gets a reference to the given string and assigns it to the MongodbAtlasApiPrivateKey field.
func (o *MongoDBTargetDetails) SetMongodbAtlasApiPrivateKey(v string) {
	o.MongodbAtlasApiPrivateKey = &v
}

// GetMongodbAtlasApiPublicKey returns the MongodbAtlasApiPublicKey field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbAtlasApiPublicKey() string {
	if o == nil || o.MongodbAtlasApiPublicKey == nil {
		var ret string
		return ret
	}
	return *o.MongodbAtlasApiPublicKey
}

// GetMongodbAtlasApiPublicKeyOk returns a tuple with the MongodbAtlasApiPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbAtlasApiPublicKeyOk() (*string, bool) {
	if o == nil || o.MongodbAtlasApiPublicKey == nil {
		return nil, false
	}
	return o.MongodbAtlasApiPublicKey, true
}

// HasMongodbAtlasApiPublicKey returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbAtlasApiPublicKey() bool {
	if o != nil && o.MongodbAtlasApiPublicKey != nil {
		return true
	}

	return false
}

// SetMongodbAtlasApiPublicKey gets a reference to the given string and assigns it to the MongodbAtlasApiPublicKey field.
func (o *MongoDBTargetDetails) SetMongodbAtlasApiPublicKey(v string) {
	o.MongodbAtlasApiPublicKey = &v
}

// GetMongodbAtlasProjectId returns the MongodbAtlasProjectId field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbAtlasProjectId() string {
	if o == nil || o.MongodbAtlasProjectId == nil {
		var ret string
		return ret
	}
	return *o.MongodbAtlasProjectId
}

// GetMongodbAtlasProjectIdOk returns a tuple with the MongodbAtlasProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbAtlasProjectIdOk() (*string, bool) {
	if o == nil || o.MongodbAtlasProjectId == nil {
		return nil, false
	}
	return o.MongodbAtlasProjectId, true
}

// HasMongodbAtlasProjectId returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbAtlasProjectId() bool {
	if o != nil && o.MongodbAtlasProjectId != nil {
		return true
	}

	return false
}

// SetMongodbAtlasProjectId gets a reference to the given string and assigns it to the MongodbAtlasProjectId field.
func (o *MongoDBTargetDetails) SetMongodbAtlasProjectId(v string) {
	o.MongodbAtlasProjectId = &v
}

// GetMongodbDbName returns the MongodbDbName field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbDbName() string {
	if o == nil || o.MongodbDbName == nil {
		var ret string
		return ret
	}
	return *o.MongodbDbName
}

// GetMongodbDbNameOk returns a tuple with the MongodbDbName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbDbNameOk() (*string, bool) {
	if o == nil || o.MongodbDbName == nil {
		return nil, false
	}
	return o.MongodbDbName, true
}

// HasMongodbDbName returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbDbName() bool {
	if o != nil && o.MongodbDbName != nil {
		return true
	}

	return false
}

// SetMongodbDbName gets a reference to the given string and assigns it to the MongodbDbName field.
func (o *MongoDBTargetDetails) SetMongodbDbName(v string) {
	o.MongodbDbName = &v
}

// GetMongodbDefaultAuthDb returns the MongodbDefaultAuthDb field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbDefaultAuthDb() string {
	if o == nil || o.MongodbDefaultAuthDb == nil {
		var ret string
		return ret
	}
	return *o.MongodbDefaultAuthDb
}

// GetMongodbDefaultAuthDbOk returns a tuple with the MongodbDefaultAuthDb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbDefaultAuthDbOk() (*string, bool) {
	if o == nil || o.MongodbDefaultAuthDb == nil {
		return nil, false
	}
	return o.MongodbDefaultAuthDb, true
}

// HasMongodbDefaultAuthDb returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbDefaultAuthDb() bool {
	if o != nil && o.MongodbDefaultAuthDb != nil {
		return true
	}

	return false
}

// SetMongodbDefaultAuthDb gets a reference to the given string and assigns it to the MongodbDefaultAuthDb field.
func (o *MongoDBTargetDetails) SetMongodbDefaultAuthDb(v string) {
	o.MongodbDefaultAuthDb = &v
}

// GetMongodbHostPort returns the MongodbHostPort field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbHostPort() string {
	if o == nil || o.MongodbHostPort == nil {
		var ret string
		return ret
	}
	return *o.MongodbHostPort
}

// GetMongodbHostPortOk returns a tuple with the MongodbHostPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbHostPortOk() (*string, bool) {
	if o == nil || o.MongodbHostPort == nil {
		return nil, false
	}
	return o.MongodbHostPort, true
}

// HasMongodbHostPort returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbHostPort() bool {
	if o != nil && o.MongodbHostPort != nil {
		return true
	}

	return false
}

// SetMongodbHostPort gets a reference to the given string and assigns it to the MongodbHostPort field.
func (o *MongoDBTargetDetails) SetMongodbHostPort(v string) {
	o.MongodbHostPort = &v
}

// GetMongodbIsAtlas returns the MongodbIsAtlas field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbIsAtlas() bool {
	if o == nil || o.MongodbIsAtlas == nil {
		var ret bool
		return ret
	}
	return *o.MongodbIsAtlas
}

// GetMongodbIsAtlasOk returns a tuple with the MongodbIsAtlas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbIsAtlasOk() (*bool, bool) {
	if o == nil || o.MongodbIsAtlas == nil {
		return nil, false
	}
	return o.MongodbIsAtlas, true
}

// HasMongodbIsAtlas returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbIsAtlas() bool {
	if o != nil && o.MongodbIsAtlas != nil {
		return true
	}

	return false
}

// SetMongodbIsAtlas gets a reference to the given bool and assigns it to the MongodbIsAtlas field.
func (o *MongoDBTargetDetails) SetMongodbIsAtlas(v bool) {
	o.MongodbIsAtlas = &v
}

// GetMongodbPassword returns the MongodbPassword field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbPassword() string {
	if o == nil || o.MongodbPassword == nil {
		var ret string
		return ret
	}
	return *o.MongodbPassword
}

// GetMongodbPasswordOk returns a tuple with the MongodbPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbPasswordOk() (*string, bool) {
	if o == nil || o.MongodbPassword == nil {
		return nil, false
	}
	return o.MongodbPassword, true
}

// HasMongodbPassword returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbPassword() bool {
	if o != nil && o.MongodbPassword != nil {
		return true
	}

	return false
}

// SetMongodbPassword gets a reference to the given string and assigns it to the MongodbPassword field.
func (o *MongoDBTargetDetails) SetMongodbPassword(v string) {
	o.MongodbPassword = &v
}

// GetMongodbUriConnection returns the MongodbUriConnection field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbUriConnection() string {
	if o == nil || o.MongodbUriConnection == nil {
		var ret string
		return ret
	}
	return *o.MongodbUriConnection
}

// GetMongodbUriConnectionOk returns a tuple with the MongodbUriConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbUriConnectionOk() (*string, bool) {
	if o == nil || o.MongodbUriConnection == nil {
		return nil, false
	}
	return o.MongodbUriConnection, true
}

// HasMongodbUriConnection returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbUriConnection() bool {
	if o != nil && o.MongodbUriConnection != nil {
		return true
	}

	return false
}

// SetMongodbUriConnection gets a reference to the given string and assigns it to the MongodbUriConnection field.
func (o *MongoDBTargetDetails) SetMongodbUriConnection(v string) {
	o.MongodbUriConnection = &v
}

// GetMongodbUriOptions returns the MongodbUriOptions field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbUriOptions() string {
	if o == nil || o.MongodbUriOptions == nil {
		var ret string
		return ret
	}
	return *o.MongodbUriOptions
}

// GetMongodbUriOptionsOk returns a tuple with the MongodbUriOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbUriOptionsOk() (*string, bool) {
	if o == nil || o.MongodbUriOptions == nil {
		return nil, false
	}
	return o.MongodbUriOptions, true
}

// HasMongodbUriOptions returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbUriOptions() bool {
	if o != nil && o.MongodbUriOptions != nil {
		return true
	}

	return false
}

// SetMongodbUriOptions gets a reference to the given string and assigns it to the MongodbUriOptions field.
func (o *MongoDBTargetDetails) SetMongodbUriOptions(v string) {
	o.MongodbUriOptions = &v
}

// GetMongodbUsername returns the MongodbUsername field value if set, zero value otherwise.
func (o *MongoDBTargetDetails) GetMongodbUsername() string {
	if o == nil || o.MongodbUsername == nil {
		var ret string
		return ret
	}
	return *o.MongodbUsername
}

// GetMongodbUsernameOk returns a tuple with the MongodbUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongoDBTargetDetails) GetMongodbUsernameOk() (*string, bool) {
	if o == nil || o.MongodbUsername == nil {
		return nil, false
	}
	return o.MongodbUsername, true
}

// HasMongodbUsername returns a boolean if a field has been set.
func (o *MongoDBTargetDetails) HasMongodbUsername() bool {
	if o != nil && o.MongodbUsername != nil {
		return true
	}

	return false
}

// SetMongodbUsername gets a reference to the given string and assigns it to the MongodbUsername field.
func (o *MongoDBTargetDetails) SetMongodbUsername(v string) {
	o.MongodbUsername = &v
}

func (o MongoDBTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MongodbAtlasApiPrivateKey != nil {
		toSerialize["mongodb_atlas_api_private_key"] = o.MongodbAtlasApiPrivateKey
	}
	if o.MongodbAtlasApiPublicKey != nil {
		toSerialize["mongodb_atlas_api_public_key"] = o.MongodbAtlasApiPublicKey
	}
	if o.MongodbAtlasProjectId != nil {
		toSerialize["mongodb_atlas_project_id"] = o.MongodbAtlasProjectId
	}
	if o.MongodbDbName != nil {
		toSerialize["mongodb_db_name"] = o.MongodbDbName
	}
	if o.MongodbDefaultAuthDb != nil {
		toSerialize["mongodb_default_auth_db"] = o.MongodbDefaultAuthDb
	}
	if o.MongodbHostPort != nil {
		toSerialize["mongodb_host_port"] = o.MongodbHostPort
	}
	if o.MongodbIsAtlas != nil {
		toSerialize["mongodb_is_atlas"] = o.MongodbIsAtlas
	}
	if o.MongodbPassword != nil {
		toSerialize["mongodb_password"] = o.MongodbPassword
	}
	if o.MongodbUriConnection != nil {
		toSerialize["mongodb_uri_connection"] = o.MongodbUriConnection
	}
	if o.MongodbUriOptions != nil {
		toSerialize["mongodb_uri_options"] = o.MongodbUriOptions
	}
	if o.MongodbUsername != nil {
		toSerialize["mongodb_username"] = o.MongodbUsername
	}
	return json.Marshal(toSerialize)
}

type NullableMongoDBTargetDetails struct {
	value *MongoDBTargetDetails
	isSet bool
}

func (v NullableMongoDBTargetDetails) Get() *MongoDBTargetDetails {
	return v.value
}

func (v *NullableMongoDBTargetDetails) Set(val *MongoDBTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMongoDBTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMongoDBTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMongoDBTargetDetails(val *MongoDBTargetDetails) *NullableMongoDBTargetDetails {
	return &NullableMongoDBTargetDetails{value: val, isSet: true}
}

func (v NullableMongoDBTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMongoDBTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


