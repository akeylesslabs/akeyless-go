/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// ItemGeneralInfo struct for ItemGeneralInfo
type ItemGeneralInfo struct {
	CertIssueDetails *CertificateIssueInfo `json:"cert_issue_details,omitempty"`
	CertificateChainInfo *CertificateChainInfo `json:"certificate_chain_info,omitempty"`
	CertificatesTemplateInfo *CertificateTemplateInfo `json:"certificates_template_info,omitempty"`
	ClassicKeyDetails *ClassicKeyDetailsInfo `json:"classic_key_details,omitempty"`
	ClusterGwUrl *string `json:"cluster_gw_url,omitempty"`
	DisplayMetadata *string `json:"display_metadata,omitempty"`
	DynamicSecretProducerDetails *DynamicSecretProducerInfo `json:"dynamic_secret_producer_details,omitempty"`
	ImporterInfo *ImporterInfo `json:"importer_info,omitempty"`
	OidcClientInfo *OidcClientInfo `json:"oidc_client_info,omitempty"`
	PasswordPolicy *PasswordPolicyInfo `json:"password_policy,omitempty"`
	RotatedSecretDetails *RotatedSecretDetailsInfo `json:"rotated_secret_details,omitempty"`
	SecureRemoteAccessDetails *SecureRemoteAccess `json:"secure_remote_access_details,omitempty"`
	StaticSecretInfo *StaticSecretDetailsInfo `json:"static_secret_info,omitempty"`
	TokenizerInfo *TokenizerInfo `json:"tokenizer_info,omitempty"`
}

// NewItemGeneralInfo instantiates a new ItemGeneralInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemGeneralInfo() *ItemGeneralInfo {
	this := ItemGeneralInfo{}
	return &this
}

// NewItemGeneralInfoWithDefaults instantiates a new ItemGeneralInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemGeneralInfoWithDefaults() *ItemGeneralInfo {
	this := ItemGeneralInfo{}
	return &this
}

// GetCertIssueDetails returns the CertIssueDetails field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetCertIssueDetails() CertificateIssueInfo {
	if o == nil || o.CertIssueDetails == nil {
		var ret CertificateIssueInfo
		return ret
	}
	return *o.CertIssueDetails
}

// GetCertIssueDetailsOk returns a tuple with the CertIssueDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetCertIssueDetailsOk() (*CertificateIssueInfo, bool) {
	if o == nil || o.CertIssueDetails == nil {
		return nil, false
	}
	return o.CertIssueDetails, true
}

// HasCertIssueDetails returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasCertIssueDetails() bool {
	if o != nil && o.CertIssueDetails != nil {
		return true
	}

	return false
}

// SetCertIssueDetails gets a reference to the given CertificateIssueInfo and assigns it to the CertIssueDetails field.
func (o *ItemGeneralInfo) SetCertIssueDetails(v CertificateIssueInfo) {
	o.CertIssueDetails = &v
}

// GetCertificateChainInfo returns the CertificateChainInfo field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetCertificateChainInfo() CertificateChainInfo {
	if o == nil || o.CertificateChainInfo == nil {
		var ret CertificateChainInfo
		return ret
	}
	return *o.CertificateChainInfo
}

// GetCertificateChainInfoOk returns a tuple with the CertificateChainInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetCertificateChainInfoOk() (*CertificateChainInfo, bool) {
	if o == nil || o.CertificateChainInfo == nil {
		return nil, false
	}
	return o.CertificateChainInfo, true
}

// HasCertificateChainInfo returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasCertificateChainInfo() bool {
	if o != nil && o.CertificateChainInfo != nil {
		return true
	}

	return false
}

// SetCertificateChainInfo gets a reference to the given CertificateChainInfo and assigns it to the CertificateChainInfo field.
func (o *ItemGeneralInfo) SetCertificateChainInfo(v CertificateChainInfo) {
	o.CertificateChainInfo = &v
}

// GetCertificatesTemplateInfo returns the CertificatesTemplateInfo field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetCertificatesTemplateInfo() CertificateTemplateInfo {
	if o == nil || o.CertificatesTemplateInfo == nil {
		var ret CertificateTemplateInfo
		return ret
	}
	return *o.CertificatesTemplateInfo
}

// GetCertificatesTemplateInfoOk returns a tuple with the CertificatesTemplateInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetCertificatesTemplateInfoOk() (*CertificateTemplateInfo, bool) {
	if o == nil || o.CertificatesTemplateInfo == nil {
		return nil, false
	}
	return o.CertificatesTemplateInfo, true
}

// HasCertificatesTemplateInfo returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasCertificatesTemplateInfo() bool {
	if o != nil && o.CertificatesTemplateInfo != nil {
		return true
	}

	return false
}

// SetCertificatesTemplateInfo gets a reference to the given CertificateTemplateInfo and assigns it to the CertificatesTemplateInfo field.
func (o *ItemGeneralInfo) SetCertificatesTemplateInfo(v CertificateTemplateInfo) {
	o.CertificatesTemplateInfo = &v
}

// GetClassicKeyDetails returns the ClassicKeyDetails field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetClassicKeyDetails() ClassicKeyDetailsInfo {
	if o == nil || o.ClassicKeyDetails == nil {
		var ret ClassicKeyDetailsInfo
		return ret
	}
	return *o.ClassicKeyDetails
}

// GetClassicKeyDetailsOk returns a tuple with the ClassicKeyDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetClassicKeyDetailsOk() (*ClassicKeyDetailsInfo, bool) {
	if o == nil || o.ClassicKeyDetails == nil {
		return nil, false
	}
	return o.ClassicKeyDetails, true
}

// HasClassicKeyDetails returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasClassicKeyDetails() bool {
	if o != nil && o.ClassicKeyDetails != nil {
		return true
	}

	return false
}

// SetClassicKeyDetails gets a reference to the given ClassicKeyDetailsInfo and assigns it to the ClassicKeyDetails field.
func (o *ItemGeneralInfo) SetClassicKeyDetails(v ClassicKeyDetailsInfo) {
	o.ClassicKeyDetails = &v
}

// GetClusterGwUrl returns the ClusterGwUrl field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetClusterGwUrl() string {
	if o == nil || o.ClusterGwUrl == nil {
		var ret string
		return ret
	}
	return *o.ClusterGwUrl
}

// GetClusterGwUrlOk returns a tuple with the ClusterGwUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetClusterGwUrlOk() (*string, bool) {
	if o == nil || o.ClusterGwUrl == nil {
		return nil, false
	}
	return o.ClusterGwUrl, true
}

// HasClusterGwUrl returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasClusterGwUrl() bool {
	if o != nil && o.ClusterGwUrl != nil {
		return true
	}

	return false
}

// SetClusterGwUrl gets a reference to the given string and assigns it to the ClusterGwUrl field.
func (o *ItemGeneralInfo) SetClusterGwUrl(v string) {
	o.ClusterGwUrl = &v
}

// GetDisplayMetadata returns the DisplayMetadata field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetDisplayMetadata() string {
	if o == nil || o.DisplayMetadata == nil {
		var ret string
		return ret
	}
	return *o.DisplayMetadata
}

// GetDisplayMetadataOk returns a tuple with the DisplayMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetDisplayMetadataOk() (*string, bool) {
	if o == nil || o.DisplayMetadata == nil {
		return nil, false
	}
	return o.DisplayMetadata, true
}

// HasDisplayMetadata returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasDisplayMetadata() bool {
	if o != nil && o.DisplayMetadata != nil {
		return true
	}

	return false
}

// SetDisplayMetadata gets a reference to the given string and assigns it to the DisplayMetadata field.
func (o *ItemGeneralInfo) SetDisplayMetadata(v string) {
	o.DisplayMetadata = &v
}

// GetDynamicSecretProducerDetails returns the DynamicSecretProducerDetails field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetDynamicSecretProducerDetails() DynamicSecretProducerInfo {
	if o == nil || o.DynamicSecretProducerDetails == nil {
		var ret DynamicSecretProducerInfo
		return ret
	}
	return *o.DynamicSecretProducerDetails
}

// GetDynamicSecretProducerDetailsOk returns a tuple with the DynamicSecretProducerDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetDynamicSecretProducerDetailsOk() (*DynamicSecretProducerInfo, bool) {
	if o == nil || o.DynamicSecretProducerDetails == nil {
		return nil, false
	}
	return o.DynamicSecretProducerDetails, true
}

// HasDynamicSecretProducerDetails returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasDynamicSecretProducerDetails() bool {
	if o != nil && o.DynamicSecretProducerDetails != nil {
		return true
	}

	return false
}

// SetDynamicSecretProducerDetails gets a reference to the given DynamicSecretProducerInfo and assigns it to the DynamicSecretProducerDetails field.
func (o *ItemGeneralInfo) SetDynamicSecretProducerDetails(v DynamicSecretProducerInfo) {
	o.DynamicSecretProducerDetails = &v
}

// GetImporterInfo returns the ImporterInfo field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetImporterInfo() ImporterInfo {
	if o == nil || o.ImporterInfo == nil {
		var ret ImporterInfo
		return ret
	}
	return *o.ImporterInfo
}

// GetImporterInfoOk returns a tuple with the ImporterInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetImporterInfoOk() (*ImporterInfo, bool) {
	if o == nil || o.ImporterInfo == nil {
		return nil, false
	}
	return o.ImporterInfo, true
}

// HasImporterInfo returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasImporterInfo() bool {
	if o != nil && o.ImporterInfo != nil {
		return true
	}

	return false
}

// SetImporterInfo gets a reference to the given ImporterInfo and assigns it to the ImporterInfo field.
func (o *ItemGeneralInfo) SetImporterInfo(v ImporterInfo) {
	o.ImporterInfo = &v
}

// GetOidcClientInfo returns the OidcClientInfo field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetOidcClientInfo() OidcClientInfo {
	if o == nil || o.OidcClientInfo == nil {
		var ret OidcClientInfo
		return ret
	}
	return *o.OidcClientInfo
}

// GetOidcClientInfoOk returns a tuple with the OidcClientInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetOidcClientInfoOk() (*OidcClientInfo, bool) {
	if o == nil || o.OidcClientInfo == nil {
		return nil, false
	}
	return o.OidcClientInfo, true
}

// HasOidcClientInfo returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasOidcClientInfo() bool {
	if o != nil && o.OidcClientInfo != nil {
		return true
	}

	return false
}

// SetOidcClientInfo gets a reference to the given OidcClientInfo and assigns it to the OidcClientInfo field.
func (o *ItemGeneralInfo) SetOidcClientInfo(v OidcClientInfo) {
	o.OidcClientInfo = &v
}

// GetPasswordPolicy returns the PasswordPolicy field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetPasswordPolicy() PasswordPolicyInfo {
	if o == nil || o.PasswordPolicy == nil {
		var ret PasswordPolicyInfo
		return ret
	}
	return *o.PasswordPolicy
}

// GetPasswordPolicyOk returns a tuple with the PasswordPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetPasswordPolicyOk() (*PasswordPolicyInfo, bool) {
	if o == nil || o.PasswordPolicy == nil {
		return nil, false
	}
	return o.PasswordPolicy, true
}

// HasPasswordPolicy returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasPasswordPolicy() bool {
	if o != nil && o.PasswordPolicy != nil {
		return true
	}

	return false
}

// SetPasswordPolicy gets a reference to the given PasswordPolicyInfo and assigns it to the PasswordPolicy field.
func (o *ItemGeneralInfo) SetPasswordPolicy(v PasswordPolicyInfo) {
	o.PasswordPolicy = &v
}

// GetRotatedSecretDetails returns the RotatedSecretDetails field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetRotatedSecretDetails() RotatedSecretDetailsInfo {
	if o == nil || o.RotatedSecretDetails == nil {
		var ret RotatedSecretDetailsInfo
		return ret
	}
	return *o.RotatedSecretDetails
}

// GetRotatedSecretDetailsOk returns a tuple with the RotatedSecretDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetRotatedSecretDetailsOk() (*RotatedSecretDetailsInfo, bool) {
	if o == nil || o.RotatedSecretDetails == nil {
		return nil, false
	}
	return o.RotatedSecretDetails, true
}

// HasRotatedSecretDetails returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasRotatedSecretDetails() bool {
	if o != nil && o.RotatedSecretDetails != nil {
		return true
	}

	return false
}

// SetRotatedSecretDetails gets a reference to the given RotatedSecretDetailsInfo and assigns it to the RotatedSecretDetails field.
func (o *ItemGeneralInfo) SetRotatedSecretDetails(v RotatedSecretDetailsInfo) {
	o.RotatedSecretDetails = &v
}

// GetSecureRemoteAccessDetails returns the SecureRemoteAccessDetails field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetSecureRemoteAccessDetails() SecureRemoteAccess {
	if o == nil || o.SecureRemoteAccessDetails == nil {
		var ret SecureRemoteAccess
		return ret
	}
	return *o.SecureRemoteAccessDetails
}

// GetSecureRemoteAccessDetailsOk returns a tuple with the SecureRemoteAccessDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetSecureRemoteAccessDetailsOk() (*SecureRemoteAccess, bool) {
	if o == nil || o.SecureRemoteAccessDetails == nil {
		return nil, false
	}
	return o.SecureRemoteAccessDetails, true
}

// HasSecureRemoteAccessDetails returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasSecureRemoteAccessDetails() bool {
	if o != nil && o.SecureRemoteAccessDetails != nil {
		return true
	}

	return false
}

// SetSecureRemoteAccessDetails gets a reference to the given SecureRemoteAccess and assigns it to the SecureRemoteAccessDetails field.
func (o *ItemGeneralInfo) SetSecureRemoteAccessDetails(v SecureRemoteAccess) {
	o.SecureRemoteAccessDetails = &v
}

// GetStaticSecretInfo returns the StaticSecretInfo field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetStaticSecretInfo() StaticSecretDetailsInfo {
	if o == nil || o.StaticSecretInfo == nil {
		var ret StaticSecretDetailsInfo
		return ret
	}
	return *o.StaticSecretInfo
}

// GetStaticSecretInfoOk returns a tuple with the StaticSecretInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetStaticSecretInfoOk() (*StaticSecretDetailsInfo, bool) {
	if o == nil || o.StaticSecretInfo == nil {
		return nil, false
	}
	return o.StaticSecretInfo, true
}

// HasStaticSecretInfo returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasStaticSecretInfo() bool {
	if o != nil && o.StaticSecretInfo != nil {
		return true
	}

	return false
}

// SetStaticSecretInfo gets a reference to the given StaticSecretDetailsInfo and assigns it to the StaticSecretInfo field.
func (o *ItemGeneralInfo) SetStaticSecretInfo(v StaticSecretDetailsInfo) {
	o.StaticSecretInfo = &v
}

// GetTokenizerInfo returns the TokenizerInfo field value if set, zero value otherwise.
func (o *ItemGeneralInfo) GetTokenizerInfo() TokenizerInfo {
	if o == nil || o.TokenizerInfo == nil {
		var ret TokenizerInfo
		return ret
	}
	return *o.TokenizerInfo
}

// GetTokenizerInfoOk returns a tuple with the TokenizerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemGeneralInfo) GetTokenizerInfoOk() (*TokenizerInfo, bool) {
	if o == nil || o.TokenizerInfo == nil {
		return nil, false
	}
	return o.TokenizerInfo, true
}

// HasTokenizerInfo returns a boolean if a field has been set.
func (o *ItemGeneralInfo) HasTokenizerInfo() bool {
	if o != nil && o.TokenizerInfo != nil {
		return true
	}

	return false
}

// SetTokenizerInfo gets a reference to the given TokenizerInfo and assigns it to the TokenizerInfo field.
func (o *ItemGeneralInfo) SetTokenizerInfo(v TokenizerInfo) {
	o.TokenizerInfo = &v
}

func (o ItemGeneralInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CertIssueDetails != nil {
		toSerialize["cert_issue_details"] = o.CertIssueDetails
	}
	if o.CertificateChainInfo != nil {
		toSerialize["certificate_chain_info"] = o.CertificateChainInfo
	}
	if o.CertificatesTemplateInfo != nil {
		toSerialize["certificates_template_info"] = o.CertificatesTemplateInfo
	}
	if o.ClassicKeyDetails != nil {
		toSerialize["classic_key_details"] = o.ClassicKeyDetails
	}
	if o.ClusterGwUrl != nil {
		toSerialize["cluster_gw_url"] = o.ClusterGwUrl
	}
	if o.DisplayMetadata != nil {
		toSerialize["display_metadata"] = o.DisplayMetadata
	}
	if o.DynamicSecretProducerDetails != nil {
		toSerialize["dynamic_secret_producer_details"] = o.DynamicSecretProducerDetails
	}
	if o.ImporterInfo != nil {
		toSerialize["importer_info"] = o.ImporterInfo
	}
	if o.OidcClientInfo != nil {
		toSerialize["oidc_client_info"] = o.OidcClientInfo
	}
	if o.PasswordPolicy != nil {
		toSerialize["password_policy"] = o.PasswordPolicy
	}
	if o.RotatedSecretDetails != nil {
		toSerialize["rotated_secret_details"] = o.RotatedSecretDetails
	}
	if o.SecureRemoteAccessDetails != nil {
		toSerialize["secure_remote_access_details"] = o.SecureRemoteAccessDetails
	}
	if o.StaticSecretInfo != nil {
		toSerialize["static_secret_info"] = o.StaticSecretInfo
	}
	if o.TokenizerInfo != nil {
		toSerialize["tokenizer_info"] = o.TokenizerInfo
	}
	return json.Marshal(toSerialize)
}

type NullableItemGeneralInfo struct {
	value *ItemGeneralInfo
	isSet bool
}

func (v NullableItemGeneralInfo) Get() *ItemGeneralInfo {
	return v.value
}

func (v *NullableItemGeneralInfo) Set(val *ItemGeneralInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableItemGeneralInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableItemGeneralInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemGeneralInfo(val *ItemGeneralInfo) *NullableItemGeneralInfo {
	return &NullableItemGeneralInfo{value: val, isSet: true}
}

func (v NullableItemGeneralInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemGeneralInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


