/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// CreateAuthMethodOCIOutput struct for CreateAuthMethodOCIOutput
type CreateAuthMethodOCIOutput struct {
	AccessId *string `json:"access_id,omitempty"`
}

// NewCreateAuthMethodOCIOutput instantiates a new CreateAuthMethodOCIOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAuthMethodOCIOutput() *CreateAuthMethodOCIOutput {
	this := CreateAuthMethodOCIOutput{}
	return &this
}

// NewCreateAuthMethodOCIOutputWithDefaults instantiates a new CreateAuthMethodOCIOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAuthMethodOCIOutputWithDefaults() *CreateAuthMethodOCIOutput {
	this := CreateAuthMethodOCIOutput{}
	return &this
}

// GetAccessId returns the AccessId field value if set, zero value otherwise.
func (o *CreateAuthMethodOCIOutput) GetAccessId() string {
	if o == nil || o.AccessId == nil {
		var ret string
		return ret
	}
	return *o.AccessId
}

// GetAccessIdOk returns a tuple with the AccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOCIOutput) GetAccessIdOk() (*string, bool) {
	if o == nil || o.AccessId == nil {
		return nil, false
	}
	return o.AccessId, true
}

// HasAccessId returns a boolean if a field has been set.
func (o *CreateAuthMethodOCIOutput) HasAccessId() bool {
	if o != nil && o.AccessId != nil {
		return true
	}

	return false
}

// SetAccessId gets a reference to the given string and assigns it to the AccessId field.
func (o *CreateAuthMethodOCIOutput) SetAccessId(v string) {
	o.AccessId = &v
}

func (o CreateAuthMethodOCIOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessId != nil {
		toSerialize["access_id"] = o.AccessId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAuthMethodOCIOutput struct {
	value *CreateAuthMethodOCIOutput
	isSet bool
}

func (v NullableCreateAuthMethodOCIOutput) Get() *CreateAuthMethodOCIOutput {
	return v.value
}

func (v *NullableCreateAuthMethodOCIOutput) Set(val *CreateAuthMethodOCIOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAuthMethodOCIOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAuthMethodOCIOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAuthMethodOCIOutput(val *CreateAuthMethodOCIOutput) *NullableCreateAuthMethodOCIOutput {
	return &NullableCreateAuthMethodOCIOutput{value: val, isSet: true}
}

func (v NullableCreateAuthMethodOCIOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAuthMethodOCIOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


