/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GcpTargetDetails struct for GcpTargetDetails
type GcpTargetDetails struct {
	GcpServiceAccountEmail *string `json:"gcp_service_account_email,omitempty"`
	GcpServiceAccountKey *string `json:"gcp_service_account_key,omitempty"`
	GcpServiceAccountKeyBase64 *string `json:"gcp_service_account_key_base64,omitempty"`
	GcpServiceAccountKeyId *string `json:"gcp_service_account_key_id,omitempty"`
	UseGwCloudIdentity *bool `json:"use_gw_cloud_identity,omitempty"`
}

// NewGcpTargetDetails instantiates a new GcpTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpTargetDetails() *GcpTargetDetails {
	this := GcpTargetDetails{}
	return &this
}

// NewGcpTargetDetailsWithDefaults instantiates a new GcpTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpTargetDetailsWithDefaults() *GcpTargetDetails {
	this := GcpTargetDetails{}
	return &this
}

// GetGcpServiceAccountEmail returns the GcpServiceAccountEmail field value if set, zero value otherwise.
func (o *GcpTargetDetails) GetGcpServiceAccountEmail() string {
	if o == nil || o.GcpServiceAccountEmail == nil {
		var ret string
		return ret
	}
	return *o.GcpServiceAccountEmail
}

// GetGcpServiceAccountEmailOk returns a tuple with the GcpServiceAccountEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpTargetDetails) GetGcpServiceAccountEmailOk() (*string, bool) {
	if o == nil || o.GcpServiceAccountEmail == nil {
		return nil, false
	}
	return o.GcpServiceAccountEmail, true
}

// HasGcpServiceAccountEmail returns a boolean if a field has been set.
func (o *GcpTargetDetails) HasGcpServiceAccountEmail() bool {
	if o != nil && o.GcpServiceAccountEmail != nil {
		return true
	}

	return false
}

// SetGcpServiceAccountEmail gets a reference to the given string and assigns it to the GcpServiceAccountEmail field.
func (o *GcpTargetDetails) SetGcpServiceAccountEmail(v string) {
	o.GcpServiceAccountEmail = &v
}

// GetGcpServiceAccountKey returns the GcpServiceAccountKey field value if set, zero value otherwise.
func (o *GcpTargetDetails) GetGcpServiceAccountKey() string {
	if o == nil || o.GcpServiceAccountKey == nil {
		var ret string
		return ret
	}
	return *o.GcpServiceAccountKey
}

// GetGcpServiceAccountKeyOk returns a tuple with the GcpServiceAccountKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpTargetDetails) GetGcpServiceAccountKeyOk() (*string, bool) {
	if o == nil || o.GcpServiceAccountKey == nil {
		return nil, false
	}
	return o.GcpServiceAccountKey, true
}

// HasGcpServiceAccountKey returns a boolean if a field has been set.
func (o *GcpTargetDetails) HasGcpServiceAccountKey() bool {
	if o != nil && o.GcpServiceAccountKey != nil {
		return true
	}

	return false
}

// SetGcpServiceAccountKey gets a reference to the given string and assigns it to the GcpServiceAccountKey field.
func (o *GcpTargetDetails) SetGcpServiceAccountKey(v string) {
	o.GcpServiceAccountKey = &v
}

// GetGcpServiceAccountKeyBase64 returns the GcpServiceAccountKeyBase64 field value if set, zero value otherwise.
func (o *GcpTargetDetails) GetGcpServiceAccountKeyBase64() string {
	if o == nil || o.GcpServiceAccountKeyBase64 == nil {
		var ret string
		return ret
	}
	return *o.GcpServiceAccountKeyBase64
}

// GetGcpServiceAccountKeyBase64Ok returns a tuple with the GcpServiceAccountKeyBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpTargetDetails) GetGcpServiceAccountKeyBase64Ok() (*string, bool) {
	if o == nil || o.GcpServiceAccountKeyBase64 == nil {
		return nil, false
	}
	return o.GcpServiceAccountKeyBase64, true
}

// HasGcpServiceAccountKeyBase64 returns a boolean if a field has been set.
func (o *GcpTargetDetails) HasGcpServiceAccountKeyBase64() bool {
	if o != nil && o.GcpServiceAccountKeyBase64 != nil {
		return true
	}

	return false
}

// SetGcpServiceAccountKeyBase64 gets a reference to the given string and assigns it to the GcpServiceAccountKeyBase64 field.
func (o *GcpTargetDetails) SetGcpServiceAccountKeyBase64(v string) {
	o.GcpServiceAccountKeyBase64 = &v
}

// GetGcpServiceAccountKeyId returns the GcpServiceAccountKeyId field value if set, zero value otherwise.
func (o *GcpTargetDetails) GetGcpServiceAccountKeyId() string {
	if o == nil || o.GcpServiceAccountKeyId == nil {
		var ret string
		return ret
	}
	return *o.GcpServiceAccountKeyId
}

// GetGcpServiceAccountKeyIdOk returns a tuple with the GcpServiceAccountKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpTargetDetails) GetGcpServiceAccountKeyIdOk() (*string, bool) {
	if o == nil || o.GcpServiceAccountKeyId == nil {
		return nil, false
	}
	return o.GcpServiceAccountKeyId, true
}

// HasGcpServiceAccountKeyId returns a boolean if a field has been set.
func (o *GcpTargetDetails) HasGcpServiceAccountKeyId() bool {
	if o != nil && o.GcpServiceAccountKeyId != nil {
		return true
	}

	return false
}

// SetGcpServiceAccountKeyId gets a reference to the given string and assigns it to the GcpServiceAccountKeyId field.
func (o *GcpTargetDetails) SetGcpServiceAccountKeyId(v string) {
	o.GcpServiceAccountKeyId = &v
}

// GetUseGwCloudIdentity returns the UseGwCloudIdentity field value if set, zero value otherwise.
func (o *GcpTargetDetails) GetUseGwCloudIdentity() bool {
	if o == nil || o.UseGwCloudIdentity == nil {
		var ret bool
		return ret
	}
	return *o.UseGwCloudIdentity
}

// GetUseGwCloudIdentityOk returns a tuple with the UseGwCloudIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpTargetDetails) GetUseGwCloudIdentityOk() (*bool, bool) {
	if o == nil || o.UseGwCloudIdentity == nil {
		return nil, false
	}
	return o.UseGwCloudIdentity, true
}

// HasUseGwCloudIdentity returns a boolean if a field has been set.
func (o *GcpTargetDetails) HasUseGwCloudIdentity() bool {
	if o != nil && o.UseGwCloudIdentity != nil {
		return true
	}

	return false
}

// SetUseGwCloudIdentity gets a reference to the given bool and assigns it to the UseGwCloudIdentity field.
func (o *GcpTargetDetails) SetUseGwCloudIdentity(v bool) {
	o.UseGwCloudIdentity = &v
}

func (o GcpTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GcpServiceAccountEmail != nil {
		toSerialize["gcp_service_account_email"] = o.GcpServiceAccountEmail
	}
	if o.GcpServiceAccountKey != nil {
		toSerialize["gcp_service_account_key"] = o.GcpServiceAccountKey
	}
	if o.GcpServiceAccountKeyBase64 != nil {
		toSerialize["gcp_service_account_key_base64"] = o.GcpServiceAccountKeyBase64
	}
	if o.GcpServiceAccountKeyId != nil {
		toSerialize["gcp_service_account_key_id"] = o.GcpServiceAccountKeyId
	}
	if o.UseGwCloudIdentity != nil {
		toSerialize["use_gw_cloud_identity"] = o.UseGwCloudIdentity
	}
	return json.Marshal(toSerialize)
}

type NullableGcpTargetDetails struct {
	value *GcpTargetDetails
	isSet bool
}

func (v NullableGcpTargetDetails) Get() *GcpTargetDetails {
	return v.value
}

func (v *NullableGcpTargetDetails) Set(val *GcpTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpTargetDetails(val *GcpTargetDetails) *NullableGcpTargetDetails {
	return &NullableGcpTargetDetails{value: val, isSet: true}
}

func (v NullableGcpTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


