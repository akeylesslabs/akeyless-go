/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// RabbitMQTargetDetails struct for RabbitMQTargetDetails
type RabbitMQTargetDetails struct {
	RabbitmqServerPassword *string `json:"rabbitmq_server_password,omitempty"`
	RabbitmqServerUri *string `json:"rabbitmq_server_uri,omitempty"`
	RabbitmqServerUser *string `json:"rabbitmq_server_user,omitempty"`
}

// NewRabbitMQTargetDetails instantiates a new RabbitMQTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRabbitMQTargetDetails() *RabbitMQTargetDetails {
	this := RabbitMQTargetDetails{}
	return &this
}

// NewRabbitMQTargetDetailsWithDefaults instantiates a new RabbitMQTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRabbitMQTargetDetailsWithDefaults() *RabbitMQTargetDetails {
	this := RabbitMQTargetDetails{}
	return &this
}

// GetRabbitmqServerPassword returns the RabbitmqServerPassword field value if set, zero value otherwise.
func (o *RabbitMQTargetDetails) GetRabbitmqServerPassword() string {
	if o == nil || o.RabbitmqServerPassword == nil {
		var ret string
		return ret
	}
	return *o.RabbitmqServerPassword
}

// GetRabbitmqServerPasswordOk returns a tuple with the RabbitmqServerPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitMQTargetDetails) GetRabbitmqServerPasswordOk() (*string, bool) {
	if o == nil || o.RabbitmqServerPassword == nil {
		return nil, false
	}
	return o.RabbitmqServerPassword, true
}

// HasRabbitmqServerPassword returns a boolean if a field has been set.
func (o *RabbitMQTargetDetails) HasRabbitmqServerPassword() bool {
	if o != nil && o.RabbitmqServerPassword != nil {
		return true
	}

	return false
}

// SetRabbitmqServerPassword gets a reference to the given string and assigns it to the RabbitmqServerPassword field.
func (o *RabbitMQTargetDetails) SetRabbitmqServerPassword(v string) {
	o.RabbitmqServerPassword = &v
}

// GetRabbitmqServerUri returns the RabbitmqServerUri field value if set, zero value otherwise.
func (o *RabbitMQTargetDetails) GetRabbitmqServerUri() string {
	if o == nil || o.RabbitmqServerUri == nil {
		var ret string
		return ret
	}
	return *o.RabbitmqServerUri
}

// GetRabbitmqServerUriOk returns a tuple with the RabbitmqServerUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitMQTargetDetails) GetRabbitmqServerUriOk() (*string, bool) {
	if o == nil || o.RabbitmqServerUri == nil {
		return nil, false
	}
	return o.RabbitmqServerUri, true
}

// HasRabbitmqServerUri returns a boolean if a field has been set.
func (o *RabbitMQTargetDetails) HasRabbitmqServerUri() bool {
	if o != nil && o.RabbitmqServerUri != nil {
		return true
	}

	return false
}

// SetRabbitmqServerUri gets a reference to the given string and assigns it to the RabbitmqServerUri field.
func (o *RabbitMQTargetDetails) SetRabbitmqServerUri(v string) {
	o.RabbitmqServerUri = &v
}

// GetRabbitmqServerUser returns the RabbitmqServerUser field value if set, zero value otherwise.
func (o *RabbitMQTargetDetails) GetRabbitmqServerUser() string {
	if o == nil || o.RabbitmqServerUser == nil {
		var ret string
		return ret
	}
	return *o.RabbitmqServerUser
}

// GetRabbitmqServerUserOk returns a tuple with the RabbitmqServerUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitMQTargetDetails) GetRabbitmqServerUserOk() (*string, bool) {
	if o == nil || o.RabbitmqServerUser == nil {
		return nil, false
	}
	return o.RabbitmqServerUser, true
}

// HasRabbitmqServerUser returns a boolean if a field has been set.
func (o *RabbitMQTargetDetails) HasRabbitmqServerUser() bool {
	if o != nil && o.RabbitmqServerUser != nil {
		return true
	}

	return false
}

// SetRabbitmqServerUser gets a reference to the given string and assigns it to the RabbitmqServerUser field.
func (o *RabbitMQTargetDetails) SetRabbitmqServerUser(v string) {
	o.RabbitmqServerUser = &v
}

func (o RabbitMQTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RabbitmqServerPassword != nil {
		toSerialize["rabbitmq_server_password"] = o.RabbitmqServerPassword
	}
	if o.RabbitmqServerUri != nil {
		toSerialize["rabbitmq_server_uri"] = o.RabbitmqServerUri
	}
	if o.RabbitmqServerUser != nil {
		toSerialize["rabbitmq_server_user"] = o.RabbitmqServerUser
	}
	return json.Marshal(toSerialize)
}

type NullableRabbitMQTargetDetails struct {
	value *RabbitMQTargetDetails
	isSet bool
}

func (v NullableRabbitMQTargetDetails) Get() *RabbitMQTargetDetails {
	return v.value
}

func (v *NullableRabbitMQTargetDetails) Set(val *RabbitMQTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRabbitMQTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRabbitMQTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRabbitMQTargetDetails(val *RabbitMQTargetDetails) *NullableRabbitMQTargetDetails {
	return &NullableRabbitMQTargetDetails{value: val, isSet: true}
}

func (v NullableRabbitMQTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRabbitMQTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


