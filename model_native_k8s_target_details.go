/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// NativeK8sTargetDetails struct for NativeK8sTargetDetails
type NativeK8sTargetDetails struct {
	K8sBearerToken *string `json:"k8s_bearer_token,omitempty"`
	K8sClusterCaCertificate *string `json:"k8s_cluster_ca_certificate,omitempty"`
	K8sClusterEndpoint *string `json:"k8s_cluster_endpoint,omitempty"`
	UseGwServiceAccount *bool `json:"use_gw_service_account,omitempty"`
}

// NewNativeK8sTargetDetails instantiates a new NativeK8sTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNativeK8sTargetDetails() *NativeK8sTargetDetails {
	this := NativeK8sTargetDetails{}
	return &this
}

// NewNativeK8sTargetDetailsWithDefaults instantiates a new NativeK8sTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNativeK8sTargetDetailsWithDefaults() *NativeK8sTargetDetails {
	this := NativeK8sTargetDetails{}
	return &this
}

// GetK8sBearerToken returns the K8sBearerToken field value if set, zero value otherwise.
func (o *NativeK8sTargetDetails) GetK8sBearerToken() string {
	if o == nil || o.K8sBearerToken == nil {
		var ret string
		return ret
	}
	return *o.K8sBearerToken
}

// GetK8sBearerTokenOk returns a tuple with the K8sBearerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NativeK8sTargetDetails) GetK8sBearerTokenOk() (*string, bool) {
	if o == nil || o.K8sBearerToken == nil {
		return nil, false
	}
	return o.K8sBearerToken, true
}

// HasK8sBearerToken returns a boolean if a field has been set.
func (o *NativeK8sTargetDetails) HasK8sBearerToken() bool {
	if o != nil && o.K8sBearerToken != nil {
		return true
	}

	return false
}

// SetK8sBearerToken gets a reference to the given string and assigns it to the K8sBearerToken field.
func (o *NativeK8sTargetDetails) SetK8sBearerToken(v string) {
	o.K8sBearerToken = &v
}

// GetK8sClusterCaCertificate returns the K8sClusterCaCertificate field value if set, zero value otherwise.
func (o *NativeK8sTargetDetails) GetK8sClusterCaCertificate() string {
	if o == nil || o.K8sClusterCaCertificate == nil {
		var ret string
		return ret
	}
	return *o.K8sClusterCaCertificate
}

// GetK8sClusterCaCertificateOk returns a tuple with the K8sClusterCaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NativeK8sTargetDetails) GetK8sClusterCaCertificateOk() (*string, bool) {
	if o == nil || o.K8sClusterCaCertificate == nil {
		return nil, false
	}
	return o.K8sClusterCaCertificate, true
}

// HasK8sClusterCaCertificate returns a boolean if a field has been set.
func (o *NativeK8sTargetDetails) HasK8sClusterCaCertificate() bool {
	if o != nil && o.K8sClusterCaCertificate != nil {
		return true
	}

	return false
}

// SetK8sClusterCaCertificate gets a reference to the given string and assigns it to the K8sClusterCaCertificate field.
func (o *NativeK8sTargetDetails) SetK8sClusterCaCertificate(v string) {
	o.K8sClusterCaCertificate = &v
}

// GetK8sClusterEndpoint returns the K8sClusterEndpoint field value if set, zero value otherwise.
func (o *NativeK8sTargetDetails) GetK8sClusterEndpoint() string {
	if o == nil || o.K8sClusterEndpoint == nil {
		var ret string
		return ret
	}
	return *o.K8sClusterEndpoint
}

// GetK8sClusterEndpointOk returns a tuple with the K8sClusterEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NativeK8sTargetDetails) GetK8sClusterEndpointOk() (*string, bool) {
	if o == nil || o.K8sClusterEndpoint == nil {
		return nil, false
	}
	return o.K8sClusterEndpoint, true
}

// HasK8sClusterEndpoint returns a boolean if a field has been set.
func (o *NativeK8sTargetDetails) HasK8sClusterEndpoint() bool {
	if o != nil && o.K8sClusterEndpoint != nil {
		return true
	}

	return false
}

// SetK8sClusterEndpoint gets a reference to the given string and assigns it to the K8sClusterEndpoint field.
func (o *NativeK8sTargetDetails) SetK8sClusterEndpoint(v string) {
	o.K8sClusterEndpoint = &v
}

// GetUseGwServiceAccount returns the UseGwServiceAccount field value if set, zero value otherwise.
func (o *NativeK8sTargetDetails) GetUseGwServiceAccount() bool {
	if o == nil || o.UseGwServiceAccount == nil {
		var ret bool
		return ret
	}
	return *o.UseGwServiceAccount
}

// GetUseGwServiceAccountOk returns a tuple with the UseGwServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NativeK8sTargetDetails) GetUseGwServiceAccountOk() (*bool, bool) {
	if o == nil || o.UseGwServiceAccount == nil {
		return nil, false
	}
	return o.UseGwServiceAccount, true
}

// HasUseGwServiceAccount returns a boolean if a field has been set.
func (o *NativeK8sTargetDetails) HasUseGwServiceAccount() bool {
	if o != nil && o.UseGwServiceAccount != nil {
		return true
	}

	return false
}

// SetUseGwServiceAccount gets a reference to the given bool and assigns it to the UseGwServiceAccount field.
func (o *NativeK8sTargetDetails) SetUseGwServiceAccount(v bool) {
	o.UseGwServiceAccount = &v
}

func (o NativeK8sTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.K8sBearerToken != nil {
		toSerialize["k8s_bearer_token"] = o.K8sBearerToken
	}
	if o.K8sClusterCaCertificate != nil {
		toSerialize["k8s_cluster_ca_certificate"] = o.K8sClusterCaCertificate
	}
	if o.K8sClusterEndpoint != nil {
		toSerialize["k8s_cluster_endpoint"] = o.K8sClusterEndpoint
	}
	if o.UseGwServiceAccount != nil {
		toSerialize["use_gw_service_account"] = o.UseGwServiceAccount
	}
	return json.Marshal(toSerialize)
}

type NullableNativeK8sTargetDetails struct {
	value *NativeK8sTargetDetails
	isSet bool
}

func (v NullableNativeK8sTargetDetails) Get() *NativeK8sTargetDetails {
	return v.value
}

func (v *NullableNativeK8sTargetDetails) Set(val *NativeK8sTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableNativeK8sTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableNativeK8sTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNativeK8sTargetDetails(val *NativeK8sTargetDetails) *NullableNativeK8sTargetDetails {
	return &NullableNativeK8sTargetDetails{value: val, isSet: true}
}

func (v NullableNativeK8sTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNativeK8sTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


