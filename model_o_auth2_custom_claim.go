/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// OAuth2CustomClaim OAuth2CustomClaim is a custom claim specific to OAuth2 authentication method.
type OAuth2CustomClaim struct {
	Name *string `json:"name,omitempty"`
	Values []string `json:"values,omitempty"`
}

// NewOAuth2CustomClaim instantiates a new OAuth2CustomClaim object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuth2CustomClaim() *OAuth2CustomClaim {
	this := OAuth2CustomClaim{}
	return &this
}

// NewOAuth2CustomClaimWithDefaults instantiates a new OAuth2CustomClaim object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuth2CustomClaimWithDefaults() *OAuth2CustomClaim {
	this := OAuth2CustomClaim{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OAuth2CustomClaim) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2CustomClaim) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OAuth2CustomClaim) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OAuth2CustomClaim) SetName(v string) {
	o.Name = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *OAuth2CustomClaim) GetValues() []string {
	if o == nil || o.Values == nil {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2CustomClaim) GetValuesOk() ([]string, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *OAuth2CustomClaim) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *OAuth2CustomClaim) SetValues(v []string) {
	o.Values = v
}

func (o OAuth2CustomClaim) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableOAuth2CustomClaim struct {
	value *OAuth2CustomClaim
	isSet bool
}

func (v NullableOAuth2CustomClaim) Get() *OAuth2CustomClaim {
	return v.value
}

func (v *NullableOAuth2CustomClaim) Set(val *OAuth2CustomClaim) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuth2CustomClaim) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuth2CustomClaim) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuth2CustomClaim(val *OAuth2CustomClaim) *NullableOAuth2CustomClaim {
	return &NullableOAuth2CustomClaim{value: val, isSet: true}
}

func (v NullableOAuth2CustomClaim) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuth2CustomClaim) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


