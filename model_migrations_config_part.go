/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// checks if the MigrationsConfigPart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigrationsConfigPart{}

// MigrationsConfigPart struct for MigrationsConfigPart
type MigrationsConfigPart struct {
	ActiveDirectoryMigrations []ActiveDirectoryMigration `json:"active_directory_migrations,omitempty"`
	AwsSecretsMigrations []AWSSecretsMigration `json:"aws_secrets_migrations,omitempty"`
	AzureKvMigrations []AzureKeyVaultMigration `json:"azure_kv_migrations,omitempty"`
	GcpSecretsMigrations []GCPSecretsMigration `json:"gcp_secrets_migrations,omitempty"`
	HashiMigrations []HashiMigration `json:"hashi_migrations,omitempty"`
	K8sMigrations []K8SMigration `json:"k8s_migrations,omitempty"`
	MockMigrations []MockMigration `json:"mock_migrations,omitempty"`
	OnePasswordMigrations []OnePasswordMigration `json:"one_password_migrations,omitempty"`
	ServerInventoryMigrations []ServerInventoryMigration `json:"server_inventory_migrations,omitempty"`
}

// NewMigrationsConfigPart instantiates a new MigrationsConfigPart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationsConfigPart() *MigrationsConfigPart {
	this := MigrationsConfigPart{}
	return &this
}

// NewMigrationsConfigPartWithDefaults instantiates a new MigrationsConfigPart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationsConfigPartWithDefaults() *MigrationsConfigPart {
	this := MigrationsConfigPart{}
	return &this
}

// GetActiveDirectoryMigrations returns the ActiveDirectoryMigrations field value if set, zero value otherwise.
func (o *MigrationsConfigPart) GetActiveDirectoryMigrations() []ActiveDirectoryMigration {
	if o == nil || IsNil(o.ActiveDirectoryMigrations) {
		var ret []ActiveDirectoryMigration
		return ret
	}
	return o.ActiveDirectoryMigrations
}

// GetActiveDirectoryMigrationsOk returns a tuple with the ActiveDirectoryMigrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsConfigPart) GetActiveDirectoryMigrationsOk() ([]ActiveDirectoryMigration, bool) {
	if o == nil || IsNil(o.ActiveDirectoryMigrations) {
		return nil, false
	}
	return o.ActiveDirectoryMigrations, true
}

// HasActiveDirectoryMigrations returns a boolean if a field has been set.
func (o *MigrationsConfigPart) HasActiveDirectoryMigrations() bool {
	if o != nil && !IsNil(o.ActiveDirectoryMigrations) {
		return true
	}

	return false
}

// SetActiveDirectoryMigrations gets a reference to the given []ActiveDirectoryMigration and assigns it to the ActiveDirectoryMigrations field.
func (o *MigrationsConfigPart) SetActiveDirectoryMigrations(v []ActiveDirectoryMigration) {
	o.ActiveDirectoryMigrations = v
}

// GetAwsSecretsMigrations returns the AwsSecretsMigrations field value if set, zero value otherwise.
func (o *MigrationsConfigPart) GetAwsSecretsMigrations() []AWSSecretsMigration {
	if o == nil || IsNil(o.AwsSecretsMigrations) {
		var ret []AWSSecretsMigration
		return ret
	}
	return o.AwsSecretsMigrations
}

// GetAwsSecretsMigrationsOk returns a tuple with the AwsSecretsMigrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsConfigPart) GetAwsSecretsMigrationsOk() ([]AWSSecretsMigration, bool) {
	if o == nil || IsNil(o.AwsSecretsMigrations) {
		return nil, false
	}
	return o.AwsSecretsMigrations, true
}

// HasAwsSecretsMigrations returns a boolean if a field has been set.
func (o *MigrationsConfigPart) HasAwsSecretsMigrations() bool {
	if o != nil && !IsNil(o.AwsSecretsMigrations) {
		return true
	}

	return false
}

// SetAwsSecretsMigrations gets a reference to the given []AWSSecretsMigration and assigns it to the AwsSecretsMigrations field.
func (o *MigrationsConfigPart) SetAwsSecretsMigrations(v []AWSSecretsMigration) {
	o.AwsSecretsMigrations = v
}

// GetAzureKvMigrations returns the AzureKvMigrations field value if set, zero value otherwise.
func (o *MigrationsConfigPart) GetAzureKvMigrations() []AzureKeyVaultMigration {
	if o == nil || IsNil(o.AzureKvMigrations) {
		var ret []AzureKeyVaultMigration
		return ret
	}
	return o.AzureKvMigrations
}

// GetAzureKvMigrationsOk returns a tuple with the AzureKvMigrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsConfigPart) GetAzureKvMigrationsOk() ([]AzureKeyVaultMigration, bool) {
	if o == nil || IsNil(o.AzureKvMigrations) {
		return nil, false
	}
	return o.AzureKvMigrations, true
}

// HasAzureKvMigrations returns a boolean if a field has been set.
func (o *MigrationsConfigPart) HasAzureKvMigrations() bool {
	if o != nil && !IsNil(o.AzureKvMigrations) {
		return true
	}

	return false
}

// SetAzureKvMigrations gets a reference to the given []AzureKeyVaultMigration and assigns it to the AzureKvMigrations field.
func (o *MigrationsConfigPart) SetAzureKvMigrations(v []AzureKeyVaultMigration) {
	o.AzureKvMigrations = v
}

// GetGcpSecretsMigrations returns the GcpSecretsMigrations field value if set, zero value otherwise.
func (o *MigrationsConfigPart) GetGcpSecretsMigrations() []GCPSecretsMigration {
	if o == nil || IsNil(o.GcpSecretsMigrations) {
		var ret []GCPSecretsMigration
		return ret
	}
	return o.GcpSecretsMigrations
}

// GetGcpSecretsMigrationsOk returns a tuple with the GcpSecretsMigrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsConfigPart) GetGcpSecretsMigrationsOk() ([]GCPSecretsMigration, bool) {
	if o == nil || IsNil(o.GcpSecretsMigrations) {
		return nil, false
	}
	return o.GcpSecretsMigrations, true
}

// HasGcpSecretsMigrations returns a boolean if a field has been set.
func (o *MigrationsConfigPart) HasGcpSecretsMigrations() bool {
	if o != nil && !IsNil(o.GcpSecretsMigrations) {
		return true
	}

	return false
}

// SetGcpSecretsMigrations gets a reference to the given []GCPSecretsMigration and assigns it to the GcpSecretsMigrations field.
func (o *MigrationsConfigPart) SetGcpSecretsMigrations(v []GCPSecretsMigration) {
	o.GcpSecretsMigrations = v
}

// GetHashiMigrations returns the HashiMigrations field value if set, zero value otherwise.
func (o *MigrationsConfigPart) GetHashiMigrations() []HashiMigration {
	if o == nil || IsNil(o.HashiMigrations) {
		var ret []HashiMigration
		return ret
	}
	return o.HashiMigrations
}

// GetHashiMigrationsOk returns a tuple with the HashiMigrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsConfigPart) GetHashiMigrationsOk() ([]HashiMigration, bool) {
	if o == nil || IsNil(o.HashiMigrations) {
		return nil, false
	}
	return o.HashiMigrations, true
}

// HasHashiMigrations returns a boolean if a field has been set.
func (o *MigrationsConfigPart) HasHashiMigrations() bool {
	if o != nil && !IsNil(o.HashiMigrations) {
		return true
	}

	return false
}

// SetHashiMigrations gets a reference to the given []HashiMigration and assigns it to the HashiMigrations field.
func (o *MigrationsConfigPart) SetHashiMigrations(v []HashiMigration) {
	o.HashiMigrations = v
}

// GetK8sMigrations returns the K8sMigrations field value if set, zero value otherwise.
func (o *MigrationsConfigPart) GetK8sMigrations() []K8SMigration {
	if o == nil || IsNil(o.K8sMigrations) {
		var ret []K8SMigration
		return ret
	}
	return o.K8sMigrations
}

// GetK8sMigrationsOk returns a tuple with the K8sMigrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsConfigPart) GetK8sMigrationsOk() ([]K8SMigration, bool) {
	if o == nil || IsNil(o.K8sMigrations) {
		return nil, false
	}
	return o.K8sMigrations, true
}

// HasK8sMigrations returns a boolean if a field has been set.
func (o *MigrationsConfigPart) HasK8sMigrations() bool {
	if o != nil && !IsNil(o.K8sMigrations) {
		return true
	}

	return false
}

// SetK8sMigrations gets a reference to the given []K8SMigration and assigns it to the K8sMigrations field.
func (o *MigrationsConfigPart) SetK8sMigrations(v []K8SMigration) {
	o.K8sMigrations = v
}

// GetMockMigrations returns the MockMigrations field value if set, zero value otherwise.
func (o *MigrationsConfigPart) GetMockMigrations() []MockMigration {
	if o == nil || IsNil(o.MockMigrations) {
		var ret []MockMigration
		return ret
	}
	return o.MockMigrations
}

// GetMockMigrationsOk returns a tuple with the MockMigrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsConfigPart) GetMockMigrationsOk() ([]MockMigration, bool) {
	if o == nil || IsNil(o.MockMigrations) {
		return nil, false
	}
	return o.MockMigrations, true
}

// HasMockMigrations returns a boolean if a field has been set.
func (o *MigrationsConfigPart) HasMockMigrations() bool {
	if o != nil && !IsNil(o.MockMigrations) {
		return true
	}

	return false
}

// SetMockMigrations gets a reference to the given []MockMigration and assigns it to the MockMigrations field.
func (o *MigrationsConfigPart) SetMockMigrations(v []MockMigration) {
	o.MockMigrations = v
}

// GetOnePasswordMigrations returns the OnePasswordMigrations field value if set, zero value otherwise.
func (o *MigrationsConfigPart) GetOnePasswordMigrations() []OnePasswordMigration {
	if o == nil || IsNil(o.OnePasswordMigrations) {
		var ret []OnePasswordMigration
		return ret
	}
	return o.OnePasswordMigrations
}

// GetOnePasswordMigrationsOk returns a tuple with the OnePasswordMigrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsConfigPart) GetOnePasswordMigrationsOk() ([]OnePasswordMigration, bool) {
	if o == nil || IsNil(o.OnePasswordMigrations) {
		return nil, false
	}
	return o.OnePasswordMigrations, true
}

// HasOnePasswordMigrations returns a boolean if a field has been set.
func (o *MigrationsConfigPart) HasOnePasswordMigrations() bool {
	if o != nil && !IsNil(o.OnePasswordMigrations) {
		return true
	}

	return false
}

// SetOnePasswordMigrations gets a reference to the given []OnePasswordMigration and assigns it to the OnePasswordMigrations field.
func (o *MigrationsConfigPart) SetOnePasswordMigrations(v []OnePasswordMigration) {
	o.OnePasswordMigrations = v
}

// GetServerInventoryMigrations returns the ServerInventoryMigrations field value if set, zero value otherwise.
func (o *MigrationsConfigPart) GetServerInventoryMigrations() []ServerInventoryMigration {
	if o == nil || IsNil(o.ServerInventoryMigrations) {
		var ret []ServerInventoryMigration
		return ret
	}
	return o.ServerInventoryMigrations
}

// GetServerInventoryMigrationsOk returns a tuple with the ServerInventoryMigrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsConfigPart) GetServerInventoryMigrationsOk() ([]ServerInventoryMigration, bool) {
	if o == nil || IsNil(o.ServerInventoryMigrations) {
		return nil, false
	}
	return o.ServerInventoryMigrations, true
}

// HasServerInventoryMigrations returns a boolean if a field has been set.
func (o *MigrationsConfigPart) HasServerInventoryMigrations() bool {
	if o != nil && !IsNil(o.ServerInventoryMigrations) {
		return true
	}

	return false
}

// SetServerInventoryMigrations gets a reference to the given []ServerInventoryMigration and assigns it to the ServerInventoryMigrations field.
func (o *MigrationsConfigPart) SetServerInventoryMigrations(v []ServerInventoryMigration) {
	o.ServerInventoryMigrations = v
}

func (o MigrationsConfigPart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigrationsConfigPart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveDirectoryMigrations) {
		toSerialize["active_directory_migrations"] = o.ActiveDirectoryMigrations
	}
	if !IsNil(o.AwsSecretsMigrations) {
		toSerialize["aws_secrets_migrations"] = o.AwsSecretsMigrations
	}
	if !IsNil(o.AzureKvMigrations) {
		toSerialize["azure_kv_migrations"] = o.AzureKvMigrations
	}
	if !IsNil(o.GcpSecretsMigrations) {
		toSerialize["gcp_secrets_migrations"] = o.GcpSecretsMigrations
	}
	if !IsNil(o.HashiMigrations) {
		toSerialize["hashi_migrations"] = o.HashiMigrations
	}
	if !IsNil(o.K8sMigrations) {
		toSerialize["k8s_migrations"] = o.K8sMigrations
	}
	if !IsNil(o.MockMigrations) {
		toSerialize["mock_migrations"] = o.MockMigrations
	}
	if !IsNil(o.OnePasswordMigrations) {
		toSerialize["one_password_migrations"] = o.OnePasswordMigrations
	}
	if !IsNil(o.ServerInventoryMigrations) {
		toSerialize["server_inventory_migrations"] = o.ServerInventoryMigrations
	}
	return toSerialize, nil
}

type NullableMigrationsConfigPart struct {
	value *MigrationsConfigPart
	isSet bool
}

func (v NullableMigrationsConfigPart) Get() *MigrationsConfigPart {
	return v.value
}

func (v *NullableMigrationsConfigPart) Set(val *MigrationsConfigPart) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationsConfigPart) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationsConfigPart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationsConfigPart(val *MigrationsConfigPart) *NullableMigrationsConfigPart {
	return &NullableMigrationsConfigPart{value: val, isSet: true}
}

func (v NullableMigrationsConfigPart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationsConfigPart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


