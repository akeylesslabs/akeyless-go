/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// CreateUSCOutput struct for CreateUSCOutput
type CreateUSCOutput struct {
	UniversalSecretsConnectorId *int64 `json:"universal_secrets_connector_id,omitempty"`
	UniversalSecretsConnectorName *string `json:"universal_secrets_connector_name,omitempty"`
}

// NewCreateUSCOutput instantiates a new CreateUSCOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUSCOutput() *CreateUSCOutput {
	this := CreateUSCOutput{}
	return &this
}

// NewCreateUSCOutputWithDefaults instantiates a new CreateUSCOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUSCOutputWithDefaults() *CreateUSCOutput {
	this := CreateUSCOutput{}
	return &this
}

// GetUniversalSecretsConnectorId returns the UniversalSecretsConnectorId field value if set, zero value otherwise.
func (o *CreateUSCOutput) GetUniversalSecretsConnectorId() int64 {
	if o == nil || o.UniversalSecretsConnectorId == nil {
		var ret int64
		return ret
	}
	return *o.UniversalSecretsConnectorId
}

// GetUniversalSecretsConnectorIdOk returns a tuple with the UniversalSecretsConnectorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUSCOutput) GetUniversalSecretsConnectorIdOk() (*int64, bool) {
	if o == nil || o.UniversalSecretsConnectorId == nil {
		return nil, false
	}
	return o.UniversalSecretsConnectorId, true
}

// HasUniversalSecretsConnectorId returns a boolean if a field has been set.
func (o *CreateUSCOutput) HasUniversalSecretsConnectorId() bool {
	if o != nil && o.UniversalSecretsConnectorId != nil {
		return true
	}

	return false
}

// SetUniversalSecretsConnectorId gets a reference to the given int64 and assigns it to the UniversalSecretsConnectorId field.
func (o *CreateUSCOutput) SetUniversalSecretsConnectorId(v int64) {
	o.UniversalSecretsConnectorId = &v
}

// GetUniversalSecretsConnectorName returns the UniversalSecretsConnectorName field value if set, zero value otherwise.
func (o *CreateUSCOutput) GetUniversalSecretsConnectorName() string {
	if o == nil || o.UniversalSecretsConnectorName == nil {
		var ret string
		return ret
	}
	return *o.UniversalSecretsConnectorName
}

// GetUniversalSecretsConnectorNameOk returns a tuple with the UniversalSecretsConnectorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUSCOutput) GetUniversalSecretsConnectorNameOk() (*string, bool) {
	if o == nil || o.UniversalSecretsConnectorName == nil {
		return nil, false
	}
	return o.UniversalSecretsConnectorName, true
}

// HasUniversalSecretsConnectorName returns a boolean if a field has been set.
func (o *CreateUSCOutput) HasUniversalSecretsConnectorName() bool {
	if o != nil && o.UniversalSecretsConnectorName != nil {
		return true
	}

	return false
}

// SetUniversalSecretsConnectorName gets a reference to the given string and assigns it to the UniversalSecretsConnectorName field.
func (o *CreateUSCOutput) SetUniversalSecretsConnectorName(v string) {
	o.UniversalSecretsConnectorName = &v
}

func (o CreateUSCOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UniversalSecretsConnectorId != nil {
		toSerialize["universal_secrets_connector_id"] = o.UniversalSecretsConnectorId
	}
	if o.UniversalSecretsConnectorName != nil {
		toSerialize["universal_secrets_connector_name"] = o.UniversalSecretsConnectorName
	}
	return json.Marshal(toSerialize)
}

type NullableCreateUSCOutput struct {
	value *CreateUSCOutput
	isSet bool
}

func (v NullableCreateUSCOutput) Get() *CreateUSCOutput {
	return v.value
}

func (v *NullableCreateUSCOutput) Set(val *CreateUSCOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUSCOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUSCOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUSCOutput(val *CreateUSCOutput) *NullableCreateUSCOutput {
	return &NullableCreateUSCOutput{value: val, isSet: true}
}

func (v NullableCreateUSCOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUSCOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


