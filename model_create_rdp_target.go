/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// CreateRdpTarget struct for CreateRdpTarget
type CreateRdpTarget struct {
	AdminName *string `json:"admin_name,omitempty"`
	AdminPwd *string `json:"admin_pwd,omitempty"`
	// Comment about the target
	Comment *string `json:"comment,omitempty"`
	HostName *string `json:"host_name,omitempty"`
	HostPort *string `json:"host_port,omitempty"`
	// Target name
	Name string `json:"name"`
	// The name of a key that used to encrypt the target secret value (if empty, the account default protectionKey key will be used)
	ProtectionKey *string `json:"protection_key,omitempty"`
	// Authentication token (see `/auth` and `/configure`)
	Token *string `json:"token,omitempty"`
	// The universal identity token, Required only for universal_identity authentication
	UidToken *string `json:"uid-token,omitempty"`
}

// NewCreateRdpTarget instantiates a new CreateRdpTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRdpTarget(name string, ) *CreateRdpTarget {
	this := CreateRdpTarget{}
	this.Name = name
	return &this
}

// NewCreateRdpTargetWithDefaults instantiates a new CreateRdpTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRdpTargetWithDefaults() *CreateRdpTarget {
	this := CreateRdpTarget{}
	return &this
}

// GetAdminName returns the AdminName field value if set, zero value otherwise.
func (o *CreateRdpTarget) GetAdminName() string {
	if o == nil || o.AdminName == nil {
		var ret string
		return ret
	}
	return *o.AdminName
}

// GetAdminNameOk returns a tuple with the AdminName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRdpTarget) GetAdminNameOk() (*string, bool) {
	if o == nil || o.AdminName == nil {
		return nil, false
	}
	return o.AdminName, true
}

// HasAdminName returns a boolean if a field has been set.
func (o *CreateRdpTarget) HasAdminName() bool {
	if o != nil && o.AdminName != nil {
		return true
	}

	return false
}

// SetAdminName gets a reference to the given string and assigns it to the AdminName field.
func (o *CreateRdpTarget) SetAdminName(v string) {
	o.AdminName = &v
}

// GetAdminPwd returns the AdminPwd field value if set, zero value otherwise.
func (o *CreateRdpTarget) GetAdminPwd() string {
	if o == nil || o.AdminPwd == nil {
		var ret string
		return ret
	}
	return *o.AdminPwd
}

// GetAdminPwdOk returns a tuple with the AdminPwd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRdpTarget) GetAdminPwdOk() (*string, bool) {
	if o == nil || o.AdminPwd == nil {
		return nil, false
	}
	return o.AdminPwd, true
}

// HasAdminPwd returns a boolean if a field has been set.
func (o *CreateRdpTarget) HasAdminPwd() bool {
	if o != nil && o.AdminPwd != nil {
		return true
	}

	return false
}

// SetAdminPwd gets a reference to the given string and assigns it to the AdminPwd field.
func (o *CreateRdpTarget) SetAdminPwd(v string) {
	o.AdminPwd = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *CreateRdpTarget) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRdpTarget) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *CreateRdpTarget) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *CreateRdpTarget) SetComment(v string) {
	o.Comment = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *CreateRdpTarget) GetHostName() string {
	if o == nil || o.HostName == nil {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRdpTarget) GetHostNameOk() (*string, bool) {
	if o == nil || o.HostName == nil {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *CreateRdpTarget) HasHostName() bool {
	if o != nil && o.HostName != nil {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *CreateRdpTarget) SetHostName(v string) {
	o.HostName = &v
}

// GetHostPort returns the HostPort field value if set, zero value otherwise.
func (o *CreateRdpTarget) GetHostPort() string {
	if o == nil || o.HostPort == nil {
		var ret string
		return ret
	}
	return *o.HostPort
}

// GetHostPortOk returns a tuple with the HostPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRdpTarget) GetHostPortOk() (*string, bool) {
	if o == nil || o.HostPort == nil {
		return nil, false
	}
	return o.HostPort, true
}

// HasHostPort returns a boolean if a field has been set.
func (o *CreateRdpTarget) HasHostPort() bool {
	if o != nil && o.HostPort != nil {
		return true
	}

	return false
}

// SetHostPort gets a reference to the given string and assigns it to the HostPort field.
func (o *CreateRdpTarget) SetHostPort(v string) {
	o.HostPort = &v
}

// GetName returns the Name field value
func (o *CreateRdpTarget) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateRdpTarget) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateRdpTarget) SetName(v string) {
	o.Name = v
}

// GetProtectionKey returns the ProtectionKey field value if set, zero value otherwise.
func (o *CreateRdpTarget) GetProtectionKey() string {
	if o == nil || o.ProtectionKey == nil {
		var ret string
		return ret
	}
	return *o.ProtectionKey
}

// GetProtectionKeyOk returns a tuple with the ProtectionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRdpTarget) GetProtectionKeyOk() (*string, bool) {
	if o == nil || o.ProtectionKey == nil {
		return nil, false
	}
	return o.ProtectionKey, true
}

// HasProtectionKey returns a boolean if a field has been set.
func (o *CreateRdpTarget) HasProtectionKey() bool {
	if o != nil && o.ProtectionKey != nil {
		return true
	}

	return false
}

// SetProtectionKey gets a reference to the given string and assigns it to the ProtectionKey field.
func (o *CreateRdpTarget) SetProtectionKey(v string) {
	o.ProtectionKey = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CreateRdpTarget) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRdpTarget) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CreateRdpTarget) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CreateRdpTarget) SetToken(v string) {
	o.Token = &v
}

// GetUidToken returns the UidToken field value if set, zero value otherwise.
func (o *CreateRdpTarget) GetUidToken() string {
	if o == nil || o.UidToken == nil {
		var ret string
		return ret
	}
	return *o.UidToken
}

// GetUidTokenOk returns a tuple with the UidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRdpTarget) GetUidTokenOk() (*string, bool) {
	if o == nil || o.UidToken == nil {
		return nil, false
	}
	return o.UidToken, true
}

// HasUidToken returns a boolean if a field has been set.
func (o *CreateRdpTarget) HasUidToken() bool {
	if o != nil && o.UidToken != nil {
		return true
	}

	return false
}

// SetUidToken gets a reference to the given string and assigns it to the UidToken field.
func (o *CreateRdpTarget) SetUidToken(v string) {
	o.UidToken = &v
}

func (o CreateRdpTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminName != nil {
		toSerialize["admin_name"] = o.AdminName
	}
	if o.AdminPwd != nil {
		toSerialize["admin_pwd"] = o.AdminPwd
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.HostName != nil {
		toSerialize["host_name"] = o.HostName
	}
	if o.HostPort != nil {
		toSerialize["host_port"] = o.HostPort
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.ProtectionKey != nil {
		toSerialize["protection_key"] = o.ProtectionKey
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.UidToken != nil {
		toSerialize["uid-token"] = o.UidToken
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRdpTarget struct {
	value *CreateRdpTarget
	isSet bool
}

func (v NullableCreateRdpTarget) Get() *CreateRdpTarget {
	return v.value
}

func (v *NullableCreateRdpTarget) Set(val *CreateRdpTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRdpTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRdpTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRdpTarget(val *CreateRdpTarget) *NullableCreateRdpTarget {
	return &NullableCreateRdpTarget{value: val, isSet: true}
}

func (v NullableCreateRdpTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRdpTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


