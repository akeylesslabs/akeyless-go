/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
	"time"
)

// ItemSraStatus struct for ItemSraStatus
type ItemSraStatus struct {
	BastionAccessId *string `json:"bastion_access_id,omitempty"`
	BastionClusterName *string `json:"bastion_cluster_name,omitempty"`
	BastionInstanceId *string `json:"bastion_instance_id,omitempty"`
	IsInUsed *bool `json:"is_in_used,omitempty"`
	SessionId *string `json:"session_id,omitempty"`
	Time *time.Time `json:"time,omitempty"`
}

// NewItemSraStatus instantiates a new ItemSraStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemSraStatus() *ItemSraStatus {
	this := ItemSraStatus{}
	return &this
}

// NewItemSraStatusWithDefaults instantiates a new ItemSraStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemSraStatusWithDefaults() *ItemSraStatus {
	this := ItemSraStatus{}
	return &this
}

// GetBastionAccessId returns the BastionAccessId field value if set, zero value otherwise.
func (o *ItemSraStatus) GetBastionAccessId() string {
	if o == nil || o.BastionAccessId == nil {
		var ret string
		return ret
	}
	return *o.BastionAccessId
}

// GetBastionAccessIdOk returns a tuple with the BastionAccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSraStatus) GetBastionAccessIdOk() (*string, bool) {
	if o == nil || o.BastionAccessId == nil {
		return nil, false
	}
	return o.BastionAccessId, true
}

// HasBastionAccessId returns a boolean if a field has been set.
func (o *ItemSraStatus) HasBastionAccessId() bool {
	if o != nil && o.BastionAccessId != nil {
		return true
	}

	return false
}

// SetBastionAccessId gets a reference to the given string and assigns it to the BastionAccessId field.
func (o *ItemSraStatus) SetBastionAccessId(v string) {
	o.BastionAccessId = &v
}

// GetBastionClusterName returns the BastionClusterName field value if set, zero value otherwise.
func (o *ItemSraStatus) GetBastionClusterName() string {
	if o == nil || o.BastionClusterName == nil {
		var ret string
		return ret
	}
	return *o.BastionClusterName
}

// GetBastionClusterNameOk returns a tuple with the BastionClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSraStatus) GetBastionClusterNameOk() (*string, bool) {
	if o == nil || o.BastionClusterName == nil {
		return nil, false
	}
	return o.BastionClusterName, true
}

// HasBastionClusterName returns a boolean if a field has been set.
func (o *ItemSraStatus) HasBastionClusterName() bool {
	if o != nil && o.BastionClusterName != nil {
		return true
	}

	return false
}

// SetBastionClusterName gets a reference to the given string and assigns it to the BastionClusterName field.
func (o *ItemSraStatus) SetBastionClusterName(v string) {
	o.BastionClusterName = &v
}

// GetBastionInstanceId returns the BastionInstanceId field value if set, zero value otherwise.
func (o *ItemSraStatus) GetBastionInstanceId() string {
	if o == nil || o.BastionInstanceId == nil {
		var ret string
		return ret
	}
	return *o.BastionInstanceId
}

// GetBastionInstanceIdOk returns a tuple with the BastionInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSraStatus) GetBastionInstanceIdOk() (*string, bool) {
	if o == nil || o.BastionInstanceId == nil {
		return nil, false
	}
	return o.BastionInstanceId, true
}

// HasBastionInstanceId returns a boolean if a field has been set.
func (o *ItemSraStatus) HasBastionInstanceId() bool {
	if o != nil && o.BastionInstanceId != nil {
		return true
	}

	return false
}

// SetBastionInstanceId gets a reference to the given string and assigns it to the BastionInstanceId field.
func (o *ItemSraStatus) SetBastionInstanceId(v string) {
	o.BastionInstanceId = &v
}

// GetIsInUsed returns the IsInUsed field value if set, zero value otherwise.
func (o *ItemSraStatus) GetIsInUsed() bool {
	if o == nil || o.IsInUsed == nil {
		var ret bool
		return ret
	}
	return *o.IsInUsed
}

// GetIsInUsedOk returns a tuple with the IsInUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSraStatus) GetIsInUsedOk() (*bool, bool) {
	if o == nil || o.IsInUsed == nil {
		return nil, false
	}
	return o.IsInUsed, true
}

// HasIsInUsed returns a boolean if a field has been set.
func (o *ItemSraStatus) HasIsInUsed() bool {
	if o != nil && o.IsInUsed != nil {
		return true
	}

	return false
}

// SetIsInUsed gets a reference to the given bool and assigns it to the IsInUsed field.
func (o *ItemSraStatus) SetIsInUsed(v bool) {
	o.IsInUsed = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *ItemSraStatus) GetSessionId() string {
	if o == nil || o.SessionId == nil {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSraStatus) GetSessionIdOk() (*string, bool) {
	if o == nil || o.SessionId == nil {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *ItemSraStatus) HasSessionId() bool {
	if o != nil && o.SessionId != nil {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *ItemSraStatus) SetSessionId(v string) {
	o.SessionId = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ItemSraStatus) GetTime() time.Time {
	if o == nil || o.Time == nil {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemSraStatus) GetTimeOk() (*time.Time, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ItemSraStatus) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *ItemSraStatus) SetTime(v time.Time) {
	o.Time = &v
}

func (o ItemSraStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BastionAccessId != nil {
		toSerialize["bastion_access_id"] = o.BastionAccessId
	}
	if o.BastionClusterName != nil {
		toSerialize["bastion_cluster_name"] = o.BastionClusterName
	}
	if o.BastionInstanceId != nil {
		toSerialize["bastion_instance_id"] = o.BastionInstanceId
	}
	if o.IsInUsed != nil {
		toSerialize["is_in_used"] = o.IsInUsed
	}
	if o.SessionId != nil {
		toSerialize["session_id"] = o.SessionId
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	return json.Marshal(toSerialize)
}

type NullableItemSraStatus struct {
	value *ItemSraStatus
	isSet bool
}

func (v NullableItemSraStatus) Get() *ItemSraStatus {
	return v.value
}

func (v *NullableItemSraStatus) Set(val *ItemSraStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableItemSraStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableItemSraStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemSraStatus(val *ItemSraStatus) *NullableItemSraStatus {
	return &NullableItemSraStatus{value: val, isSet: true}
}

func (v NullableItemSraStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemSraStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


