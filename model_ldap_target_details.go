/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// LdapTargetDetails LdapTargetDetails
type LdapTargetDetails struct {
	ImplementationType *string `json:"implementation_type,omitempty"`
	LdapAudience *string `json:"ldap_audience,omitempty"`
	LdapBindDn *string `json:"ldap_bind_dn,omitempty"`
	LdapBindPassword *string `json:"ldap_bind_password,omitempty"`
	LdapCertificate *string `json:"ldap_certificate,omitempty"`
	LdapTokenExpiration *string `json:"ldap_token_expiration,omitempty"`
	LdapUrl *string `json:"ldap_url,omitempty"`
}

// NewLdapTargetDetails instantiates a new LdapTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapTargetDetails() *LdapTargetDetails {
	this := LdapTargetDetails{}
	return &this
}

// NewLdapTargetDetailsWithDefaults instantiates a new LdapTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapTargetDetailsWithDefaults() *LdapTargetDetails {
	this := LdapTargetDetails{}
	return &this
}

// GetImplementationType returns the ImplementationType field value if set, zero value otherwise.
func (o *LdapTargetDetails) GetImplementationType() string {
	if o == nil || o.ImplementationType == nil {
		var ret string
		return ret
	}
	return *o.ImplementationType
}

// GetImplementationTypeOk returns a tuple with the ImplementationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapTargetDetails) GetImplementationTypeOk() (*string, bool) {
	if o == nil || o.ImplementationType == nil {
		return nil, false
	}
	return o.ImplementationType, true
}

// HasImplementationType returns a boolean if a field has been set.
func (o *LdapTargetDetails) HasImplementationType() bool {
	if o != nil && o.ImplementationType != nil {
		return true
	}

	return false
}

// SetImplementationType gets a reference to the given string and assigns it to the ImplementationType field.
func (o *LdapTargetDetails) SetImplementationType(v string) {
	o.ImplementationType = &v
}

// GetLdapAudience returns the LdapAudience field value if set, zero value otherwise.
func (o *LdapTargetDetails) GetLdapAudience() string {
	if o == nil || o.LdapAudience == nil {
		var ret string
		return ret
	}
	return *o.LdapAudience
}

// GetLdapAudienceOk returns a tuple with the LdapAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapTargetDetails) GetLdapAudienceOk() (*string, bool) {
	if o == nil || o.LdapAudience == nil {
		return nil, false
	}
	return o.LdapAudience, true
}

// HasLdapAudience returns a boolean if a field has been set.
func (o *LdapTargetDetails) HasLdapAudience() bool {
	if o != nil && o.LdapAudience != nil {
		return true
	}

	return false
}

// SetLdapAudience gets a reference to the given string and assigns it to the LdapAudience field.
func (o *LdapTargetDetails) SetLdapAudience(v string) {
	o.LdapAudience = &v
}

// GetLdapBindDn returns the LdapBindDn field value if set, zero value otherwise.
func (o *LdapTargetDetails) GetLdapBindDn() string {
	if o == nil || o.LdapBindDn == nil {
		var ret string
		return ret
	}
	return *o.LdapBindDn
}

// GetLdapBindDnOk returns a tuple with the LdapBindDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapTargetDetails) GetLdapBindDnOk() (*string, bool) {
	if o == nil || o.LdapBindDn == nil {
		return nil, false
	}
	return o.LdapBindDn, true
}

// HasLdapBindDn returns a boolean if a field has been set.
func (o *LdapTargetDetails) HasLdapBindDn() bool {
	if o != nil && o.LdapBindDn != nil {
		return true
	}

	return false
}

// SetLdapBindDn gets a reference to the given string and assigns it to the LdapBindDn field.
func (o *LdapTargetDetails) SetLdapBindDn(v string) {
	o.LdapBindDn = &v
}

// GetLdapBindPassword returns the LdapBindPassword field value if set, zero value otherwise.
func (o *LdapTargetDetails) GetLdapBindPassword() string {
	if o == nil || o.LdapBindPassword == nil {
		var ret string
		return ret
	}
	return *o.LdapBindPassword
}

// GetLdapBindPasswordOk returns a tuple with the LdapBindPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapTargetDetails) GetLdapBindPasswordOk() (*string, bool) {
	if o == nil || o.LdapBindPassword == nil {
		return nil, false
	}
	return o.LdapBindPassword, true
}

// HasLdapBindPassword returns a boolean if a field has been set.
func (o *LdapTargetDetails) HasLdapBindPassword() bool {
	if o != nil && o.LdapBindPassword != nil {
		return true
	}

	return false
}

// SetLdapBindPassword gets a reference to the given string and assigns it to the LdapBindPassword field.
func (o *LdapTargetDetails) SetLdapBindPassword(v string) {
	o.LdapBindPassword = &v
}

// GetLdapCertificate returns the LdapCertificate field value if set, zero value otherwise.
func (o *LdapTargetDetails) GetLdapCertificate() string {
	if o == nil || o.LdapCertificate == nil {
		var ret string
		return ret
	}
	return *o.LdapCertificate
}

// GetLdapCertificateOk returns a tuple with the LdapCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapTargetDetails) GetLdapCertificateOk() (*string, bool) {
	if o == nil || o.LdapCertificate == nil {
		return nil, false
	}
	return o.LdapCertificate, true
}

// HasLdapCertificate returns a boolean if a field has been set.
func (o *LdapTargetDetails) HasLdapCertificate() bool {
	if o != nil && o.LdapCertificate != nil {
		return true
	}

	return false
}

// SetLdapCertificate gets a reference to the given string and assigns it to the LdapCertificate field.
func (o *LdapTargetDetails) SetLdapCertificate(v string) {
	o.LdapCertificate = &v
}

// GetLdapTokenExpiration returns the LdapTokenExpiration field value if set, zero value otherwise.
func (o *LdapTargetDetails) GetLdapTokenExpiration() string {
	if o == nil || o.LdapTokenExpiration == nil {
		var ret string
		return ret
	}
	return *o.LdapTokenExpiration
}

// GetLdapTokenExpirationOk returns a tuple with the LdapTokenExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapTargetDetails) GetLdapTokenExpirationOk() (*string, bool) {
	if o == nil || o.LdapTokenExpiration == nil {
		return nil, false
	}
	return o.LdapTokenExpiration, true
}

// HasLdapTokenExpiration returns a boolean if a field has been set.
func (o *LdapTargetDetails) HasLdapTokenExpiration() bool {
	if o != nil && o.LdapTokenExpiration != nil {
		return true
	}

	return false
}

// SetLdapTokenExpiration gets a reference to the given string and assigns it to the LdapTokenExpiration field.
func (o *LdapTargetDetails) SetLdapTokenExpiration(v string) {
	o.LdapTokenExpiration = &v
}

// GetLdapUrl returns the LdapUrl field value if set, zero value otherwise.
func (o *LdapTargetDetails) GetLdapUrl() string {
	if o == nil || o.LdapUrl == nil {
		var ret string
		return ret
	}
	return *o.LdapUrl
}

// GetLdapUrlOk returns a tuple with the LdapUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapTargetDetails) GetLdapUrlOk() (*string, bool) {
	if o == nil || o.LdapUrl == nil {
		return nil, false
	}
	return o.LdapUrl, true
}

// HasLdapUrl returns a boolean if a field has been set.
func (o *LdapTargetDetails) HasLdapUrl() bool {
	if o != nil && o.LdapUrl != nil {
		return true
	}

	return false
}

// SetLdapUrl gets a reference to the given string and assigns it to the LdapUrl field.
func (o *LdapTargetDetails) SetLdapUrl(v string) {
	o.LdapUrl = &v
}

func (o LdapTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImplementationType != nil {
		toSerialize["implementation_type"] = o.ImplementationType
	}
	if o.LdapAudience != nil {
		toSerialize["ldap_audience"] = o.LdapAudience
	}
	if o.LdapBindDn != nil {
		toSerialize["ldap_bind_dn"] = o.LdapBindDn
	}
	if o.LdapBindPassword != nil {
		toSerialize["ldap_bind_password"] = o.LdapBindPassword
	}
	if o.LdapCertificate != nil {
		toSerialize["ldap_certificate"] = o.LdapCertificate
	}
	if o.LdapTokenExpiration != nil {
		toSerialize["ldap_token_expiration"] = o.LdapTokenExpiration
	}
	if o.LdapUrl != nil {
		toSerialize["ldap_url"] = o.LdapUrl
	}
	return json.Marshal(toSerialize)
}

type NullableLdapTargetDetails struct {
	value *LdapTargetDetails
	isSet bool
}

func (v NullableLdapTargetDetails) Get() *LdapTargetDetails {
	return v.value
}

func (v *NullableLdapTargetDetails) Set(val *LdapTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapTargetDetails(val *LdapTargetDetails) *NullableLdapTargetDetails {
	return &NullableLdapTargetDetails{value: val, isSet: true}
}

func (v NullableLdapTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


