/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GatewayCreateProducerPostgreSQL gatewayCreateProducerPostgreSQL is a command that creates postgresql producer
type GatewayCreateProducerPostgreSQL struct {
	// PostgreSQL Creation statements
	CreationStatements *string `json:"creation-statements,omitempty"`
	// Gateway url
	GatewayUrl *string `json:"gateway-url,omitempty"`
	// Producer name
	Name string `json:"name"`
	// PostgreSQL DB Name
	PostgresqlDbName string `json:"postgresql-db-name"`
	// PostgreSQL Host
	PostgresqlHost *string `json:"postgresql-host,omitempty"`
	// PostgreSQL Password
	PostgresqlPassword string `json:"postgresql-password"`
	// PostgreSQL Port
	PostgresqlPort *string `json:"postgresql-port,omitempty"`
	// PostgreSQL Username
	PostgresqlUsername string `json:"postgresql-username"`
	// Dynamic producer encryption key
	ProducerEncryptionKey *string `json:"producer-encryption-key,omitempty"`
	// Authentication token (see `/auth` and `/configure`)
	Token *string `json:"token,omitempty"`
	// The universal identity token, Required only for universal_identity authentication
	UidToken *string `json:"uid-token,omitempty"`
	// User TTL
	UserTtl *string `json:"user-ttl,omitempty"`
}

// NewGatewayCreateProducerPostgreSQL instantiates a new GatewayCreateProducerPostgreSQL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayCreateProducerPostgreSQL(name string, postgresqlDbName string, postgresqlPassword string, postgresqlUsername string, ) *GatewayCreateProducerPostgreSQL {
	this := GatewayCreateProducerPostgreSQL{}
	var gatewayUrl string = "http://localhost:8000"
	this.GatewayUrl = &gatewayUrl
	this.Name = name
	this.PostgresqlDbName = postgresqlDbName
	var postgresqlHost string = "127.0.0.1"
	this.PostgresqlHost = &postgresqlHost
	this.PostgresqlPassword = postgresqlPassword
	var postgresqlPort string = "5432"
	this.PostgresqlPort = &postgresqlPort
	this.PostgresqlUsername = postgresqlUsername
	var userTtl string = "60m"
	this.UserTtl = &userTtl
	return &this
}

// NewGatewayCreateProducerPostgreSQLWithDefaults instantiates a new GatewayCreateProducerPostgreSQL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayCreateProducerPostgreSQLWithDefaults() *GatewayCreateProducerPostgreSQL {
	this := GatewayCreateProducerPostgreSQL{}
	var gatewayUrl string = "http://localhost:8000"
	this.GatewayUrl = &gatewayUrl
	var postgresqlHost string = "127.0.0.1"
	this.PostgresqlHost = &postgresqlHost
	var postgresqlPort string = "5432"
	this.PostgresqlPort = &postgresqlPort
	var userTtl string = "60m"
	this.UserTtl = &userTtl
	return &this
}

// GetCreationStatements returns the CreationStatements field value if set, zero value otherwise.
func (o *GatewayCreateProducerPostgreSQL) GetCreationStatements() string {
	if o == nil || o.CreationStatements == nil {
		var ret string
		return ret
	}
	return *o.CreationStatements
}

// GetCreationStatementsOk returns a tuple with the CreationStatements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetCreationStatementsOk() (*string, bool) {
	if o == nil || o.CreationStatements == nil {
		return nil, false
	}
	return o.CreationStatements, true
}

// HasCreationStatements returns a boolean if a field has been set.
func (o *GatewayCreateProducerPostgreSQL) HasCreationStatements() bool {
	if o != nil && o.CreationStatements != nil {
		return true
	}

	return false
}

// SetCreationStatements gets a reference to the given string and assigns it to the CreationStatements field.
func (o *GatewayCreateProducerPostgreSQL) SetCreationStatements(v string) {
	o.CreationStatements = &v
}

// GetGatewayUrl returns the GatewayUrl field value if set, zero value otherwise.
func (o *GatewayCreateProducerPostgreSQL) GetGatewayUrl() string {
	if o == nil || o.GatewayUrl == nil {
		var ret string
		return ret
	}
	return *o.GatewayUrl
}

// GetGatewayUrlOk returns a tuple with the GatewayUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetGatewayUrlOk() (*string, bool) {
	if o == nil || o.GatewayUrl == nil {
		return nil, false
	}
	return o.GatewayUrl, true
}

// HasGatewayUrl returns a boolean if a field has been set.
func (o *GatewayCreateProducerPostgreSQL) HasGatewayUrl() bool {
	if o != nil && o.GatewayUrl != nil {
		return true
	}

	return false
}

// SetGatewayUrl gets a reference to the given string and assigns it to the GatewayUrl field.
func (o *GatewayCreateProducerPostgreSQL) SetGatewayUrl(v string) {
	o.GatewayUrl = &v
}

// GetName returns the Name field value
func (o *GatewayCreateProducerPostgreSQL) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GatewayCreateProducerPostgreSQL) SetName(v string) {
	o.Name = v
}

// GetPostgresqlDbName returns the PostgresqlDbName field value
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlDbName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PostgresqlDbName
}

// GetPostgresqlDbNameOk returns a tuple with the PostgresqlDbName field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlDbNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PostgresqlDbName, true
}

// SetPostgresqlDbName sets field value
func (o *GatewayCreateProducerPostgreSQL) SetPostgresqlDbName(v string) {
	o.PostgresqlDbName = v
}

// GetPostgresqlHost returns the PostgresqlHost field value if set, zero value otherwise.
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlHost() string {
	if o == nil || o.PostgresqlHost == nil {
		var ret string
		return ret
	}
	return *o.PostgresqlHost
}

// GetPostgresqlHostOk returns a tuple with the PostgresqlHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlHostOk() (*string, bool) {
	if o == nil || o.PostgresqlHost == nil {
		return nil, false
	}
	return o.PostgresqlHost, true
}

// HasPostgresqlHost returns a boolean if a field has been set.
func (o *GatewayCreateProducerPostgreSQL) HasPostgresqlHost() bool {
	if o != nil && o.PostgresqlHost != nil {
		return true
	}

	return false
}

// SetPostgresqlHost gets a reference to the given string and assigns it to the PostgresqlHost field.
func (o *GatewayCreateProducerPostgreSQL) SetPostgresqlHost(v string) {
	o.PostgresqlHost = &v
}

// GetPostgresqlPassword returns the PostgresqlPassword field value
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlPassword() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PostgresqlPassword
}

// GetPostgresqlPasswordOk returns a tuple with the PostgresqlPassword field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PostgresqlPassword, true
}

// SetPostgresqlPassword sets field value
func (o *GatewayCreateProducerPostgreSQL) SetPostgresqlPassword(v string) {
	o.PostgresqlPassword = v
}

// GetPostgresqlPort returns the PostgresqlPort field value if set, zero value otherwise.
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlPort() string {
	if o == nil || o.PostgresqlPort == nil {
		var ret string
		return ret
	}
	return *o.PostgresqlPort
}

// GetPostgresqlPortOk returns a tuple with the PostgresqlPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlPortOk() (*string, bool) {
	if o == nil || o.PostgresqlPort == nil {
		return nil, false
	}
	return o.PostgresqlPort, true
}

// HasPostgresqlPort returns a boolean if a field has been set.
func (o *GatewayCreateProducerPostgreSQL) HasPostgresqlPort() bool {
	if o != nil && o.PostgresqlPort != nil {
		return true
	}

	return false
}

// SetPostgresqlPort gets a reference to the given string and assigns it to the PostgresqlPort field.
func (o *GatewayCreateProducerPostgreSQL) SetPostgresqlPort(v string) {
	o.PostgresqlPort = &v
}

// GetPostgresqlUsername returns the PostgresqlUsername field value
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlUsername() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PostgresqlUsername
}

// GetPostgresqlUsernameOk returns a tuple with the PostgresqlUsername field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetPostgresqlUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PostgresqlUsername, true
}

// SetPostgresqlUsername sets field value
func (o *GatewayCreateProducerPostgreSQL) SetPostgresqlUsername(v string) {
	o.PostgresqlUsername = v
}

// GetProducerEncryptionKey returns the ProducerEncryptionKey field value if set, zero value otherwise.
func (o *GatewayCreateProducerPostgreSQL) GetProducerEncryptionKey() string {
	if o == nil || o.ProducerEncryptionKey == nil {
		var ret string
		return ret
	}
	return *o.ProducerEncryptionKey
}

// GetProducerEncryptionKeyOk returns a tuple with the ProducerEncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetProducerEncryptionKeyOk() (*string, bool) {
	if o == nil || o.ProducerEncryptionKey == nil {
		return nil, false
	}
	return o.ProducerEncryptionKey, true
}

// HasProducerEncryptionKey returns a boolean if a field has been set.
func (o *GatewayCreateProducerPostgreSQL) HasProducerEncryptionKey() bool {
	if o != nil && o.ProducerEncryptionKey != nil {
		return true
	}

	return false
}

// SetProducerEncryptionKey gets a reference to the given string and assigns it to the ProducerEncryptionKey field.
func (o *GatewayCreateProducerPostgreSQL) SetProducerEncryptionKey(v string) {
	o.ProducerEncryptionKey = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GatewayCreateProducerPostgreSQL) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GatewayCreateProducerPostgreSQL) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *GatewayCreateProducerPostgreSQL) SetToken(v string) {
	o.Token = &v
}

// GetUidToken returns the UidToken field value if set, zero value otherwise.
func (o *GatewayCreateProducerPostgreSQL) GetUidToken() string {
	if o == nil || o.UidToken == nil {
		var ret string
		return ret
	}
	return *o.UidToken
}

// GetUidTokenOk returns a tuple with the UidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetUidTokenOk() (*string, bool) {
	if o == nil || o.UidToken == nil {
		return nil, false
	}
	return o.UidToken, true
}

// HasUidToken returns a boolean if a field has been set.
func (o *GatewayCreateProducerPostgreSQL) HasUidToken() bool {
	if o != nil && o.UidToken != nil {
		return true
	}

	return false
}

// SetUidToken gets a reference to the given string and assigns it to the UidToken field.
func (o *GatewayCreateProducerPostgreSQL) SetUidToken(v string) {
	o.UidToken = &v
}

// GetUserTtl returns the UserTtl field value if set, zero value otherwise.
func (o *GatewayCreateProducerPostgreSQL) GetUserTtl() string {
	if o == nil || o.UserTtl == nil {
		var ret string
		return ret
	}
	return *o.UserTtl
}

// GetUserTtlOk returns a tuple with the UserTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerPostgreSQL) GetUserTtlOk() (*string, bool) {
	if o == nil || o.UserTtl == nil {
		return nil, false
	}
	return o.UserTtl, true
}

// HasUserTtl returns a boolean if a field has been set.
func (o *GatewayCreateProducerPostgreSQL) HasUserTtl() bool {
	if o != nil && o.UserTtl != nil {
		return true
	}

	return false
}

// SetUserTtl gets a reference to the given string and assigns it to the UserTtl field.
func (o *GatewayCreateProducerPostgreSQL) SetUserTtl(v string) {
	o.UserTtl = &v
}

func (o GatewayCreateProducerPostgreSQL) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreationStatements != nil {
		toSerialize["creation-statements"] = o.CreationStatements
	}
	if o.GatewayUrl != nil {
		toSerialize["gateway-url"] = o.GatewayUrl
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["postgresql-db-name"] = o.PostgresqlDbName
	}
	if o.PostgresqlHost != nil {
		toSerialize["postgresql-host"] = o.PostgresqlHost
	}
	if true {
		toSerialize["postgresql-password"] = o.PostgresqlPassword
	}
	if o.PostgresqlPort != nil {
		toSerialize["postgresql-port"] = o.PostgresqlPort
	}
	if true {
		toSerialize["postgresql-username"] = o.PostgresqlUsername
	}
	if o.ProducerEncryptionKey != nil {
		toSerialize["producer-encryption-key"] = o.ProducerEncryptionKey
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.UidToken != nil {
		toSerialize["uid-token"] = o.UidToken
	}
	if o.UserTtl != nil {
		toSerialize["user-ttl"] = o.UserTtl
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayCreateProducerPostgreSQL struct {
	value *GatewayCreateProducerPostgreSQL
	isSet bool
}

func (v NullableGatewayCreateProducerPostgreSQL) Get() *GatewayCreateProducerPostgreSQL {
	return v.value
}

func (v *NullableGatewayCreateProducerPostgreSQL) Set(val *GatewayCreateProducerPostgreSQL) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayCreateProducerPostgreSQL) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayCreateProducerPostgreSQL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayCreateProducerPostgreSQL(val *GatewayCreateProducerPostgreSQL) *NullableGatewayCreateProducerPostgreSQL {
	return &NullableGatewayCreateProducerPostgreSQL{value: val, isSet: true}
}

func (v NullableGatewayCreateProducerPostgreSQL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayCreateProducerPostgreSQL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


