/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// LastStatusInfo struct for LastStatusInfo
type LastStatusInfo struct {
	MigrationsStatus *MigrationStatus `json:"migrations_status,omitempty"`
	ProducersErrors *map[string]interface{} `json:"producers_errors,omitempty"`
	// flag to indicate migrationStatus copied to new table
	WasMigrationsCopiedToNewTable *bool `json:"was_migrations_copied_to_new_table,omitempty"`
}

// NewLastStatusInfo instantiates a new LastStatusInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastStatusInfo() *LastStatusInfo {
	this := LastStatusInfo{}
	return &this
}

// NewLastStatusInfoWithDefaults instantiates a new LastStatusInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastStatusInfoWithDefaults() *LastStatusInfo {
	this := LastStatusInfo{}
	return &this
}

// GetMigrationsStatus returns the MigrationsStatus field value if set, zero value otherwise.
func (o *LastStatusInfo) GetMigrationsStatus() MigrationStatus {
	if o == nil || o.MigrationsStatus == nil {
		var ret MigrationStatus
		return ret
	}
	return *o.MigrationsStatus
}

// GetMigrationsStatusOk returns a tuple with the MigrationsStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastStatusInfo) GetMigrationsStatusOk() (*MigrationStatus, bool) {
	if o == nil || o.MigrationsStatus == nil {
		return nil, false
	}
	return o.MigrationsStatus, true
}

// HasMigrationsStatus returns a boolean if a field has been set.
func (o *LastStatusInfo) HasMigrationsStatus() bool {
	if o != nil && o.MigrationsStatus != nil {
		return true
	}

	return false
}

// SetMigrationsStatus gets a reference to the given MigrationStatus and assigns it to the MigrationsStatus field.
func (o *LastStatusInfo) SetMigrationsStatus(v MigrationStatus) {
	o.MigrationsStatus = &v
}

// GetProducersErrors returns the ProducersErrors field value if set, zero value otherwise.
func (o *LastStatusInfo) GetProducersErrors() map[string]interface{} {
	if o == nil || o.ProducersErrors == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.ProducersErrors
}

// GetProducersErrorsOk returns a tuple with the ProducersErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastStatusInfo) GetProducersErrorsOk() (*map[string]interface{}, bool) {
	if o == nil || o.ProducersErrors == nil {
		return nil, false
	}
	return o.ProducersErrors, true
}

// HasProducersErrors returns a boolean if a field has been set.
func (o *LastStatusInfo) HasProducersErrors() bool {
	if o != nil && o.ProducersErrors != nil {
		return true
	}

	return false
}

// SetProducersErrors gets a reference to the given map[string]interface{} and assigns it to the ProducersErrors field.
func (o *LastStatusInfo) SetProducersErrors(v map[string]interface{}) {
	o.ProducersErrors = &v
}

// GetWasMigrationsCopiedToNewTable returns the WasMigrationsCopiedToNewTable field value if set, zero value otherwise.
func (o *LastStatusInfo) GetWasMigrationsCopiedToNewTable() bool {
	if o == nil || o.WasMigrationsCopiedToNewTable == nil {
		var ret bool
		return ret
	}
	return *o.WasMigrationsCopiedToNewTable
}

// GetWasMigrationsCopiedToNewTableOk returns a tuple with the WasMigrationsCopiedToNewTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastStatusInfo) GetWasMigrationsCopiedToNewTableOk() (*bool, bool) {
	if o == nil || o.WasMigrationsCopiedToNewTable == nil {
		return nil, false
	}
	return o.WasMigrationsCopiedToNewTable, true
}

// HasWasMigrationsCopiedToNewTable returns a boolean if a field has been set.
func (o *LastStatusInfo) HasWasMigrationsCopiedToNewTable() bool {
	if o != nil && o.WasMigrationsCopiedToNewTable != nil {
		return true
	}

	return false
}

// SetWasMigrationsCopiedToNewTable gets a reference to the given bool and assigns it to the WasMigrationsCopiedToNewTable field.
func (o *LastStatusInfo) SetWasMigrationsCopiedToNewTable(v bool) {
	o.WasMigrationsCopiedToNewTable = &v
}

func (o LastStatusInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MigrationsStatus != nil {
		toSerialize["migrations_status"] = o.MigrationsStatus
	}
	if o.ProducersErrors != nil {
		toSerialize["producers_errors"] = o.ProducersErrors
	}
	if o.WasMigrationsCopiedToNewTable != nil {
		toSerialize["was_migrations_copied_to_new_table"] = o.WasMigrationsCopiedToNewTable
	}
	return json.Marshal(toSerialize)
}

type NullableLastStatusInfo struct {
	value *LastStatusInfo
	isSet bool
}

func (v NullableLastStatusInfo) Get() *LastStatusInfo {
	return v.value
}

func (v *NullableLastStatusInfo) Set(val *LastStatusInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableLastStatusInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableLastStatusInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastStatusInfo(val *LastStatusInfo) *NullableLastStatusInfo {
	return &NullableLastStatusInfo{value: val, isSet: true}
}

func (v NullableLastStatusInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastStatusInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


