/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
	"time"
)

// checks if the AuthMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthMethod{}

// AuthMethod struct for AuthMethod
type AuthMethod struct {
	AccessDate *time.Time `json:"access_date,omitempty"`
	AccessInfo *AuthMethodAccessInfo `json:"access_info,omitempty"`
	AccountId *string `json:"account_id,omitempty"`
	AuthMethodAccessId *string `json:"auth_method_access_id,omitempty"`
	AuthMethodName *string `json:"auth_method_name,omitempty"`
	AuthMethodRolesAssoc []AuthMethodRoleAssociation `json:"auth_method_roles_assoc,omitempty"`
	ClientPermissions []string `json:"client_permissions,omitempty"`
	CreationDate *time.Time `json:"creation_date,omitempty"`
	IsApproved *bool `json:"is_approved,omitempty"`
	ModificationDate *time.Time `json:"modification_date,omitempty"`
}

// NewAuthMethod instantiates a new AuthMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthMethod() *AuthMethod {
	this := AuthMethod{}
	return &this
}

// NewAuthMethodWithDefaults instantiates a new AuthMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthMethodWithDefaults() *AuthMethod {
	this := AuthMethod{}
	return &this
}

// GetAccessDate returns the AccessDate field value if set, zero value otherwise.
func (o *AuthMethod) GetAccessDate() time.Time {
	if o == nil || IsNil(o.AccessDate) {
		var ret time.Time
		return ret
	}
	return *o.AccessDate
}

// GetAccessDateOk returns a tuple with the AccessDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetAccessDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AccessDate) {
		return nil, false
	}
	return o.AccessDate, true
}

// HasAccessDate returns a boolean if a field has been set.
func (o *AuthMethod) HasAccessDate() bool {
	if o != nil && !IsNil(o.AccessDate) {
		return true
	}

	return false
}

// SetAccessDate gets a reference to the given time.Time and assigns it to the AccessDate field.
func (o *AuthMethod) SetAccessDate(v time.Time) {
	o.AccessDate = &v
}

// GetAccessInfo returns the AccessInfo field value if set, zero value otherwise.
func (o *AuthMethod) GetAccessInfo() AuthMethodAccessInfo {
	if o == nil || IsNil(o.AccessInfo) {
		var ret AuthMethodAccessInfo
		return ret
	}
	return *o.AccessInfo
}

// GetAccessInfoOk returns a tuple with the AccessInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetAccessInfoOk() (*AuthMethodAccessInfo, bool) {
	if o == nil || IsNil(o.AccessInfo) {
		return nil, false
	}
	return o.AccessInfo, true
}

// HasAccessInfo returns a boolean if a field has been set.
func (o *AuthMethod) HasAccessInfo() bool {
	if o != nil && !IsNil(o.AccessInfo) {
		return true
	}

	return false
}

// SetAccessInfo gets a reference to the given AuthMethodAccessInfo and assigns it to the AccessInfo field.
func (o *AuthMethod) SetAccessInfo(v AuthMethodAccessInfo) {
	o.AccessInfo = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AuthMethod) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AuthMethod) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AuthMethod) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAuthMethodAccessId returns the AuthMethodAccessId field value if set, zero value otherwise.
func (o *AuthMethod) GetAuthMethodAccessId() string {
	if o == nil || IsNil(o.AuthMethodAccessId) {
		var ret string
		return ret
	}
	return *o.AuthMethodAccessId
}

// GetAuthMethodAccessIdOk returns a tuple with the AuthMethodAccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetAuthMethodAccessIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthMethodAccessId) {
		return nil, false
	}
	return o.AuthMethodAccessId, true
}

// HasAuthMethodAccessId returns a boolean if a field has been set.
func (o *AuthMethod) HasAuthMethodAccessId() bool {
	if o != nil && !IsNil(o.AuthMethodAccessId) {
		return true
	}

	return false
}

// SetAuthMethodAccessId gets a reference to the given string and assigns it to the AuthMethodAccessId field.
func (o *AuthMethod) SetAuthMethodAccessId(v string) {
	o.AuthMethodAccessId = &v
}

// GetAuthMethodName returns the AuthMethodName field value if set, zero value otherwise.
func (o *AuthMethod) GetAuthMethodName() string {
	if o == nil || IsNil(o.AuthMethodName) {
		var ret string
		return ret
	}
	return *o.AuthMethodName
}

// GetAuthMethodNameOk returns a tuple with the AuthMethodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetAuthMethodNameOk() (*string, bool) {
	if o == nil || IsNil(o.AuthMethodName) {
		return nil, false
	}
	return o.AuthMethodName, true
}

// HasAuthMethodName returns a boolean if a field has been set.
func (o *AuthMethod) HasAuthMethodName() bool {
	if o != nil && !IsNil(o.AuthMethodName) {
		return true
	}

	return false
}

// SetAuthMethodName gets a reference to the given string and assigns it to the AuthMethodName field.
func (o *AuthMethod) SetAuthMethodName(v string) {
	o.AuthMethodName = &v
}

// GetAuthMethodRolesAssoc returns the AuthMethodRolesAssoc field value if set, zero value otherwise.
func (o *AuthMethod) GetAuthMethodRolesAssoc() []AuthMethodRoleAssociation {
	if o == nil || IsNil(o.AuthMethodRolesAssoc) {
		var ret []AuthMethodRoleAssociation
		return ret
	}
	return o.AuthMethodRolesAssoc
}

// GetAuthMethodRolesAssocOk returns a tuple with the AuthMethodRolesAssoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetAuthMethodRolesAssocOk() ([]AuthMethodRoleAssociation, bool) {
	if o == nil || IsNil(o.AuthMethodRolesAssoc) {
		return nil, false
	}
	return o.AuthMethodRolesAssoc, true
}

// HasAuthMethodRolesAssoc returns a boolean if a field has been set.
func (o *AuthMethod) HasAuthMethodRolesAssoc() bool {
	if o != nil && !IsNil(o.AuthMethodRolesAssoc) {
		return true
	}

	return false
}

// SetAuthMethodRolesAssoc gets a reference to the given []AuthMethodRoleAssociation and assigns it to the AuthMethodRolesAssoc field.
func (o *AuthMethod) SetAuthMethodRolesAssoc(v []AuthMethodRoleAssociation) {
	o.AuthMethodRolesAssoc = v
}

// GetClientPermissions returns the ClientPermissions field value if set, zero value otherwise.
func (o *AuthMethod) GetClientPermissions() []string {
	if o == nil || IsNil(o.ClientPermissions) {
		var ret []string
		return ret
	}
	return o.ClientPermissions
}

// GetClientPermissionsOk returns a tuple with the ClientPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetClientPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.ClientPermissions) {
		return nil, false
	}
	return o.ClientPermissions, true
}

// HasClientPermissions returns a boolean if a field has been set.
func (o *AuthMethod) HasClientPermissions() bool {
	if o != nil && !IsNil(o.ClientPermissions) {
		return true
	}

	return false
}

// SetClientPermissions gets a reference to the given []string and assigns it to the ClientPermissions field.
func (o *AuthMethod) SetClientPermissions(v []string) {
	o.ClientPermissions = v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *AuthMethod) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *AuthMethod) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *AuthMethod) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetIsApproved returns the IsApproved field value if set, zero value otherwise.
func (o *AuthMethod) GetIsApproved() bool {
	if o == nil || IsNil(o.IsApproved) {
		var ret bool
		return ret
	}
	return *o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetIsApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsApproved) {
		return nil, false
	}
	return o.IsApproved, true
}

// HasIsApproved returns a boolean if a field has been set.
func (o *AuthMethod) HasIsApproved() bool {
	if o != nil && !IsNil(o.IsApproved) {
		return true
	}

	return false
}

// SetIsApproved gets a reference to the given bool and assigns it to the IsApproved field.
func (o *AuthMethod) SetIsApproved(v bool) {
	o.IsApproved = &v
}

// GetModificationDate returns the ModificationDate field value if set, zero value otherwise.
func (o *AuthMethod) GetModificationDate() time.Time {
	if o == nil || IsNil(o.ModificationDate) {
		var ret time.Time
		return ret
	}
	return *o.ModificationDate
}

// GetModificationDateOk returns a tuple with the ModificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthMethod) GetModificationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModificationDate) {
		return nil, false
	}
	return o.ModificationDate, true
}

// HasModificationDate returns a boolean if a field has been set.
func (o *AuthMethod) HasModificationDate() bool {
	if o != nil && !IsNil(o.ModificationDate) {
		return true
	}

	return false
}

// SetModificationDate gets a reference to the given time.Time and assigns it to the ModificationDate field.
func (o *AuthMethod) SetModificationDate(v time.Time) {
	o.ModificationDate = &v
}

func (o AuthMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessDate) {
		toSerialize["access_date"] = o.AccessDate
	}
	if !IsNil(o.AccessInfo) {
		toSerialize["access_info"] = o.AccessInfo
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AuthMethodAccessId) {
		toSerialize["auth_method_access_id"] = o.AuthMethodAccessId
	}
	if !IsNil(o.AuthMethodName) {
		toSerialize["auth_method_name"] = o.AuthMethodName
	}
	if !IsNil(o.AuthMethodRolesAssoc) {
		toSerialize["auth_method_roles_assoc"] = o.AuthMethodRolesAssoc
	}
	if !IsNil(o.ClientPermissions) {
		toSerialize["client_permissions"] = o.ClientPermissions
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creation_date"] = o.CreationDate
	}
	if !IsNil(o.IsApproved) {
		toSerialize["is_approved"] = o.IsApproved
	}
	if !IsNil(o.ModificationDate) {
		toSerialize["modification_date"] = o.ModificationDate
	}
	return toSerialize, nil
}

type NullableAuthMethod struct {
	value *AuthMethod
	isSet bool
}

func (v NullableAuthMethod) Get() *AuthMethod {
	return v.value
}

func (v *NullableAuthMethod) Set(val *AuthMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthMethod(val *AuthMethod) *NullableAuthMethod {
	return &NullableAuthMethod{value: val, isSet: true}
}

func (v NullableAuthMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


