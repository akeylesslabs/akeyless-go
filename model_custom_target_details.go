/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// CustomTargetDetails struct for CustomTargetDetails
type CustomTargetDetails struct {
	Payload *string `json:"payload,omitempty"`
}

// NewCustomTargetDetails instantiates a new CustomTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomTargetDetails() *CustomTargetDetails {
	this := CustomTargetDetails{}
	return &this
}

// NewCustomTargetDetailsWithDefaults instantiates a new CustomTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomTargetDetailsWithDefaults() *CustomTargetDetails {
	this := CustomTargetDetails{}
	return &this
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *CustomTargetDetails) GetPayload() string {
	if o == nil || o.Payload == nil {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomTargetDetails) GetPayloadOk() (*string, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *CustomTargetDetails) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *CustomTargetDetails) SetPayload(v string) {
	o.Payload = &v
}

func (o CustomTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	return json.Marshal(toSerialize)
}

type NullableCustomTargetDetails struct {
	value *CustomTargetDetails
	isSet bool
}

func (v NullableCustomTargetDetails) Get() *CustomTargetDetails {
	return v.value
}

func (v *NullableCustomTargetDetails) Set(val *CustomTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomTargetDetails(val *CustomTargetDetails) *NullableCustomTargetDetails {
	return &NullableCustomTargetDetails{value: val, isSet: true}
}

func (v NullableCustomTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


