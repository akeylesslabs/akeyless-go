openapi: 3.0.1
info:
  contact:
    email: support@akeyless.io
    name: Akeyless
    url: http://akeyless.io
  description: The purpose of this application is to provide access to Akeyless API.
  title: Akeyless API
  version: "2.0"
servers:
- url: https://api.akeyless.io/
paths: {}
components:
  responses:
    CreateClassicKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateClassicKeyOutput'
      description: CreateClassicKeyResponse wraps response body.
    DescribePermissionsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DescribePermissionsOutput'
      description: DescribePermissionsResponse wraps response body.
    ExportClassicKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportClassicKeyOutput'
      description: ExportClassicKeyResponse wraps response body.
    GatewayUpdateLdapAuthConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayUpdateLdapAuthConfigOutput'
      description: GatewayUpdateLdapAuthConfigResponse wraps response body.
    GatewayUpdateTlsCertResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayUpdateTlsCertOutput'
      description: GatewayUpdateTlsCertResponse wraps response body.
    assocRoleAuthMethodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRoleAuthMethodAssocOutput'
      description: assocRoleAuthMethodResponse wraps response body.
    assocTargetItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTargetItemAssocOutput'
      description: assocTargetItemResponse wraps response body.
    authResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthOutput'
      description: authResponse wraps response body.
    configureResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/configureOutput'
      description: configureResponse wraps response body.
    connectResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/connectOutput'
      description: connectResponse wraps response body.
    createAWSTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAWSTargetOutput'
      description: createAWSTargetResponse wraps response body.
    createArtifactoryTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createArtifactoryTargetOutput'
      description: createArtifactoryTargetResponse wraps response body.
    createAuthMethodAWSIAMResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodAWSIAMOutput'
      description: createAuthMethodAWSIAMResponse wraps response body.
    createAuthMethodAzureADResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodAzureADOutput'
      description: createAuthMethodAzureADResponse wraps response body.
    createAuthMethodCertResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodCertOutput'
      description: createAuthMethodCertResponse wraps response body.
    createAuthMethodGCPResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodGCPOutput'
      description: createAuthMethodGCPResponse wraps response body.
    createAuthMethodHuaweiResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodHuaweiOutput'
      description: createAuthMethodHuaweiResponse wraps response body.
    createAuthMethodK8SResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodK8SOutput'
      description: createAuthMethodK8SResponse wraps response body.
    createAuthMethodLDAPResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodLDAPOutput'
      description: createAuthMethodLDAPResponse wraps response body.
    createAuthMethodOAuth2Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodOAuth2Output'
      description: createAuthMethodOAuth2Response wraps response body.
    createAuthMethodOIDCResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodOIDCOutput'
      description: createAuthMethodOIDCResponse wraps response body.
    createAuthMethodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodOutput'
      description: createAuthMethodResponse wraps response body.
    createAuthMethodSAMLResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodSAMLOutput'
      description: createAuthMethodSAMLResponse wraps response body.
    createAuthMethodUniversalIdentityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodUniversalIdentityOutput'
      description: createAuthMethodUniversalIdentityResponse wraps response body.
    createAzureTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAzureTargetOutput'
      description: createAzureTargetResponse wraps response body.
    createCertificateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createCertificateOutput'
      description: createCertificateResponse wraps response body.
    createDBTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createDBTargetOutput'
      description: createDBTargetResponse wraps response body.
    createDFCKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createDFCKeyOutput'
      description: createDFCKeyResponse wraps response body.
    createDockerhubTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createDockerhubTargetOutput'
      description: createDockerhubTargetResponse wraps response body.
    createDynamicSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createDynamicSecretOutput'
      description: createDynamicSecretResponse wraps response body.
    createEKSTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createEKSTargetOutput'
      description: createEKSTargetResponse wraps response body.
    createEventForwarderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createEventForwarderOutput'
      description: createEventForwarderResponse wraps response body.
    createGKETargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createGKETargetOutput'
      description: createGKETargetResponse wraps response body.
    createGcpTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createGcpTargetOutput'
      description: createGcpTargetResponse wraps response body.
    createGithubTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createGithubTargetOutput'
      description: createGithubTargetResponse wraps response body.
    createKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createKeyOutput'
      description: createKeyResponse wraps response body.
    createNativeK8STargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createNativeK8STargetOutput'
      description: createNativeK8STargetResponse wraps response body.
    createPKICertIssuerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createPKICertIssuerOutput'
      description: createPKICertIssuerResponse wraps response body.
    createPingTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createPingTargetOutput'
      description: createPingTargetResponse wraps response body.
    createRabbitMQTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createRabbitMQTargetOutput'
      description: createRabbitMQTargetResponse wraps response body.
    createRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createRoleOutput'
      description: createRoleResponse wraps response body.
    createRotatedSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRotatedSecretOutput'
      description: createRotatedSecretResponse wraps response body.
    createSSHCertIssuerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSSHCertIssuerOutput'
      description: createSSHCertIssuerResponse wraps response body.
    createSSHTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSSHTargetOutput'
      description: createSSHTargetResponse wraps response body.
    createSalesforceTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSalesforceTargetOutput'
      description: createSalesforceTargetResponse wraps response body.
    createSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSecretOutput'
      description: createSecretResponse wraps response body.
    createTokenizerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createTokenizerOutput'
      description: createTokenizerResponse wraps response body.
    createWebTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createWebTargetOutput'
      description: createWebTargetResponse wraps response body.
    createldapTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createLdapTargetOutput'
      description: createldapTargetResponse wraps response body.
    decryptFileResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/decryptFileOutput'
      description: decryptFileResponse wraps response body.
    decryptGPGResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/decryptGPGOutput'
      description: decryptGPGResponse wraps response body.
    decryptPKCS1Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/decryptPKCS1Output'
      description: decryptPKCS1Response wraps response body.
    decryptResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/decryptOutput'
      description: decryptResponse wraps response body.
    decryptWithClassicKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/decryptWithClassicKeyOutput'
      description: decryptWithClassicKeyResponse wraps response body.
    deleteAuthMethodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteAuthMethodOutput'
      description: deleteAuthMethodResponse wraps response body.
    deleteAuthMethodsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteAuthMethodsOutput'
      description: deleteAuthMethodsResponse wraps response body.
    deleteEventForwarderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteEventForwarderOutput'
      description: deleteEventForwarderResponse wraps response body.
    deleteItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteItemOutput'
      description: deleteItemResponse wraps response body.
    deleteItemsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteItemsOutput'
      description: deleteItemsResponse wraps response body.
    deleteRoleAssociationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteRoleAssociationOutput'
      description: deleteRoleAssociationResponse wraps response body.
    deleteRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteRoleOutput'
      description: deleteRoleResponse wraps response body.
    deleteRoleRuleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteRoleRuleOutput'
      description: deleteRoleRuleResponse wraps response body.
    deleteRolesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteRolesOutput'
      description: deleteRolesResponse wraps response body.
    deleteTargetAssociationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteTargetAssociationOutput'
      description: deleteTargetAssociationResponse wraps response body.
    deleteTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteTargetOutput'
      description: deleteTargetResponse wraps response body.
    deleteTargetsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteTargetsOutput'
      description: deleteTargetsResponse wraps response body.
    describeItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Item'
      description: describeItemResponse wraps response body.
    describeSubClaimsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/describeSubClaimsOutput'
      description: describeSubClaimsResponse wraps response body.
    detokenizeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/detokenizeOutput'
      description: detokenizeResponse wraps response body.
    encryptFileResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/encryptFileOutput'
      description: encryptFileResponse wraps response body.
    encryptGPGResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/encryptGPGOutput'
      description: encryptGPGResponse wraps response body.
    encryptResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/encryptOutput'
      description: encryptResponse wraps response body.
    encryptWithClassicKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/encryptWithClassicKeyOutput'
      description: encryptWithClassicKeyResponse wraps response body.
    errorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONError'
      description: |-
        errorResponse wraps any error to return it as a JSON object with one "error"
        field.
    gatewayCreateK8SAuthConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateK8SAuthConfigOutput'
      description: gatewayCreateK8SAuthConfigResponse wraps response body.
    gatewayCreateProducerArtifactoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerArtifactoryOutput'
      description: gatewayCreateProducerArtifactoryResponse wraps response body.
    gatewayCreateProducerAwsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerAwsOutput'
      description: gatewayCreateProducerAwsResponse wraps response body.
    gatewayCreateProducerAzureResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerAzureOutput'
      description: gatewayCreateProducerAzureResponse wraps response body.
    gatewayCreateProducerCassandraResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerCassandraOutput'
      description: gatewayCreateProducerCassandraResponse wraps response body.
    gatewayCreateProducerCertificateAutomationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerCertificateAutomationOutput'
      description: gatewayCreateProducerCertificateAutomationResponse wraps response
        body.
    gatewayCreateProducerChefResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerChefOutput'
      description: gatewayCreateProducerChefResponse wraps response body.
    gatewayCreateProducerCustomResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerCustomOutput'
      description: gatewayCreateProducerCustomResponse wraps response body.
    gatewayCreateProducerDockerhubResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerDockerhubOutput'
      description: gatewayCreateProducerDockerhubResponse wraps response body.
    gatewayCreateProducerEksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerEksOutput'
      description: gatewayCreateProducerEksResponse wraps response body.
    gatewayCreateProducerGcpResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerGcpOutput'
      description: gatewayCreateProducerGcpResponse wraps response body.
    gatewayCreateProducerGithubResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerGithubOutput'
      description: gatewayCreateProducerGithubResponse wraps response body.
    gatewayCreateProducerGkeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerGkeOutput'
      description: gatewayCreateProducerGkeResponse wraps response body.
    gatewayCreateProducerHanaDbResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerHanaDbOutput'
      description: gatewayCreateProducerHanaDbResponse wraps response body.
    gatewayCreateProducerLdapResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerLdapOutput'
      description: gatewayCreateProducerLdapResponse wraps response body.
    gatewayCreateProducerMSSQLResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerMSSQLOutput'
      description: gatewayCreateProducerMSSQLResponse wraps response body.
    gatewayCreateProducerMongoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerMongoOutput'
      description: gatewayCreateProducerMongoResponse wraps response body.
    gatewayCreateProducerMySQLResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerMySQLOutput'
      description: gatewayCreateProducerMySQLResponse wraps response body.
    gatewayCreateProducerNativeK8SResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerNativeK8SOutput'
      description: gatewayCreateProducerNativeK8SResponse wraps response body.
    gatewayCreateProducerOracleDbResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerOracleDbOutput'
      description: gatewayCreateProducerOracleDbResponse wraps response body.
    gatewayCreateProducerPingResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerPingOutput'
      description: gatewayCreateProducerPingResponse wraps response body.
    gatewayCreateProducerPostgreSQLResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerPostgreSQLOutput'
      description: gatewayCreateProducerPostgreSQLResponse wraps response body.
    gatewayCreateProducerRabbitMQResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerRabbitMQOutput'
      description: gatewayCreateProducerRabbitMQResponse wraps response body.
    gatewayCreateProducerRdpResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerRdpOutput'
      description: gatewayCreateProducerRdpResponse wraps response body.
    gatewayCreateProducerRedshiftResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerRedshiftOutput'
      description: gatewayCreateProducerRedshiftResponse wraps response body.
    gatewayCreateProducerSnowflakeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayCreateProducerSnowflakeOutput'
      description: gatewayCreateProducerSnowflakeResponse wraps response body.
    gatewayDeleteK8SAuthConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayDeleteK8SAuthConfigOutput'
      description: gatewayDeleteK8SAuthConfigResponse wraps response body.
    gatewayDeleteProducerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayDeleteProducerOutput'
      description: gatewayDeleteProducerResponse wraps response body.
    gatewayDeleteSubAdminsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayDeleteSubAdminsOutput'
      description: gatewayDeleteSubAdminsResponse wraps response body.
    gatewayGetConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AkeylessGatewayConfig'
      description: gatewayGetConfigResponse wraps response body.
    gatewayGetK8SAuthConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayGetK8SAuthConfigOutput'
      description: gatewayGetK8SAuthConfigResponse wraps response body.
    gatewayGetLdapAuthConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayGetLdapAuthConfigOutput'
      description: gatewayGetLdapAuthConfigResponse wraps response body.
    gatewayGetProducerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DSProducerDetails'
      description: gatewayGetProducerResponse wraps response body.
    gatewayGetTmpUsersResponse:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpUserData'
            type: array
      description: gatewayGetTmpUsersResponse wraps response body.
    gatewayListProducersResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProducersListReplyObj'
      description: gatewayListProducersResponse wraps response body.
    gatewayListSubAdminsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSubAdminsListReplyObj'
      description: gatewayListSubAdminsResponse wraps response body.
    gatewayMigratePersonalItemsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayMigratePersonalItemsOutput'
      description: gatewayMigratePersonalItemsResponse wraps response body.
    gatewayMigrationCreateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayMigrationCreateOutput'
      description: gatewayMigrationCreateResponse wraps response body.
    gatewayMigrationDeleteResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayMigrationDeleteOutput'
      description: gatewayMigrationDeleteResponse wraps response body.
    gatewayMigrationGetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayMigrationGetOutput'
      description: gatewayMigrationGetResponse wraps response body.
    gatewayMigrationListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayMigrationListOutput'
      description: gatewayMigrationListResponse wraps response body.
    gatewayMigrationStatusResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MigrationStatusReplyObj'
      description: gatewayMigrationStatusResponse wraps response body.
    gatewayMigrationSyncResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayMigrationSyncOutput'
      description: gatewayMigrationSyncResponse wraps response body.
    gatewayMigrationUpdateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayMigrationUpdateOutput'
      description: gatewayMigrationUpdateResponse wraps response body.
    gatewayRevokeTmpUsersResponse:
      content: {}
      description: gatewayRevokeTmpUsersResponse wraps response body.
    gatewayStartProducerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayStartProducerOutput'
      description: gatewayStartProducerResponse wraps response body.
    gatewayStopProducerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayStopProducerOutput'
      description: gatewayStopProducerResponse wraps response body.
    gatewayUpdateItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateItemOutput'
      description: gatewayUpdateItemResponse wraps response body.
    gatewayUpdateK8SAuthConfigResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateK8SAuthConfigOutput'
      description: gatewayUpdateK8SAuthConfigResponse wraps response body.
    gatewayUpdateProducerArtifactoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerArtifactoryOutput'
      description: gatewayUpdateProducerArtifactoryResponse wraps response body.
    gatewayUpdateProducerAwsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerAwsOutput'
      description: gatewayUpdateProducerAwsResponse wraps response body.
    gatewayUpdateProducerAzureResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerAzureOutput'
      description: gatewayUpdateProducerAzureResponse wraps response body.
    gatewayUpdateProducerCassandraResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerCassandraOutput'
      description: gatewayUpdateProducerCassandraResponse wraps response body.
    gatewayUpdateProducerCertificateAutomationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerCertificateAutomationOutput'
      description: gatewayUpdateProducerCertificateAutomationResponse wraps response
        body.
    gatewayUpdateProducerChefResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerChefOutput'
      description: gatewayUpdateProducerChefResponse wraps response body.
    gatewayUpdateProducerCustomResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerCustomOutput'
      description: gatewayUpdateProducerCustomResponse wraps response body.
    gatewayUpdateProducerDockerhubResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerDockerhubOutput'
      description: gatewayUpdateProducerDockerhubResponse wraps response body.
    gatewayUpdateProducerEksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerEksOutput'
      description: gatewayUpdateProducerEksResponse wraps response body.
    gatewayUpdateProducerGcpResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerGcpOutput'
      description: gatewayUpdateProducerGcpResponse wraps response body.
    gatewayUpdateProducerGithubResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerGithubOutput'
      description: gatewayUpdateProducerGithubResponse wraps response body.
    gatewayUpdateProducerGkeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerGkeOutput'
      description: gatewayUpdateProducerGkeResponse wraps response body.
    gatewayUpdateProducerHanaDbResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerHanaDbOutput'
      description: gatewayUpdateProducerHanaDbResponse wraps response body.
    gatewayUpdateProducerLdapResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerLdapOutput'
      description: gatewayUpdateProducerLdapResponse wraps response body.
    gatewayUpdateProducerMSSQLResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerMSSQLOutput'
      description: gatewayUpdateProducerMSSQLResponse wraps response body.
    gatewayUpdateProducerMongoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerMongoOutput'
      description: gatewayUpdateProducerMongoResponse wraps response body.
    gatewayUpdateProducerMySQLResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerMySQLOutput'
      description: gatewayUpdateProducerMySQLResponse wraps response body.
    gatewayUpdateProducerNativeK8SResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerNativeK8SOutput'
      description: gatewayUpdateProducerNativeK8SResponse wraps response body.
    gatewayUpdateProducerOracleDbResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerOracleDbOutput'
      description: gatewayUpdateProducerOracleDbResponse wraps response body.
    gatewayUpdateProducerPingResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerPingOutput'
      description: gatewayUpdateProducerPingResponse wraps response body.
    gatewayUpdateProducerPostgreSQLResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerPostgreSQLOutput'
      description: gatewayUpdateProducerPostgreSQLResponse wraps response body.
    gatewayUpdateProducerRabbitMQResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerRabbitMQOutput'
      description: gatewayUpdateProducerRabbitMQResponse wraps response body.
    gatewayUpdateProducerRdpResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerRdpOutput'
      description: gatewayUpdateProducerRdpResponse wraps response body.
    gatewayUpdateProducerRedshiftResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerRedshiftOutput'
      description: gatewayUpdateProducerRedshiftResponse wraps response body.
    gatewayUpdateProducerSnowflakeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gatewayUpdateProducerSnowflakeOutput'
      description: gatewayUpdateProducerSnowflakeResponse wraps response body.
    gatewayUpdateTmpUsersResponse:
      content: {}
      description: gatewayUpdateTmpUsersResponse wraps response body.
    genCustomerFragmentResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerFragmentsJson'
      description: genCustomerFragmentResponse wraps response body.
    getAccountLogoResponse:
      content:
        application/json:
          schema:
            additionalProperties:
              type: string
            type: object
      description: getAccountLogoResponse wraps response body.
    getAccountSettingsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAccountSettingsCommandOutput'
      description: getAccountSettingsResponse wraps response body.
    getAuthMethodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthMethod'
      description: getAuthMethodResponse wraps response body.
    getCertificateValueResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCertificateValueOutput'
      description: getCertificateValueResponse wraps response body.
    getDynamicSecretValueResponse:
      content:
        application/json:
          schema:
            additionalProperties:
              type: string
            type: object
      description: getDynamicSecretValueResponse wraps response body.
    getEventForwarderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getEventForwarderOutput'
      description: getEventForwarderResponse wraps response body.
    getKubeExecCredsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getKubeExecCredsOutput'
      description: getKubeExecCredsResponse wraps response body.
    getPKICertificateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getPKICertificateOutput'
      description: getPKICertificateResponse wraps response body.
    getRSAPublicResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getRSAPublicOutput'
      description: getRSAPublicResponse wraps response body.
    getRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Role'
      description: getRoleResponse wraps response body.
    getRotatedSecretValueResponse:
      content:
        application/json:
          schema:
            type: object
      description: getRotatedSecretValueResponse wraps response body.
    getSSHCertificateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getSSHCertificateOutput'
      description: getSSHCertificateResponse wraps response body.
    getSecretValueResponse:
      content:
        application/json:
          schema:
            additionalProperties:
              type: string
            type: object
      description: getSecretValueResponse wraps response body.
    getTagsResponse:
      content:
        application/json:
          schema:
            items:
              type: string
            type: array
      description: getTagsResponse wraps response body.
    getTargetDetailsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTargetDetailsOutput'
      description: getTargetDetailsResponse wraps response body.
    getTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Target'
      description: getTargetResponse wraps response body.
    kmipClientDeleteRuleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KMIPClientUpdateResponse'
      description: kmipClientDeleteRuleResponse wraps response body.
    kmipClientSetRuleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KMIPClientUpdateResponse'
      description: kmipClientSetRuleResponse wraps response body.
    kmipCreateClientResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kmipCreateClientOutput'
      description: kmipCreateClientResponse wraps response body.
    kmipDeleteClientResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kmipDeleteClientOutput'
      description: kmipDeleteClientResponse wraps response body.
    kmipDeleteServerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kmipDeleteServerOutput'
      description: kmipDeleteServerResponse wraps response body.
    kmipDescribeClientResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KMIPClientGetResponse'
      description: kmipDescribeClientResponse wraps response body.
    kmipDescribeServerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kmipDescribeServerOutput'
      description: kmipDescribeServerResponse wraps response body.
    kmipListClientsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KMIPClientListResponse'
      description: kmipListClientsResponse wraps response body.
    kmipMoveServerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kmipMoveServerOutput'
      description: kmipMoveServerResponse wraps response body.
    kmipRenewClientCertificateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kmipRenewClientCertificateOutput'
      description: kmipRenewClientCertificateResponse wraps response body.
    kmipRenewServerCertificateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kmipRenewServerCertificateOutput'
      description: kmipRenewServerCertificateResponse wraps response body.
    kmipServerSetupResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KMIPEnvironmentCreateResponse'
      description: kmipServerSetupResponse wraps response body.
    kmipSetServerStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/kmipSetServerStateOutput'
      description: kmipSetServerStateResponse wraps response body.
    listAuthMethodsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListAuthMethodsOutput'
      description: listAuthMethodsResponse wraps response body.
    listGatewaysResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewaysListResponse'
      description: listGatewaysResponse wraps response body.
    listItemsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListItemsInPathOutput'
      description: listItemsResponse wraps response body.
    listRolesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListRolesOutput'
      description: listRolesResponse wraps response body.
    listSRABastionsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BastionsList'
      description: listSRABastionsResponse wraps response body.
    listSharedItemsResponse:
      content:
        application/json:
          schema:
            type: object
      description: listSharedItemsResponse wraps response body.
    listTargetsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListTargetsOutput'
      description: listTargetsResponse wraps response body.
    moveObjectsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/moveObjectsOutput'
      description: moveObjectsResponse wraps response body.
    rawCredsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemAccessCredentialsReplyObj'
      description: rawCredsResponse wraps response body.
    refreshKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/refreshKeyOutput'
      description: refreshKeyResponse wraps response body.
    requestAccessResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestAccessOutput'
      description: requestAccessResponse wraps response body.
    reverseRBACResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReverseRBACOutput'
      description: reverseRBACResponse wraps response body.
    revokeCredsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/revokeCredsOutput'
      description: revokeCredsResponse wraps response body.
    rollbackSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rollbackSecretOutput'
      description: rollbackSecretResponse wraps response body.
    rotateKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RotateKeyOutput'
      description: rotateKeyResponse wraps response body.
    rotateSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RotatedSecretOutput'
      description: rotateSecretResponse wraps response body.
    setItemStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/setItemStateOutput'
      description: setItemStateResponse wraps response body.
    setRoleRuleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/setRoleRuleOutput'
      description: setRoleRuleResponse wraps response body.
    shareItemResponse:
      content:
        application/json:
          schema:
            type: object
      description: shareItemResponse wraps response body.
    signGPGResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/signGPGOutput'
      description: signGPGResponse wraps response body.
    signJWTWithClassicKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/signJWTOutput'
      description: signJWTWithClassicKeyResponse wraps response body.
    signPKCS1Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/signPKCS1Output'
      description: signPKCS1Response wraps response body.
    signPKICertWithClassicKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/signPKICertOutput'
      description: signPKICertWithClassicKeyResponse wraps response body.
    staticCredsAuthResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/staticCredsAuthOutput'
      description: staticCredsAuthResponse wraps response body.
    tokenizeResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tokenizeOutput'
      description: tokenizeResponse wraps response body.
    uidCreateChildTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uidCreateChildTokenOutput'
      description: uidCreateChildTokenResponse wraps response body.
    uidGenerateTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uidGenerateTokenOutput'
      description: uidGenerateTokenResponse wraps response body.
    uidListChildrenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversalIdentityDetails'
      description: uidListChildrenResponse wraps response body.
    uidRevokeTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uidRevokeTokenOutput'
      description: uidRevokeTokenResponse wraps response body.
    uidRotateTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uidRotateTokenOutput'
      description: uidRotateTokenResponse wraps response body.
    unconfigureResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unconfigureOutput'
      description: unconfigureResponse wraps response body.
    updateAWSTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAWSTargetOutput'
      description: updateAWSTargetResponse wraps response body.
    updateAccountSettingsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAccountSettingsOutput'
      description: updateAccountSettingsResponse wraps response body.
    updateArtifactoryTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateArtifactoryTargetOutput'
      description: updateArtifactoryTargetResponse wraps response body.
    updateAssocResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAssocOutput'
      description: updateAssocResponse wraps response body.
    updateAuthMethodAWSIAMResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodAWSIAMOutput'
      description: updateAuthMethodAWSIAMResponse wraps response body.
    updateAuthMethodAzureADResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodAzureADOutput'
      description: updateAuthMethodAzureADResponse wraps response body.
    updateAuthMethodCertResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodCertOutput'
      description: updateAuthMethodCertResponse wraps response body.
    updateAuthMethodGCPResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodGCPOutput'
      description: updateAuthMethodGCPResponse wraps response body.
    updateAuthMethodK8SResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodK8SOutput'
      description: updateAuthMethodK8SResponse wraps response body.
    updateAuthMethodLDAPResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodLDAPOutput'
      description: updateAuthMethodLDAPResponse wraps response body.
    updateAuthMethodOAuth2Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodOAuth2Output'
      description: updateAuthMethodOAuth2Response wraps response body.
    updateAuthMethodOIDCResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodOIDCOutput'
      description: updateAuthMethodOIDCResponse wraps response body.
    updateAuthMethodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodOutput'
      description: updateAuthMethodResponse wraps response body.
    updateAuthMethodSAMLResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodSAMLOutput'
      description: updateAuthMethodSAMLResponse wraps response body.
    updateAuthMethodUniversalIdentityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAuthMethodUniversalIdentityOutput'
      description: updateAuthMethodUniversalIdentityResponse wraps response body.
    updateAzureTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateAzureTargetOutput'
      description: updateAzureTargetResponse wraps response body.
    updateCertificateValueResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateCertificateOutput'
      description: updateCertificateValueResponse wraps response body.
    updateDBTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateDBTargetOutput'
      description: updateDBTargetResponse wraps response body.
    updateDockerhubTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateDockerhubTargetOutput'
      description: updateDockerhubTargetResponse wraps response body.
    updateEKSTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateEKSTargetOutput'
      description: updateEKSTargetResponse wraps response body.
    updateEventForwarderResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateEventForwarderOutput'
      description: updateEventForwarderResponse wraps response body.
    updateGKETargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateGKETargetOutput'
      description: updateGKETargetResponse wraps response body.
    updateGcpTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateGcpTargetOutput'
      description: updateGcpTargetResponse wraps response body.
    updateGithubTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateGithubTargetOutput'
      description: updateGithubTargetResponse wraps response body.
    updateItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateItemOutput'
      description: updateItemResponse wraps response body.
    updateLdapTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateLdapTargetOutput'
      description: updateLdapTargetResponse wraps response body.
    updateNativeK8STargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateNativeK8STargetOutput'
      description: updateNativeK8STargetResponse wraps response body.
    updatePKICertIssuerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updatePKICertIssuerOutput'
      description: updatePKICertIssuerResponse wraps response body.
    updatePingTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updatePingTargetOutput'
      description: updatePingTargetResponse wraps response body.
    updateRabbitMQTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateRabbitMQTargetOutput'
      description: updateRabbitMQTargetResponse wraps response body.
    updateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateOutput'
      description: updateResponse wraps response body.
    updateRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateRoleOutput'
      description: updateRoleResponse wraps response body.
    updateRotatedSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateRotatedSecretOutput'
      description: updateRotatedSecretResponse wraps response body.
    updateSSHCertIssuerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateSSHCertIssuerOutput'
      description: updateSSHCertIssuerResponse wraps response body.
    updateSSHTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateSSHTargetOutput'
      description: updateSSHTargetResponse wraps response body.
    updateSalesforceTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateSalesforceTargetOutput'
      description: updateSalesforceTargetResponse wraps response body.
    updateSecretValResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSecretValOutput'
      description: updateSecretValResponse wraps response body.
    updateTargetDetailsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateTargetDetailsOutput'
      description: updateTargetDetailsResponse wraps response body.
    updateTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateTargetOutput'
      description: updateTargetResponse wraps response body.
    updateWebTargetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateWebTargetOutput'
      description: updateWebTargetResponse wraps response body.
    uploadPKCS12Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uploadPKCS12Output'
      description: uploadPKCS12Response wraps response body.
    uploadRSAResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uploadRSAOutput'
      description: uploadRSAResponse wraps response body.
    validateTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validateTokenOutput'
      description: validateTokenResponse wraps response body.
    verifyGPGResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/verifyGPGOutput'
      description: verifyGPGResponse wraps response body.
    verifyJWTWithClassicKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/verifyJWTOutput'
      description: verifyJWTWithClassicKeyResponse wraps response body.
    verifyPKCS1Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/verifyPKCS1Output'
      description: verifyPKCS1Response wraps response body.
    verifyPKICertWithClassicKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/verifyPKICertOutput'
      description: verifyPKICertWithClassicKeyResponse wraps response body.
  schemas:
    APIKeyAccessRules:
      properties:
        alg:
          title: Algorithm is a type that represents a single crypto algorithm.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        key:
          description: The public key value of the API-key.
          type: string
          x-go-name: PubKeyValue
      title: APIKeyAccessRules is a set of rules for API Key access type.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AWSAccessMode:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
    AWSIAMAccessRules:
      properties:
        account_id:
          description: The list of account ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: AccountID
        arn:
          description: The list of ARNs that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: Arn
        resource_id:
          description: The list of resource ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: ResourceID
        role_id:
          description: The list of role ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: RoleID
        role_name:
          description: The list of role names that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: RoleName
        sts_endpoint:
          description: The sts URL.
          type: string
          x-go-name: StsEndpoint
        user_id:
          description: The list of user ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: UserID
        user_name:
          description: The list of user names that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: UserName
      title: AWSIAMAccessRules contains access rules specific to AWS IAM.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AWSPayload:
      properties:
        key:
          type: string
          x-go-name: Key
        region:
          type: string
          x-go-name: Region
        secret:
          type: string
          x-go-name: Secret
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    AWSSecretsMigration:
      properties:
        general:
          $ref: '#/components/schemas/MigrationGeneral'
        payload:
          $ref: '#/components/schemas/AWSPayload'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    AccountGeneralSettings:
      description: AccountGeneralSettings describes general settings for an account
      properties:
        data_protection_section:
          $ref: '#/components/schemas/DataProtectionSection'
        enable_request_for_access:
          type: boolean
          x-go-name: EnableRequestForAccess
        password_policy:
          $ref: '#/components/schemas/PasswordPolicyInfo'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AccountObjectVersionSettingsOutput:
      properties:
        default-versioning:
          type: boolean
          x-go-name: CreateNewVersionByDefault
        items:
          items:
            $ref: '#/components/schemas/ObjectVersionSettingsOutput'
          type: array
          x-go-name: ObjectSettings
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    ActiveDirectoryMigration:
      properties:
        general:
          $ref: '#/components/schemas/MigrationGeneral'
        payload:
          $ref: '#/components/schemas/ActiveDirectoryPayload'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    ActiveDirectoryPayload:
      properties:
        active_directory_target_id:
          format: int64
          type: integer
          x-go-name: ActiveDirectoryTargetID
        auto_rotate:
          type: boolean
          x-go-name: AutoRotate
        auto_rotate_interval_in_days:
          format: int32
          type: integer
          x-go-name: AutoRotateIntervalInDays
        auto_rotate_rotation_hour:
          format: int32
          type: integer
          x-go-name: AutoRotateRotationHour
        computer_base_dn:
          type: string
          x-go-name: ComputerBaseDN
        discover_local_users:
          type: boolean
          x-go-name: DiscoverLocalUsers
        domain_name:
          type: string
          x-go-name: DomainName
        domain_server_targets_path_template:
          type: string
          x-go-name: DomainServerTargetsPathTemplate
        domain_users_rotated_secrets_path_template:
          type: string
          x-go-name: DomainUsersRotatedSecretsPathTemplate
        enable_rdp_sra:
          type: boolean
          x-go-name: EnableRdpSRA
        local_users_ignore_list:
          additionalProperties:
            type: boolean
          type: object
          x-go-name: LocalUsersIgnoreList
        local_users_rotated_secrets_path_template:
          type: string
          x-go-name: LocalUsersRotatedSecretsPathTemplate
        ssh_port:
          type: string
          x-go-name: SshPort
        user_base_dn:
          type: string
          x-go-name: UserBaseDN
        user_groups:
          items:
            type: string
          type: array
          x-go-name: UserGroups
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    AdminsConfigPart:
      properties:
        allowed_access:
          additionalProperties:
            $ref: '#/components/schemas/AllowedAccess'
          type: object
          x-go-name: Allowed
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    AkeylessGatewayConfig:
      properties:
        admins:
          $ref: '#/components/schemas/AdminsConfigPart'
        cache:
          $ref: '#/components/schemas/CacheConfigPart'
        cf:
          $ref: '#/components/schemas/CFConfigPart'
        config_protection_key_name:
          type: string
          x-go-name: ConfigProtectionKeyName
        general:
          $ref: '#/components/schemas/GeneralConfigPart'
        k8s_auths:
          $ref: '#/components/schemas/K8SAuthsConfigPart'
        kmip_clients:
          $ref: '#/components/schemas/KMIPConfigPart'
        ldap:
          $ref: '#/components/schemas/LdapConfigPart'
        leadership:
          $ref: '#/components/schemas/LeadershipConfigPart'
        log_forwarding:
          $ref: '#/components/schemas/LogForwardingConfigPart'
        message_queue_info:
          $ref: '#/components/schemas/GatewayMessageQueueInfo'
        migrations:
          $ref: '#/components/schemas/MigrationsConfigPart'
        producers:
          $ref: '#/components/schemas/ProducersConfigPart'
        rotators:
          $ref: '#/components/schemas/RotatorsConfigPart'
        saml:
          $ref: '#/components/schemas/DefaultConfigPart'
        version:
          format: uint64
          type: integer
          x-go-name: Version
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    Algorithm:
      title: Algorithm is a type that represents a single crypto algorithm.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AllowedAccess:
      properties:
        acc_id:
          type: string
          x-go-name: AccId
        access_rules_type:
          type: string
          x-go-name: AccessRulesType
        allowed_api:
          type: boolean
          x-go-name: AllowedApi
        alloweds_login:
          type: boolean
          x-go-name: AllowedsLogin
        err_msg:
          type: string
          x-go-name: ErrMsg
        hash:
          type: string
          x-go-name: Hash
        is_valid:
          type: boolean
          x-go-name: IsValid
        name:
          type: string
          x-go-name: Name
        sub_claims:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: SubClaims
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    AssocRelationship:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AttributeTypeAndValue:
      description: |-
        AttributeTypeAndValue mirrors the ASN.1 structure of the same name in
        RFC 5280, Section 4.1.2.4.
      properties:
        Type:
          items:
            format: int64
            type: integer
          title: An ObjectIdentifier represents an ASN.1 OBJECT IDENTIFIER.
          type: array
          x-go-package: encoding/asn1
        Value:
          type: object
      type: object
      x-go-package: crypto/x509/pkix
    AuthMethod:
      properties:
        access_date:
          format: date-time
          type: string
          x-go-name: AccessDate
        access_info:
          $ref: '#/components/schemas/AuthMethodAccessInfo'
        account_id:
          type: string
          x-go-name: AccountID
        auth_method_access_id:
          type: string
          x-go-name: AuthMethodAccessID
        auth_method_name:
          type: string
          x-go-name: AuthMethodName
        auth_method_roles_assoc:
          items:
            $ref: '#/components/schemas/AuthMethodRoleAssociation'
          type: array
          x-go-name: AuthMethodRolesAssoc
        client_permissions:
          items:
            type: string
          type: array
          x-go-name: ClientPermissions
        creation_date:
          format: date-time
          type: string
          x-go-name: CreationDate
        modification_date:
          format: date-time
          type: string
          x-go-name: ModificationDate
      title: AuthMethod represents a single Auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AuthMethodAccessInfo:
      properties:
        access_expires:
          format: int64
          type: integer
          x-go-name: AccessExpires
        access_id_alias:
          description: |-
            for accounts where AccessId holds encrypted email this field will hold generated AccessId,
            for accounts based on regular AccessId it will be equal to accessId itself
          type: string
          x-go-name: AccessIdAlias
        api_key_access_rules:
          $ref: '#/components/schemas/APIKeyAccessRules'
        aws_iam_access_rules:
          $ref: '#/components/schemas/AWSIAMAccessRules'
        azure_ad_access_rules:
          $ref: '#/components/schemas/AzureADAccessRules'
        cert_access_rules:
          $ref: '#/components/schemas/CertAccessRules'
        cidr_whitelist:
          type: string
          x-go-name: CIDRWhitelist
        email_pass_access_rules:
          $ref: '#/components/schemas/EmailPassAccessRules'
        force_sub_claims:
          description: if true the role associated with this auth method must include
            sub claims
          type: boolean
          x-go-name: ForceSubClaims
        gcp_access_rules:
          $ref: '#/components/schemas/GCPAccessRules'
        gw_cidr_whitelist:
          type: string
          x-go-name: GWCIDRWhitelist
        huawei_access_rules:
          $ref: '#/components/schemas/HuaweiAccessRules'
        jwt_ttl:
          format: int64
          type: integer
          x-go-name: JwtTtl
        k8s_access_rules:
          $ref: '#/components/schemas/KubernetesAccessRules'
        ldap_access_rules:
          $ref: '#/components/schemas/LDAPAccessRules'
        oauth2_access_rules:
          $ref: '#/components/schemas/OAuth2AccessRules'
        oidc_access_rules:
          $ref: '#/components/schemas/OIDCAccessRules'
        rules_type:
          type: string
          x-go-name: AccessRulesType
        saml_access_rules:
          $ref: '#/components/schemas/SAMLAccessRules'
        universal_identity_access_rules:
          $ref: '#/components/schemas/UniversalIdentityAccessRules'
      title: AuthMethodAccessInfo includes auth method access information.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AuthMethodRoleAssociation:
      description: |-
        AuthMethodRoleAssociation includes details of an association between an auth
        method and a role.
      properties:
        allowed_ops:
          items:
            type: string
          type: array
          x-go-name: AllowedOperations
        assoc_id:
          type: string
          x-go-name: AssociationID
        auth_method_sub_claims:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: AuthMethodSubClaims
        role_name:
          type: string
          x-go-name: RoleName
        rules:
          $ref: '#/components/schemas/Rules'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AuthOutput:
      properties:
        creds:
          $ref: '#/components/schemas/SystemAccessCredentialsReplyObj'
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    AwsS3LogForwardingConfig:
      properties:
        aws_access_id:
          type: string
          x-go-name: AwsAccessId
        aws_access_key:
          type: string
          x-go-name: AwsAccessKey
        aws_region:
          type: string
          x-go-name: AwsRegion
        aws_use_gateway_cloud_identity:
          type: boolean
          x-go-name: AwsUseGatewayCloudIdentity
        bucket_name:
          type: string
          x-go-name: BucketName
        log_folder:
          type: string
          x-go-name: LogFolder
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    AzureADAccessRules:
      description: |-
        AzureADAccessRules contains access rules specific to Azure Active Directory
        authentication.
      properties:
        ad_endpoint:
          description: The audience in the JWT.
          type: string
          x-go-name: Audience
        bound_group_ids:
          description: The list of group ids that login is restricted to.
          items:
            type: string
          type: array
          x-go-name: BoundGroupIDs
        bound_resource_groups:
          description: The list of resource groups that login is restricted to.
          items:
            type: string
          type: array
          x-go-name: BoundResourceGroups
        bound_resource_ids:
          description: The list of full resource ids that the login is restricted
            to.
          items:
            type: string
          type: array
          x-go-name: BoundResourceIds
        bound_resource_names:
          description: |-
            The list of resource names that the login is restricted to (e.g, a
            virtual machine name, scale set name, etc).
          items:
            type: string
          type: array
          x-go-name: BoundResourceNames
        bound_resource_providers:
          description: |-
            The list of resource providers that login is restricted to (e.g,
            Microsoft.Compute, Microsoft.ManagedIdentity, etc).
          items:
            type: string
          type: array
          x-go-name: BoundResourceProviders
        bound_resource_types:
          description: |-
            The list of resource types that login is restricted to  (e.g,
            virtualMachines, userAssignedIdentities, etc).
          items:
            type: string
          type: array
          x-go-name: BoundResourceTypes
        bound_service_principal_ids:
          description: The list of service principal IDs that login is restricted
            to.
          items:
            type: string
          type: array
          x-go-name: BoundServicePrincipalIDs
        bound_subscription_ids:
          description: The list of subscription IDs that login is restricted to.
          items:
            type: string
          type: array
          x-go-name: BoundSubscriptionsIDs
        bound_tenant_id:
          description: The tenants id for the Azure Active Directory organization.
          type: string
          x-go-name: BoundTenantID
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        jwks_uri:
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AzureKeyVaultMigration:
      properties:
        general:
          $ref: '#/components/schemas/MigrationGeneral'
        payload:
          $ref: '#/components/schemas/AzurePayload'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    AzureLogAnalyticsForwardingConfig:
      properties:
        azure_workspace_id:
          type: string
          x-go-name: AzureWorkspaceId
        azure_workspace_key:
          type: string
          x-go-name: AzureWorkspaceKey
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    AzurePayload:
      properties:
        client:
          type: string
          x-go-name: Client
        name:
          type: string
          x-go-name: Name
        secret:
          type: string
          x-go-name: Secret
        tenant:
          type: string
          x-go-name: Tenant
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    BastionListEntry:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
        allowed_access_ids:
          items:
            type: string
          type: array
          x-go-name: AllowedAccessIDs
        allowed_urls:
          items:
            type: string
          type: array
          x-go-name: AllowedUrls
        allowed_urls_per_instance:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: AllowedUrlsPerInstance
        cluster_name:
          type: string
          x-go-name: ClusterName
        display_name:
          type: string
          x-go-name: DisplayName
        last_report:
          format: date-time
          type: string
          x-go-name: LastReport
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    BastionsList:
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/BastionListEntry'
          type: array
          x-go-name: Clusters
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CFConfigPart:
      properties:
        customer_fragements:
          additionalProperties:
            type: string
          type: object
          x-go-name: CFragments
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    CacheConfigPart:
      properties:
        cache_enable:
          type: boolean
          x-go-name: CacheEnable
        cache_ttl:
          type: string
          x-go-name: CacheTTL
        proactive_cache_dump_interval:
          type: string
          x-go-name: ProActiveCacheDumpInterval
        proactive_cache_enable:
          type: boolean
          x-go-name: ProActiveCacheEnable
        proactive_cache_minimum_fetching_time:
          type: string
          x-go-name: ProActiveCacheMinimumFetchingTime
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    CertAccessRules:
      properties:
        bound_common_names:
          description: A list of names. At least one must exist in the Common Name.
            Supports globbing.
          items:
            type: string
          type: array
          x-go-name: BoundCommonNames
        bound_dns_sans:
          description: A list of DNS names. At least one must exist in the SANs. Supports
            globbing.
          items:
            type: string
          type: array
          x-go-name: BoundDnsSans
        bound_email_sans:
          description: A list of Email Addresses. At least one must exist in the SANs.
            Supports globbing.
          items:
            type: string
          type: array
          x-go-name: BoundEmailSans
        bound_extensions:
          description: A list of extensions formatted as "oid:value". Expects the
            extension value to be some type of ASN1 encoded string. All values must
            match. Supports globbing on "value".
          items:
            type: string
          type: array
          x-go-name: BoundExtensions
        bound_organizational_units:
          description: A list of Organizational Units names. At least one must exist
            in the OU field.
          items:
            type: string
          type: array
          x-go-name: BoundOrganizationalUnits
        bound_uri_sans:
          description: A list of URIs. At least one must exist in the SANs. Supports
            globbing.
          items:
            type: string
          type: array
          x-go-name: BoundUriSans
        certificate:
          description: Base64 encdoed PEM certificate
          type: string
          x-go-name: Certificate
        revoked_cert_ids:
          description: A list of revoked cert ids
          items:
            type: string
          type: array
          x-go-name: RevokedCertIds
        unique_identifier:
          description: A unique identifier to distinguish different users
          type: string
          x-go-name: UniqueIdentifier
      title: CertAccessRules contains access rules specific to certificate authentication.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CertIssuerType:
      title: CertIssuerType represents possible certificate issuers type.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CertificateChainInfo:
      properties:
        certificate_chain:
          items:
            $ref: '#/components/schemas/CertificateInfo'
          type: array
          x-go-name: CertificateChain
        certificate_pem:
          type: string
          x-go-name: CertificatePem
        expiration_events:
          items:
            $ref: '#/components/schemas/CertificateExpirationEvent'
          type: array
          x-go-name: ExpirationEvents
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CertificateExpirationEvent:
      properties:
        seconds_before:
          format: int64
          type: integer
          x-go-name: SecondsBefore
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CertificateInfo:
      properties:
        ExtKeyUsage:
          items:
            $ref: '#/components/schemas/ExtKeyUsage'
          type: array
        KeyUsage:
          description: |-
            KeyUsage represents the set of actions that are valid for a given key. It's
            a bitmap of the KeyUsage* constants.
          format: int64
          type: integer
          x-go-package: crypto/x509
        dns_names:
          items:
            type: string
          type: array
          x-go-name: DNSNames
        email_addresses:
          items:
            type: string
          type: array
          x-go-name: EmailAddresses
        extensions:
          items:
            $ref: '#/components/schemas/Extension'
          type: array
          x-go-name: Extensions
        ip_addresses:
          items:
            type: string
          type: array
          x-go-name: IPAddresses
        is_ca:
          type: boolean
          x-go-name: IsCA
        issuer:
          $ref: '#/components/schemas/Name'
        issuing_certificate_url:
          items:
            type: string
          type: array
          x-go-name: IssuingCertificateURL
        key_size:
          format: int64
          type: integer
          x-go-name: KeySize
        not_after:
          format: date-time
          type: string
          x-go-name: NotAfter
        not_before:
          format: date-time
          type: string
          x-go-name: NotBefore
        ocsp_server:
          items:
            type: string
          type: array
          x-go-name: OCSPServer
        public_key_algorithm_name:
          type: string
          x-go-name: PublicKeyAlgorithmName
        serial_number:
          type: string
          x-go-name: SerialNumber
        sha_1_fingerprint:
          type: string
          x-go-name: Sha1Fingerprint
        sha_256_fingerprint:
          type: string
          x-go-name: Sha256Fingerprint
        signature:
          type: string
          x-go-name: Signature
        signature_algorithm_name:
          type: string
          x-go-name: SignatureAlgorithmName
        subject:
          $ref: '#/components/schemas/Name'
        subject_public_key:
          type: string
          x-go-name: SubjectPublicKey
        uris:
          items:
            type: string
          type: array
          x-go-name: URIs
        version:
          format: int64
          type: integer
          x-go-name: Version
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CertificateIssueInfo:
      properties:
        cert_issuer_type:
          title: CertIssuerType represents possible certificate issuers type.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        max_ttl:
          format: int64
          type: integer
          x-go-name: MaxTTL
        pki_cert_issuer_details:
          $ref: '#/components/schemas/PKICertificateIssueDetails'
        ssh_cert_issuer_details:
          $ref: '#/components/schemas/SSHCertificateIssueDetails'
      title: CertificateIssueInfo defines Certificate Issuer info.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ChefAccessMode:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
    ClassicKeyDetailsInfo:
      properties:
        classic_key_attributes:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: ClassicKeyAttributes
        classic_key_id:
          type: string
          x-go-name: ClassicKeyId
        gw_cluster_id:
          format: int64
          type: integer
          x-go-name: GWClusterID
        is_provided_by_user:
          type: boolean
          x-go-name: IsProvidedByUser
        is_unexportable:
          type: boolean
          x-go-name: IsUnexportable
        key_state:
          description: ItemState defines the different states an Item can be in
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        key_type:
          title: ClassicKeyType defines types of keys that can be managed by ClassicKey
            supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        last_error:
          type: string
          x-go-name: LastError
        target_alias_helper:
          type: string
          x-go-name: TargetAliasHelper
        target_types:
          items:
            type: string
          type: array
          x-go-name: TargetTypes
        targets:
          items:
            $ref: '#/components/schemas/ClassicKeyTargetInfo'
          type: array
          x-go-name: Targets
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ClassicKeyPurpose:
      description: ClassicKeyPurpose defines purpose for classic keys
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ClassicKeyStatusInfo:
      properties:
        error_date:
          format: date-time
          type: string
          x-go-name: ErrorDate
        last_error:
          type: string
          x-go-name: LastError
        last_status:
          description: ClassicKeyTargetStatus defines status of classic key target
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        version:
          format: int64
          type: integer
          x-go-name: Version
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ClassicKeyTargetInfo:
      properties:
        external_kms_id:
          $ref: '#/components/schemas/ExternalKMSKeyId'
        key_purpose:
          items:
            $ref: '#/components/schemas/ClassicKeyPurpose'
          type: array
          x-go-name: Purpose
        key_status:
          $ref: '#/components/schemas/ClassicKeyStatusInfo'
        target_assoc_id:
          type: string
          x-go-name: TargetAssociationID
        target_type:
          title: TargetType ..
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ClassicKeyTargetStatus:
      description: ClassicKeyTargetStatus defines status of classic key target
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ClassicKeyType:
      title: ClassicKeyType defines types of keys that can be managed by ClassicKey
        supported by AKEYLESS.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ClusterApiType:
      description: ClusterApiType defines types of API access to cluster
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    ConfigChange:
      properties:
        config_hash:
          $ref: '#/components/schemas/ConfigHash'
        last_change:
          $ref: '#/components/schemas/LastConfigChange'
        last_status:
          $ref: '#/components/schemas/LastStatusInfo'
        required_activity:
          $ref: '#/components/schemas/RequiredActivity'
        update_stamp:
          format: int64
          type: integer
          x-go-name: UpdateStamp
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    ConfigHash:
      properties:
        admins:
          type: string
          x-go-name: Admins
        cache:
          type: string
          x-go-name: Cache
        customer_fragements:
          type: string
          x-go-name: CFragements
        general:
          type: string
          x-go-name: General
        k8s_auths:
          type: string
          x-go-name: K8SAuths
        kmip:
          type: string
          x-go-name: KMIP
        ldap:
          type: string
          x-go-name: Ldap
        leadership:
          type: string
          x-go-name: Leadership
        log_forwarding:
          type: string
          x-go-name: LogForwarding
        m_queue:
          type: string
          x-go-name: MQueue
        migration_status:
          type: string
          x-go-name: MigrationStatus
        migrations:
          type: string
          x-go-name: Migrations
        producers:
          type: object
          x-go-name: Producers
        producers_status:
          type: string
          x-go-name: ProducersStatus
        rotators:
          type: object
          x-go-name: Rotators
        saml:
          type: string
          x-go-name: Default
        universal_identity:
          type: string
          x-go-name: UIdentity
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    Connect:
      description: Connect is a command that performs secure remote access
      properties:
        Helper:
          type: object
          x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
        RcFileOverride:
          description: used to override .akeyless-connect.rc in tests
          type: string
        bastion-ctrl-path:
          description: The Bastion API path
          type: string
          x-go-name: BastionAPIPath
        bastion-ctrl-port:
          default: "9900"
          description: The Bastion API Port
          type: string
          x-go-name: BastionPort
        bastion-ctrl-proto:
          default: http
          description: The Bastion API protocol
          type: string
          x-go-name: BastionProtocol
        bastion-ctrl-subdomain:
          description: The Bastion API prefix
          type: string
          x-go-name: BastionAPIPrefix
        cert-issuer-name:
          description: The Akeyless certificate issuer name
          type: string
          x-go-name: CertIssuerName
        identity-file:
          description: The file from which the identity (private key) for public key
            authentication is read
          type: string
          x-go-name: IdentityFile
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: The Secret name (for database and AWS producers - producer
            name)
          type: string
          x-go-name: SecretName
        ssh-command:
          description: Path to SSH executable. e.g. /usr/bin/ssh
          type: string
          x-go-name: SSHLocation
        ssh-extra-args:
          description: The Use to add offical SSH arguments (except -i)
          type: string
          x-go-name: SSHExtraArgs
        ssh-legacy-signing-alg:
          description: Set this option to output legacy ('ssh-rsa-cert-v01@openssh.com')
            signing algorithm name in the ssh certificate.
          type: boolean
          x-go-name: SSHLegacySigningAlg
        target:
          description: The target
          type: string
          x-go-name: Target
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        via-bastion:
          description: The jump box server
          type: string
          x-go-name: ViaBastion
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    ConnectHepler:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    CreateClassicKey:
      description: CreateClassicKey is a command that creates classic key
      properties:
        alg:
          description: 'Classic Key type; options: [AES128GCM, AES256GCM, AES128SIV,
            AES256SIV, RSA1024, RSA2048, RSA3072, RSA4096, EC256, EC384, GPG]'
          type: string
          x-go-name: Alg
        cert-file-data:
          description: Certificate in a PEM format.
          type: string
          x-go-name: CertFileData
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        gpg-alg:
          description: 'gpg alg: Relevant only if GPG key type selected; options:
            [RSA1024, RSA2048, RSA3072, RSA4096, Ed25519]'
          type: string
          x-go-name: GPGAlg
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-data:
          description: Base64-encoded classic key value
          type: string
          x-go-name: ClassicKeyValue
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: ClassicKey name
          type: string
          x-go-name: ClassicKeyName
        protection-key-name:
          description: The name of a key that used to encrypt the secret value (if
            empty, the account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        tags:
          description: List of the tags attached to this classic key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - alg
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    CreateClassicKeyOutput:
      properties:
        classic_key_id:
          type: string
          x-go-name: ClassicKeyId
        classic_key_name:
          type: string
          x-go-name: ClassicKeyName
        classic_key_type:
          title: ClassicKeyType defines types of keys that can be managed by ClassicKey
            supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    CreatePKICertIssuer:
      properties:
        allow-any-name:
          description: If set, clients can request certificates for any CN
          type: boolean
          x-go-name: AllowAnyName
        allow-subdomains:
          description: |-
            If set, clients can request certificates for subdomains and wildcard
            subdomains of the allowed domains
          type: boolean
          x-go-name: AllowSubdomains
        allowed-domains:
          description: |-
            A list of the allowed domains that clients can request to be included in
            the certificate (in a comma-delimited list)
          type: string
          x-go-name: AllowedDomains
        allowed-uri-sans:
          description: |-
            A list of the allowed URIs that clients can request to be included in
            the certificate as part of the URI Subject Alternative Names (in a
            comma-delimited list)
          type: string
          x-go-name: AllowedURISANs
        client-flag:
          description: If set, certificates will be flagged for client auth use
          type: boolean
          x-go-name: ClientFlag
        code-signing-flag:
          description: If set, certificates will be flagged for code signing use
          type: boolean
          x-go-name: CodeSigningFlag
        country:
          description: A comma-separated list of countries that will be set in the
            issued certificate
          type: string
          x-go-name: Country
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-usage:
          default: DigitalSignature,KeyAgreement,KeyEncipherment
          description: key-usage
          type: string
          x-go-name: KeyUsage
        locality:
          description: A comma-separated list of localities that will be set in the
            issued certificate
          type: string
          x-go-name: Locality
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: PKI certificate issuer name
          type: string
          x-go-name: IssuerName
        not-enforce-hostnames:
          description: |-
            If set, any names are allowed for CN and SANs in the certificate and not
            only a valid host name
          type: boolean
          x-go-name: NotEnforceHostnames
        not-require-cn:
          description: If set, clients can request certificates without a CN
          type: boolean
          x-go-name: NotRequireCN
        organizational-units:
          description: |-
            A comma-separated list of organizational units (OU) that will be set in
            the issued certificate
          type: string
          x-go-name: OrganizationalUnits
        organizations:
          description: |-
            A comma-separated list of organizations (O) that will be set in the
            issued certificate
          type: string
          x-go-name: Organizations
        postal-code:
          description: A comma-separated list of postal codes that will be set in
            the issued certificate
          type: string
          x-go-name: PostalCode
        province:
          description: A comma-separated list of provinces that will be set in the
            issued certificate
          type: string
          x-go-name: Province
        server-flag:
          description: If set, certificates will be flagged for server auth use
          type: boolean
          x-go-name: ServerFlag
        signer-key-name:
          description: A key to sign the certificate with
          type: string
          x-go-name: SignerKeyName
        street-address:
          description: A comma-separated list of street addresses that will be set
            in the issued certificate
          type: string
          x-go-name: StreetAddress
        tag:
          description: List of the tags attached to this key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: he requested Time To Live for the certificate, in seconds
          format: int64
          type: integer
          x-go-name: TTL
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - signer-key-name
      - ttl
      title: CreatePKICertIssuer is a command that creates a new PKI certificate issuer.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    CreateRoleAuthMethodAssocOutput:
      description: |-
        CreateRoleAuthMethodAssocOutput defines output of CreateRoleAuthMethodAssoc
        operation.
      properties:
        assoc_id:
          type: string
          x-go-name: AssociationID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CreateRotatedSecretOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    CreateSecretOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    CreateTargetItemAssocOutput:
      description: |-
        CreateTargetItemAssocOutput defines output of CreateTargetItemAssoc
        operation.
      properties:
        assoc_id:
          type: string
          x-go-name: AssociationID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CustomerFragment:
      properties:
        description:
          type: string
          x-go-name: Description
        id:
          type: string
          x-go-name: Id
        value:
          type: string
          x-go-name: Value
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/sdk/config
    CustomerFragmentsJson:
      properties:
        customer_fragments:
          items:
            $ref: '#/components/schemas/CustomerFragment'
          type: array
          x-go-name: Fragments
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/sdk/config
    CustomerFullAddress:
      properties:
        city:
          type: string
          x-go-name: City
        country:
          type: string
          x-go-name: Country
        postal_code:
          type: string
          x-go-name: PostalCode
        street:
          type: string
          x-go-name: Street
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    DSProducerDetails:
      properties:
        access_token_manager_id:
          type: string
          x-go-name: AccessTokenManagerId
        active:
          type: boolean
          x-go-name: Active
        admin_name:
          type: string
          x-go-name: AdminName
        admin_pwd:
          type: string
          x-go-name: AdminPwd
        admin_rotation_interval_days:
          format: int64
          type: integer
          x-go-name: RotationIntervalDays
        administrative_port:
          type: string
          x-go-name: AdministrativePort
        artifactory_admin_apikey:
          type: string
          x-go-name: ArtifactoryAdminApiKey
        artifactory_admin_username:
          type: string
          x-go-name: ArtifactoryAdminUsername
        artifactory_base_url:
          type: string
          x-go-name: ArtifactoryBaseURL
        artifactory_token_audience:
          type: string
          x-go-name: ArtifactoryTokenAudience
        artifactory_token_scope:
          type: string
          x-go-name: ArtifactoryTokenScope
        authorization_port:
          type: string
          x-go-name: AuthorizationPort
        aws_access_key_id:
          type: string
          x-go-name: AWSAccessKeyID
        aws_access_mode:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
        aws_region:
          type: string
          x-go-name: AWSRegion
        aws_role_arns:
          type: string
          x-go-name: AWSRoleARNs
        aws_secret_access_key:
          type: string
          x-go-name: AWSSecretAccessKey
        aws_session_token:
          type: string
          x-go-name: AWSSessionToken
        aws_user_console_access:
          type: boolean
          x-go-name: AWSUserConsoleAccess
        aws_user_groups:
          type: string
          x-go-name: AWSUserGroups
        aws_user_policies:
          type: string
          x-go-name: AWSUserPolicies
        aws_user_programmatic_access:
          type: boolean
          x-go-name: AWSUserProgAccess
        azure_app_object_id:
          type: string
          x-go-name: AzureAppObjectID
        azure_client_id:
          type: string
          x-go-name: AzureClientID
        azure_client_secret:
          type: string
          x-go-name: AzureClientSecret
        azure_fixed_user_name_sub_claim_key:
          type: string
          x-go-name: AzureFixedUserNameSubClaimKey
        azure_fixed_user_only:
          type: boolean
          x-go-name: AzureFixedUserOnly
        azure_resource_group_name:
          type: string
          x-go-name: AzureResourceGroupName
        azure_resource_name:
          type: string
          x-go-name: AzureResourceName
        azure_subscription_id:
          type: string
          x-go-name: AzureSubscriptionId
        azure_tenant_id:
          type: string
          x-go-name: AzureTenantID
        azure_user_groups_obj_id:
          type: string
          x-go-name: AzureUserGroupsObjID
        azure_user_portal_access:
          type: boolean
          x-go-name: AzureUserConsoleAccess
        azure_user_programmatic_access:
          type: boolean
          x-go-name: AzureUserProgAccess
        azure_user_roles_template_id:
          type: string
          x-go-name: AzureUserRolesTemplateID
        cassandra_creation_statements:
          type: string
          x-go-name: CassandraCreationStatements
        chef_organizations:
          type: string
          x-go-name: ChefOrganizations
        chef_server_access_mode:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
        chef_server_host_name:
          type: string
          x-go-name: ChefServerHostName
        chef_server_key:
          type: string
          x-go-name: ChefServerKey
        chef_server_port:
          type: string
          x-go-name: ChefServerPort
        chef_server_url:
          type: string
          x-go-name: ChefServerURL
        chef_server_username:
          type: string
          x-go-name: ChefServerUsername
        chef_skip_ssl:
          type: boolean
          x-go-name: ChefSkipSSL
        client_authentication_type:
          type: string
          x-go-name: ClientAuthenticationType
        create_sync_url:
          type: string
          x-go-name: CreateSyncURL
        db_host_name:
          type: string
          x-go-name: DbHostName
        db_isolation_level:
          type: string
          x-go-name: DbIsolationLevel
        db_max_idle_conns:
          type: string
          x-go-name: DbMaxIdleConns
        db_max_open_conns:
          type: string
          x-go-name: DbMaxOpenConns
        db_name:
          type: string
          x-go-name: DbName
        db_port:
          type: string
          x-go-name: DbPort
        db_private_key:
          description: (Optional) Private Key in PEM format
          type: string
          x-go-name: DbPrivateKey
        db_private_key_passphrase:
          type: string
          x-go-name: DbPrivateKeyPassphrase
        db_pwd:
          type: string
          x-go-name: DbPwd
        db_server_certificates:
          description: |-
            (Optional) DBServerCertificates defines the set of root certificate authorities
            that clients use when verifying server certificates.
            If DBServerCertificates is empty, TLS uses the host's root CA set.
          type: string
          x-go-name: DBServerCertificates
        db_server_name:
          description: |-
            (Optional) ServerName is used to verify the hostname on the returned
            certificates unless InsecureSkipVerify is given. It is also included
            in the client's handshake to support virtual hosting unless it is
            an IP address.
          type: string
          x-go-name: DBServerName
        db_user_name:
          type: string
          x-go-name: DbUserName
        delete_protection:
          type: boolean
          x-go-name: ItemProtected
        dynamic_secret_id:
          format: int64
          type: integer
          x-go-name: DynamicSecretId
        dynamic_secret_key:
          type: string
          x-go-name: ProtectionKeyName
        dynamic_secret_name:
          type: string
          x-go-name: DynamicSecretName
        dynamic_secret_type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer
        eks_access_key_id:
          type: string
          x-go-name: EKSAccessID
        eks_assume_role:
          type: string
          x-go-name: EKSAssumeRole
        eks_cluster_ca_certificate:
          type: string
          x-go-name: EKSClusterCACertificate
        eks_cluster_endpoint:
          type: string
          x-go-name: EKSClusterEndpoint
        eks_cluster_name:
          type: string
          x-go-name: EKSClusterName
        eks_region:
          type: string
          x-go-name: EKSRegion
        eks_secret_access_key:
          type: string
          x-go-name: EKSSecretAccessKey
        enable_admin_rotation:
          type: boolean
          x-go-name: EnableAdminRotation
        enforce_replay_prevention:
          description: relevant for PRIVATE_KEY_JWT client authentication type
          type: boolean
          x-go-name: EnforceReplayPrevention
        externally_provided_user:
          type: string
          x-go-name: ExternallyProvidedUser
        failure_message:
          type: string
          x-go-name: FailureMessage
        fixed_user_only:
          type: string
          x-go-name: FixedUserOnly
        gcp_key_algo:
          type: string
          x-go-name: GCPKeyAlgorithm
        gcp_role_bindings:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: GCPRoleBindings
        gcp_service_account_email:
          description: GCPServiceAccountEmail overrides the deprecated field from
            the target
          type: string
          x-go-name: GCPServiceAccountEmail
        gcp_service_account_key:
          type: string
          x-go-name: GCPServiceAccountKey
        gcp_service_account_type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
        gcp_tmp_service_account_name:
          type: string
          x-go-name: GCPTmpServiceAccountName
        gcp_token_lifetime:
          type: string
          x-go-name: GCPTokenLifetime
        gcp_token_scope:
          type: string
          x-go-name: GCPTokenScopes
        gcp_token_type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
        github_app_id:
          format: int64
          type: integer
          x-go-name: GithubAppId
        github_app_private_key:
          type: string
          x-go-name: GithubAppPrivateKey
        github_base_url:
          type: string
          x-go-name: GithubBaseURL
        github_installation_id:
          format: int64
          type: integer
          x-go-name: GithubInstallationId
        github_installation_token_permissions:
          additionalProperties:
            type: string
          type: object
          x-go-name: GithubTokenPermissions
        github_installation_token_repositories:
          items:
            type: string
          type: array
          x-go-name: GithubTokenRepositories
        github_installation_token_repositories_ids:
          items:
            format: int64
            type: integer
          type: array
          x-go-name: GithubTokenRepositoriesById
        github_repository_path:
          type: string
          x-go-name: GithubRepositoryPath
        gke_cluster_ca_certificate:
          type: string
          x-go-name: GKEClusterCACertificate
        gke_cluster_endpoint:
          type: string
          x-go-name: GKEClusterEndpoint
        gke_cluster_name:
          type: string
          x-go-name: GKEClusterName
        gke_service_account_key:
          type: string
          x-go-name: GKEServiceAccountKey
        gke_service_account_name:
          type: string
          x-go-name: GKEServiceAccountName
        grant_types:
          items:
            type: string
          type: array
          x-go-name: GrantTypes
        groups:
          type: string
          x-go-name: Groups
        hanadb_creation_statements:
          type: string
          x-go-name: HanaDbCreationStatements
        hanadb_revocation_statements:
          type: string
          x-go-name: HanaDbRevocationStatements
        host_name:
          type: string
          x-go-name: HostName
        host_port:
          type: string
          x-go-name: HostPort
        implementation_type:
          type: string
          x-go-name: ImplementationType
        is_fixed_user:
          type: string
          x-go-name: IsFixedUser
        issuer:
          description: relevant for CLIENT_TLS_CERTIFICATE client authentication type
          type: string
          x-go-name: Issuer
        item_targets_assoc:
          items:
            $ref: '#/components/schemas/ItemTargetAssociation'
          type: array
          x-go-name: ItemTargetsAssoc
        jwks:
          type: string
          x-go-name: JWKs
        jwks_url:
          type: string
          x-go-name: JWKsURL
        k8s_allowed_namespaces:
          description: comma-separated list of allowed namespaces. Can hold just *
            which signifies that any namespace is allowed
          type: string
          x-go-name: AllowedNamespaces
        k8s_bearer_token:
          type: string
          x-go-name: K8sBearerToken
        k8s_cluster_ca_certificate:
          type: string
          x-go-name: K8sClusterCACertificate
        k8s_cluster_endpoint:
          type: string
          x-go-name: K8sClusterEndpoint
        k8s_dynamic_mode:
          description: |-
            when native k8s is in dynamic mode, user can define allowed namespaces,
            K8sServiceAccount doesn't exist from the start and will only be created at time of getting dynamic secret value
            By default dynamic mode is false and producer behaves like it did before
          type: boolean
          x-go-name: DynamicMode
        k8s_namespace:
          type: string
          x-go-name: K8sNamespace
        k8s_role_name:
          description: Name of the pre-existing Role or ClusterRole to bind a generated
            service account to.
          type: string
          x-go-name: K8sRoleName
        k8s_role_type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
        k8s_service_account:
          type: string
          x-go-name: K8sServiceAccount
        k8s_temp_role_binding_definition:
          description: |-
            Yaml/Json definition of temporary role binding that will be created and deleted when TTL is due.
            Must have as subject name of Service Account specified in K8sServiceAccount field
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: K8sTempRoleBindingDefinition
        k8s_temp_role_definition:
          description: Yaml/Json definition of temporary role that will be created
            and deleted when TTL is due
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: K8sTempRoleDefinition
        last_admin_rotation:
          format: int64
          type: integer
          x-go-name: LastAdminRotation
        ldap_audience:
          type: string
          x-go-name: Audience
        ldap_bind_dn:
          type: string
          x-go-name: BindDn
        ldap_bind_password:
          type: string
          x-go-name: BindPass
        ldap_certificate:
          type: string
          x-go-name: Certificate
        ldap_token_expiration:
          type: string
          x-go-name: TokenExpirationInSec
        ldap_url:
          type: string
          x-go-name: Url
        ldap_user_attr:
          type: string
          x-go-name: UserAttr
        ldap_user_dn:
          type: string
          x-go-name: UserDn
        metadata:
          type: string
          x-go-name: Metadata
        mongodb_atlas_api_private_key:
          type: string
          x-go-name: MongoDBAtlasAPIPrivateKey
        mongodb_atlas_api_public_key:
          type: string
          x-go-name: MongoDBAtlasAPIPublicKey
        mongodb_atlas_project_id:
          description: mongodb atlas fields
          type: string
          x-go-name: MongoDBAtlasProjectID
        mongodb_custom_data:
          type: string
          x-go-name: MongoDBCustomData
        mongodb_db_name:
          description: common fields
          type: string
          x-go-name: MongoDBName
        mongodb_default_auth_db:
          type: string
          x-go-name: MongoDBDefaultAuthDB
        mongodb_host_port:
          type: string
          x-go-name: MongoDBHostAndPort
        mongodb_is_atlas:
          type: boolean
          x-go-name: MongoDBAtlas
        mongodb_password:
          type: string
          x-go-name: MongoDBPassword
        mongodb_roles:
          description: common fields
          type: string
          x-go-name: MongoDBRoles
        mongodb_uri_connection:
          description: mongodb fields
          type: string
          x-go-name: MongoDBServerURI
        mongodb_uri_options:
          type: string
          x-go-name: MongoDBURIOptions
        mongodb_username:
          type: string
          x-go-name: MongoDBUsername
        mssql_creation_statements:
          type: string
          x-go-name: MSSQLCreationStatements
        mssql_revocation_statements:
          type: string
          x-go-name: MSSQLRevocationStatements
        mysql_creation_statements:
          type: string
          x-go-name: MysqlCreationStatements
        oracle_creation_statements:
          type: string
          x-go-name: OracleDBCreationStatements
        password:
          type: string
          x-go-name: Password
        password_length:
          format: int64
          type: integer
          x-go-name: PasswordLen
        password_policy:
          type: string
          x-go-name: PasswordPolicy
        payload:
          type: string
          x-go-name: Payload
        ping_url:
          type: string
          x-go-name: PingURL
        postgres_creation_statements:
          type: string
          x-go-name: PostgresCreationStatements
        postgres_revocation_statements:
          type: string
          x-go-name: PostgresRevocationStatements
        privileged_user:
          type: string
          x-go-name: PrivilegedUser
        rabbitmq_server_password:
          type: string
          x-go-name: RabbitmqServerPassword
        rabbitmq_server_uri:
          type: string
          x-go-name: RabbitmqServerURI
        rabbitmq_server_user:
          type: string
          x-go-name: RabbitmqServerUser
        rabbitmq_user_conf_permission:
          type: string
          x-go-name: RabbitmqUserConfigPermission
        rabbitmq_user_read_permission:
          type: string
          x-go-name: RabbitmqUserReadPermission
        rabbitmq_user_tags:
          type: string
          x-go-name: RabbitmqUserTags
        rabbitmq_user_vhost:
          type: string
          x-go-name: RabbitmqUserVHost
        rabbitmq_user_write_permission:
          type: string
          x-go-name: RabbitmqUserWritePermission
        redirect_uris:
          items:
            type: string
          type: array
          x-go-name: RedirectUris
        redshift_creation_statements:
          type: string
          x-go-name: RedshiftCreationStatements
        restricted_scopes:
          items:
            type: string
          type: array
          x-go-name: RestrictedScopes
        revoke_sync_url:
          type: string
          x-go-name: RevokeSyncURL
        rotate_sync_url:
          type: string
          x-go-name: RotateSyncURL
        scopes:
          items:
            type: string
          type: array
          x-go-name: DockerhubScopes
        secure_remote_access_details:
          $ref: '#/components/schemas/SecureRemoteAccess'
        session_extension_warn_interval_min:
          format: int64
          type: integer
          x-go-name: SessionExtensionWarnIntervalInMin
        sf_account:
          type: string
          x-go-name: SnowflakeAccountName
        sf_user_role:
          description: generated  users info
          type: string
          x-go-name: SnowflakeUserRole
        sf_warehouse_name:
          type: string
          x-go-name: SnowflakeWarehouseName
        should_stop:
          description: TODO delete this after migration
          type: string
          x-go-name: ShouldStop
        signing_algorithm:
          type: string
          x-go-name: SigningAlgorithm
        ssl_connection_certificate:
          description: (Optional) SSLConnectionCertificate defines the certificate
            for SSL connection. Must be base64 certificate loaded by UI using file
            loader field
          type: string
          x-go-name: SSLConnectionCertificate
        ssl_connection_mode:
          description: (Optional) SSLConnectionMode defines if SSL mode will be used
            to connect to DB
          type: boolean
          x-go-name: SSLConnectionMode
        subject_dn:
          type: string
          x-go-name: SubjectDN
        tags:
          items:
            type: string
          type: array
          x-go-name: Tags
        timeout_seconds:
          format: int64
          type: integer
          x-go-name: TimeoutSeconds
        use_gw_cloud_identity:
          type: boolean
          x-go-name: EKSUseDefaultIdentity
        user_name:
          type: string
          x-go-name: UserName
        user_password:
          type: string
          x-go-name: UserPassword
        user_principal_name:
          type: string
          x-go-name: AzurePrincipalName
        user_ttl:
          type: string
          x-go-name: UserTtl
        username_length:
          format: int64
          type: integer
          x-go-name: UsernameLen
        username_policy:
          type: string
          x-go-name: UsernamePolicy
        venafi_allow_subdomains:
          type: boolean
          x-go-name: VenafiAllowSubdomains
        venafi_allowed_domains:
          items:
            type: string
          type: array
          x-go-name: VenafiAllowedDomains
        venafi_api_key:
          type: string
          x-go-name: VenafiApiKey
        venafi_auto_generated_folder:
          type: string
          x-go-name: VenafiAutoGeneratedFolder
        venafi_base_url:
          type: string
          x-go-name: VenafiBaseURL
        venafi_root_first_in_chain:
          type: boolean
          x-go-name: VenafiRootFirstInChain
        venafi_sign_using_akeyless_pki:
          type: boolean
          x-go-name: VenafiSignUsingAkeylessPKI
        venafi_signer_key_name:
          type: string
          x-go-name: VenafiSignerKeyName
        venafi_store_private_key:
          type: boolean
          x-go-name: VenafiStorePrivateKey
        venafi_tpp_password:
          type: string
          x-go-name: VenafiTPPPassword
        venafi_tpp_username:
          type: string
          x-go-name: VenafiTPPUserName
        venafi_use_tpp:
          type: boolean
          x-go-name: VenafiUseTPP
        venafi_zone:
          type: string
          x-go-name: VenafiZone
        warn_before_user_expiration_min:
          format: int64
          type: integer
          x-go-name: WarnBeforeUserExpirationInMin
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
    DataProtectionSection:
      description: |-
        We need the fields to be pointers as we
        use the same struct for partial updates as well
      properties:
        enable_classic_key_protection:
          type: boolean
          x-go-name: EnableClassicKeyProtection
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    DatadogForwardingConfig:
      properties:
        datadog_api_key:
          type: string
          x-go-name: DatadogApiKey
        datadog_host:
          type: string
          x-go-name: DatadogHost
        datadog_log_service:
          type: string
          x-go-name: DatadogLogService
        datadog_log_source:
          type: string
          x-go-name: DatadogLogSource
        datadog_log_tags:
          type: string
          x-go-name: DatadogLogTags
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    DefaultConfigPart:
      properties:
        default_protection_key_id:
          format: int64
          type: integer
          x-go-name: ProtectionKeyID
        default_secret_location:
          type: string
          x-go-name: SecretLocation
        oidc_access_id:
          type: string
          x-go-name: OIDCAccessId
        saml_access_id:
          type: string
          x-go-name: SamlAccessId
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    DeleteItemOutput:
      properties:
        deletion_date:
          format: date-time
          type: string
          x-go-name: DeletionDate
        item_id:
          format: int64
          type: integer
          x-go-name: ItemID
        item_name:
          type: string
          x-go-name: ItemName
        version_deleted:
          format: int32
          type: integer
          x-go-name: VersionDeleted
      title: DeleteItemOutput defines output of DeleteItem operation.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    DescribePermissionsOutput:
      properties:
        client_permissions:
          items:
            type: string
          type: array
          x-go-name: ClientPermissions
      title: DescribePermissionsOutput defines output of DescribePermissionsOutput
        operation.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Duration:
      description: |-
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
      format: int64
      type: integer
      x-go-package: time
    DynamicSecretProducerInfo:
      description: |-
        DynamicSecretProducerInfo The dynamic secret producer info
        This parameter relevant and required only in case of create update dynamic secret.
      properties:
        failure_message:
          type: string
          x-go-name: FailureMessage
        gw_cluster_id:
          format: int64
          type: integer
          x-go-name: GWClusterID
        producer_last_keep_alive:
          type: string
          x-go-name: ProducerLastKeepAlive
        producer_metadata:
          type: string
          x-go-name: ProducerMetadata
        producer_status:
          description: RotationStatus defines types of rotation Status
          type: string
          x-go-name: RotationStatus
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        producer_type:
          type: string
          x-go-name: ProducerType
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    DynamicSecretType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/producer
    ElasticsearchLogForwardingConfig:
      properties:
        elasticsearch_api_key:
          type: string
          x-go-name: ElasticsearchApiKey
        elasticsearch_auth_type:
          type: string
          x-go-name: ElasticsearchAuthType
        elasticsearch_cloud_id:
          type: string
          x-go-name: ElasticsearchCloudId
        elasticsearch_index:
          type: string
          x-go-name: ElasticsearchIndex
        elasticsearch_nodes:
          type: string
          x-go-name: ElasticsearchNodes
        elasticsearch_password:
          type: string
          x-go-name: ElasticsearchPassword
        elasticsearch_server_type:
          type: string
          x-go-name: ElasticsearchServerType
        elasticsearch_user_name:
          type: string
          x-go-name: ElasticsearchUserName
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    EmailEntry:
      properties:
        to_email:
          type: string
          x-go-name: ToEmail
        to_name:
          type: string
          x-go-name: ToName
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    EmailPassAccessRules:
      properties:
        alg:
          title: HashAlgorithm is a type that represents a single hash algorithm.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        email:
          description: The Email value
          type: string
          x-go-name: Email
        hash_pass:
          description: The password value
          type: string
          x-go-name: HashPass
      title: EmailPassAccessRules is a set of rules for email password access type.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    EmailTokenizerInfo:
      description: EmailTokenizerInfo represents a tokenizer that specifically tokenizes
        emails
      properties:
        domain_suffix_length:
          description: |-
            What length of a random domain suffix to generate
            used only if FixedDomainSuffix is empty
          format: int64
          type: integer
          x-go-name: DomainSuffixLength
        fixed_domain_suffix:
          description: if FixedDomainSuffix isn't empty, it will be appended to the
            output
          type: string
          x-go-name: FixedDomainSuffix
        keep_prefix_length:
          description: How many letters of the plaintext to keep in the output
          format: int64
          type: integer
          x-go-name: KeepPrefixLength
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    EventType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ExportClassicKey:
      description: ExportClassicKey is a command that returns the classic key material
      properties:
        ignore-cache:
          default: "false"
          description: |-
            Ignore Cache
            Retrieve the Secret value without checking the Gateway's cache. This flag is only relevant when using the RestAPI
          type: string
          x-go-name: IgnoreCache
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: ClassicKey name
          type: string
          x-go-name: ClassicKeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: Classic key version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    ExportClassicKeyOutput:
      properties:
        certificatePem:
          type: string
          x-go-name: CertificatePem
        key:
          type: string
          x-go-name: Key
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    ExtKeyUsage:
      description: Each of the ExtKeyUsage* constants define a unique action.
      format: int64
      title: ExtKeyUsage represents an extended set of actions that are valid for
        a given key.
      type: integer
      x-go-package: crypto/x509
    Extension:
      properties:
        Critical:
          type: boolean
        Name:
          type: string
        Value:
          type: string
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ExternalKMSKeyId:
      properties:
        key_id:
          type: string
          x-go-name: KeyId
        key_reference:
          type: string
          x-go-name: KeyReference
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    GCPAccessRules:
      properties:
        audience:
          default: akeyless.io
          description: The audience in the JWT
          type: string
          x-go-name: Audience
        bound_labels:
          additionalProperties:
            type: string
          description: |-
            A map of GCP labels formatted as "key:value" strings that must be set on authorized GCE instances.
            TODO: Because GCP labels are not currently ACL'd ....
          type: object
          x-go-name: BoundLabels
        bound_projects:
          description: |-
            Human and Machine authentication section
            Array of GCP project IDs. Only entities belonging to any of the provided
            projects can authenticate.
          items:
            type: string
          type: array
          x-go-name: BoundProjects
        bound_regions:
          description: |-
            List of regions that a GCE instance must belong to in order to be authenticated.
            TODO: If bound_instance_groups is provided, it is assumed to be a regional group and the group must belong to this region. If bound_zones are provided, this attribute is ignored.
          items:
            type: string
          type: array
          x-go-name: BoundRegions
        bound_service_accounts:
          description: List of service accounts the service account must be part of
            in order to be authenticated
          items:
            type: string
          type: array
          x-go-name: BoundServiceAccounts
        bound_zones:
          description: |-
            === Machine authentication section ===
            List of zones that a GCE instance must belong to in order to be authenticated.
            TODO: If bound_instance_groups is provided, it is assumed to be a zonal group and the group must belong to this zone.
          items:
            type: string
          type: array
          x-go-name: BoundZones
        service_account:
          description: |-
            ServiceAccount holds the credentials file contents to be used by Akeyless
            to validate IAM (Human) and GCE (Machine) logins against GCP
            base64 encoded string
          type: string
          x-go-name: ServiceAccount
        type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
      title: GCPAccessRules contains access rules specific to GCP IAM or GCE authentication.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    GCPAccessRulesType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    GCPCredentialsType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
    GCPPayload:
      properties:
        gcp_credentials_json:
          type: string
          x-go-name: Key
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    GCPSecretsMigration:
      properties:
        general:
          $ref: '#/components/schemas/MigrationGeneral'
        payload:
          $ref: '#/components/schemas/GCPPayload'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    GCPServiceAccountType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
    GWClusterStatus:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    GatewayMessageQueueInfo:
      properties:
        mq_type:
          type: string
          x-go-name: MQType
        queue_name:
          type: string
          x-go-name: QueueName
        queue_url:
          type: string
          x-go-name: QueueURL
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    GatewayMigrationCreateOutput:
      properties:
        migration_name:
          type: string
          x-go-name: MigrationName
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GatewayMigrationDeleteOutput:
      properties:
        migration_id:
          type: string
          x-go-name: MigrationId
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GatewayMigrationSyncOutput:
      properties:
        migration_name:
          type: string
          x-go-name: MigrationName
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GatewayMigrationUpdateOutput:
      properties:
        migration_name:
          type: string
          x-go-name: MigrationName
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GatewayUpdateLdapAuthConfig:
      description: gatewayUpdateLdapAuth is a command that updates ldap auth config
      properties:
        access-id:
          description: The access ID of the Ldap auth method
          type: string
          x-go-name: AuthMethodAccessId
        bind-dn:
          description: Bind DN
          type: string
          x-go-name: BindDn
        bind-dn-password:
          description: Bind DN Password
          type: string
          x-go-name: BindDnPassword
        group-attr:
          description: Group Attr
          type: string
          x-go-name: GroupAttr
        group-dn:
          description: Group Dn
          type: string
          x-go-name: GroupDn
        group-filter:
          description: Group Filter
          type: string
          x-go-name: GroupFilter
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        ldap-ca-cert:
          description: LDAP CA Certificate (base64 encoded)
          type: string
          x-go-name: LdapCACert
        ldap-enable:
          description: Enable Ldap
          type: string
          x-go-name: LdapEnable
        ldap-url:
          description: LDAP Server URL, e.g. ldap://planetexpress.com:389
          type: string
          x-go-name: LdapUrlAddress
        ldap_anonymous_search:
          description: Ldap Anonymous Search
          type: boolean
          x-go-name: LdapAnonymousSearch
        signing-key-data:
          description: The private key (base64 encoded), associated with the public
            key defined in the Ldap auth
          type: string
          x-go-name: AuthMethodSigningKey
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-attribute:
          description: User Attribute
          type: string
          x-go-name: UserAttribute
        user-dn:
          description: User DN
          type: string
          x-go-name: UserDn
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GatewayUpdateLdapAuthConfigOutput:
      properties:
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GatewayUpdateTlsCert:
      description: gatewayUpdateTlsCert is a command that updates Gateway TLS certificate
      properties:
        cert-data:
          description: TLS Certificate (base64 encoded)
          type: string
          x-go-name: CertData
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-data:
          description: TLS Private Key (base64 encoded)
          type: string
          x-go-name: KeyData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GatewayUpdateTlsCertOutput:
      properties:
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GatewaysListResponse:
      description: GatewaysListResponse Gateway cluster identity list
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/GwClusterIdentity'
          type: array
          x-go-name: GwClusterList
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    GeneralConfigPart:
      properties:
        akeyless_url:
          description: |-
            AkeylessUrl is here for BC only. Gator will still return it if it exists in
            the configuration, but new clients (>=2.34.0) will ignore it and override it with what exists in
            their local file.
            It will no longer be sent to Gator for update, so new clusters will only have
            the default value saved in the DB.
          type: string
          x-go-name: AkeylessUrl
        api_token_ttl:
          type: string
          x-go-name: ApiTokenTtl
        display_name:
          type: string
          x-go-name: DisplayName
        enable_tls:
          type: boolean
          x-go-name: EnableTLS
        enable_tls_configure:
          type: boolean
          x-go-name: EnableTLSConfig
        enable_tls_curl:
          type: boolean
          x-go-name: EnableTLSCurl
        enable_tls_hvp:
          type: boolean
          x-go-name: EnableTLSHpv
        gw_cluster_url:
          type: string
          x-go-name: GwClusterUrl
        tcp_port:
          type: string
          x-go-name: TcpPort
        tls_cert:
          type: string
          x-go-name: TLSCert
        tls_key:
          type: string
          x-go-name: TLSKey
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    GetAccountSettingsCommandOutput:
      properties:
        account_id:
          type: string
          x-go-name: AccountID
        address:
          $ref: '#/components/schemas/CustomerFullAddress'
        company_name:
          type: string
          x-go-name: CompanyName
        email:
          type: string
          x-go-name: CustomerEmail
        general_settings:
          $ref: '#/components/schemas/AccountGeneralSettings'
        object_version_settings:
          $ref: '#/components/schemas/AccountObjectVersionSettingsOutput'
        phone:
          type: string
          x-go-name: CustomerPhone
        secret_management:
          $ref: '#/components/schemas/SmInfo'
        secure_remote_access:
          $ref: '#/components/schemas/SraInfo'
        system_access_creds_settings:
          $ref: '#/components/schemas/SystemAccessCredsSettings'
      title: GetAccountSettingsCommandOutput defines cli output of get-account-settings
        command.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GetCertificateValueOutput:
      properties:
        certificate_pem:
          type: string
          x-go-name: CertificatePem
        private_key_pem:
          type: string
          x-go-name: PrivateKeyPem
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GetPKICertificate:
      properties:
        alt-names:
          description: |-
            The Subject Alternative Names to be included in the PKI certificate (in
            a comma-separated list) (if CSR is supplied this flag is ignored and any DNS.* names are taken from it)
          type: string
          x-go-name: AltNames
        cert-issuer-name:
          description: The name of the PKI certificate issuer
          type: string
          x-go-name: CertIssuerName
        common-name:
          description: The common name to be included in the PKI certificate (if CSR
            is supplied this flag is ignored and the CSR subject CN is taken)
          type: string
          x-go-name: CommonName
        csr-data-base64:
          description: Certificate Signing Request contents encoded in base64 to generate
            the certificate with
          type: string
          x-go-name: CSRData
        extended-key-usage:
          description: 'A comma-separated list of extended key usage requests which
            will be used for certificate issuance. Supported values: ''clientauth'',
            ''serverauth''.'
          type: string
          x-go-name: ExtKeyUsage
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-data-base64:
          description: |-
            PKI key file contents. If this option is used, the certificate
            will be printed to stdout
          type: string
          x-go-name: KeyData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: Updated certificate lifetime in seconds (must be less than
            the Certificate Issuer default TTL)
          format: int64
          type: integer
          x-go-name: Ttl
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        uri-sans:
          description: |-
            The URI Subject Alternative Names to be included in the PKI certificate
            (in a comma-separated list) (if CSR is supplied this flag is ignored and any URI.* names are taken from it)
          type: string
          x-go-name: URISANs
      required:
      - cert-issuer-name
      title: GetPKICertificate is a command that generates PKI certificate.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GetProducersListReplyObj:
      properties:
        producers:
          items:
            $ref: '#/components/schemas/Producer'
          type: array
          x-go-name: Producers
        producers_errors:
          type: object
          x-go-name: ProducersErrors
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    GetSecretValue:
      properties:
        accessibility:
          default: regular
          description: for personal password manager
          type: string
          x-go-name: ItemAccessibilityString
        ignore-cache:
          description: |-
            Ignore Cache
            Retrieve the Secret value without checking the Gateway's cache [true/false]. This flag is only relevant when using the RestAPI
          type: string
          x-go-name: IgnoreCache
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        names:
          description: Secret name
          items:
            type: string
          type: array
          x-go-name: Names
        pretty-print:
          description: Print the secret value with json-pretty-print (not relevent
            to SDK)
          type: boolean
          x-go-name: PrettyPrint
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: Secret version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - names
      title: GetSecretValue is a command that gets a static secret value.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    GetSubAdminsListReplyObj:
      properties:
        allowed_access:
          additionalProperties:
            $ref: '#/components/schemas/AllowedAccess'
          type: object
          x-go-name: AllowedAccess
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    GetTargetDetailsOutput:
      properties:
        target:
          $ref: '#/components/schemas/Target'
        value:
          $ref: '#/components/schemas/TargetTypeDetailsInput'
      title: GetTargetDetailsOutput defines output of GetTargetDetails operation.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    GwClusterIdentity:
      properties:
        allowed:
          type: boolean
          x-go-name: Allowed
        allowed_access_ids:
          items:
            type: string
          type: array
          x-go-name: AllowedAccessIDs
        cluster_name:
          type: string
          x-go-name: ClusterName
        cluster_url:
          type: string
          x-go-name: ClusterUrl
        current_gw:
          type: boolean
          x-go-name: CurrentGW
        customer_fragment_ids:
          items:
            type: string
          type: array
          x-go-name: CustomerFragmentIDs
        default_protection_key_id:
          format: int64
          type: integer
          x-go-name: DefProtectionKeyID
        default_secret_location:
          type: string
          x-go-name: DefSecretLocation
        display_name:
          type: string
          x-go-name: DisplayName
        id:
          format: int64
          type: integer
          x-go-name: Id
        status:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        status_description:
          type: string
          x-go-name: StatusDescription
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    HashAlgorithm:
      title: HashAlgorithm is a type that represents a single hash algorithm.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    HashiMigration:
      properties:
        general:
          $ref: '#/components/schemas/MigrationGeneral'
        payload:
          $ref: '#/components/schemas/HashiPayload'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    HashiPayload:
      properties:
        import_as_json:
          type: boolean
          x-go-name: ImportAsJson
        namespaces:
          items:
            type: string
          type: array
          x-go-name: Namespaces
        token:
          type: string
          x-go-name: Token
        url:
          type: string
          x-go-name: Url
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    HuaweiAccessRules:
      properties:
        auth_endpoint:
          description: The auth URL.
          type: string
          x-go-name: AuthEndpoint
        domain_id:
          description: The list of domain ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: DomainID
        domain_name:
          description: The list of domainNames that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: DomainName
        tenant_id:
          description: The list of tenantIDs  that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: TenantID
        tenant_name:
          description: The list of tenantNames  that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: TenantName
        user_id:
          description: The list of user ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: UserID
        user_name:
          description: The list of user names that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: UserName
      title: HuaweiAccessRules defines access rules specific to Huawei authentication.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ImporterInfo:
      properties:
        external_item_id:
          type: string
          x-go-name: ExternalItemId
        version:
          format: int64
          type: integer
          x-go-name: Version
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Item:
      properties:
        access_date:
          format: date-time
          type: string
          x-go-name: AccessDate
        access_request_status:
          type: string
          x-go-name: AccessRequestStatus
        auto_rotate:
          type: boolean
          x-go-name: AutoRotate
        cert_issuer_signer_key_name:
          type: string
          x-go-name: CertIssuerSignerKeyName
        certificate_issue_details:
          $ref: '#/components/schemas/CertificateIssueInfo'
        certificates:
          type: string
          x-go-name: Certificates
        client_permissions:
          items:
            type: string
          type: array
          x-go-name: ClientPermissions
        creation_date:
          format: date-time
          type: string
          x-go-name: CreationDate
        customer_fragment_id:
          type: string
          x-go-name: CustomerFragmentId
        delete_protection:
          type: boolean
          x-go-name: ItemProtected
        deletion_date:
          format: date-time
          type: string
          x-go-name: DeletionDate
        display_id:
          type: string
          x-go-name: DisplayId
        is_access_request_enabled:
          type: boolean
          x-go-name: IsAccessRequestEnabled
        is_enabled:
          type: boolean
          x-go-name: IsEnabled
        item_accessibility:
          format: int64
          title: ItemAccessibility defines types supported by AKEYLESS.
          type: integer
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        item_general_info:
          $ref: '#/components/schemas/ItemGeneralInfo'
        item_id:
          format: int64
          type: integer
          x-go-name: ItemID
        item_metadata:
          type: string
          x-go-name: ItemMetadata
        item_name:
          type: string
          x-go-name: ItemName
        item_size:
          format: int64
          type: integer
          x-go-name: Size
        item_state:
          description: ItemState defines the different states an Item can be in
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        item_sub_type:
          title: ItemSubType defines types supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        item_tags:
          items:
            type: string
          type: array
          x-go-name: Tags
        item_targets_assoc:
          items:
            $ref: '#/components/schemas/ItemTargetAssociation'
          type: array
          x-go-name: ItemTargetsAssoc
        item_type:
          title: ItemType defines types supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        item_versions:
          items:
            $ref: '#/components/schemas/ItemVersion'
          type: array
          x-go-name: ItemVersions
        last_version:
          format: int32
          type: integer
          x-go-name: LastVersion
        modification_date:
          format: date-time
          type: string
          x-go-name: ModificationDate
        next_rotation_date:
          format: date-time
          type: string
          x-go-name: NextRotationDate
        protection_key_name:
          type: string
          x-go-name: ProtectionKeyName
        protection_key_type:
          title: ItemType defines types supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        public_value:
          type: string
          x-go-name: PublicValue
        rotation_interval:
          format: int64
          type: integer
          x-go-name: RotationInterval
        shared_by:
          $ref: '#/components/schemas/RuleAssigner'
        target_versions:
          items:
            $ref: '#/components/schemas/TargetItemVersion'
          type: array
          x-go-name: TargetVersions
        with_customer_fragment:
          type: boolean
          x-go-name: WithCustomerFragment
      title: Item describes any item in AKEYLESS.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemAccessibility:
      format: int64
      title: ItemAccessibility defines types supported by AKEYLESS.
      type: integer
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemGeneralInfo:
      properties:
        cert_issue_details:
          $ref: '#/components/schemas/CertificateIssueInfo'
        certificate_chain_info:
          $ref: '#/components/schemas/CertificateChainInfo'
        classic_key_details:
          $ref: '#/components/schemas/ClassicKeyDetailsInfo'
        cluster_gw_url:
          type: string
          x-go-name: ClusterGWUrl
        display_metadata:
          type: string
          x-go-name: DisplayMetadata
        dynamic_secret_producer_details:
          $ref: '#/components/schemas/DynamicSecretProducerInfo'
        importer_info:
          $ref: '#/components/schemas/ImporterInfo'
        password_policy:
          $ref: '#/components/schemas/PasswordPolicyInfo'
        rotated_secret_details:
          $ref: '#/components/schemas/RotatedSecretDetailsInfo'
        secure_remote_access_details:
          $ref: '#/components/schemas/SecureRemoteAccess'
        static_secret_info:
          $ref: '#/components/schemas/StaticSecretDetailsInfo'
        tokenizer_info:
          $ref: '#/components/schemas/TokenizerInfo'
      title: ItemGeneralInfo defines item general info.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemState:
      description: ItemState defines the different states an Item can be in
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemSubType:
      title: ItemSubType defines types supported by AKEYLESS.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemTargetAssociation:
      description: |-
        ItemTargetAssociation includes details of an association between an item
        and a target.
      properties:
        assoc_id:
          type: string
          x-go-name: AssociationID
        attributes:
          additionalProperties:
            type: string
          type: object
          x-go-name: Attributes
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
        target_name:
          type: string
          x-go-name: TargetName
        target_type:
          type: string
          x-go-name: TargetType
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemType:
      title: ItemType defines types supported by AKEYLESS.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemVersion:
      properties:
        access_date:
          format: date-time
          type: string
          x-go-name: AccessDate
        creation_date:
          format: date-time
          type: string
          x-go-name: CreationDate
        customer_fragment_id:
          type: string
          x-go-name: CustomerFragmentId
        deletion_date:
          format: date-time
          type: string
          x-go-name: DeletionDate
        item_version_state:
          description: ItemState defines the different states an Item can be in
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        modification_date:
          format: date-time
          type: string
          x-go-name: ModificationDate
        protection_key_name:
          type: string
          x-go-name: ProtectionKeyName
        version:
          format: int32
          type: integer
          x-go-name: Version
        with_customer_fragment:
          type: boolean
          x-go-name: WithCustomerFragment
      title: ItemVersion describes an item version in AKEYLESS.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    JSONError:
      properties:
        error:
          type: string
          x-go-name: Err
      title: JSONError wraps an error with JSON object.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client
    K8SAuth:
      properties:
        am_token_expiration:
          description: AuthMethodTokenExpiration is time in seconds of expiration
            of the Akeyless Kube Auth Method token
          format: int64
          type: integer
          x-go-name: AuthMethodTokenExpiration
        auth_method_access_id:
          description: AuthMethodAccessId of the Kubernetes auth method
          type: string
          x-go-name: AuthMethodAccessId
        auth_method_prv_key_pem:
          description: |-
            AuthMethodSigningKey is the private key (in base64 of the PEM format) associated with the public key defined in the
            Kubernetes auth method, that used to sign the internal token for the Akeyless Kubernetes Auth Method
          type: string
          x-go-name: AuthMethodSigningKey
        cluster_api_type:
          description: ClusterApiType defines types of API access to cluster
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
        disable_iss_validation:
          description: DisableISSValidation is optional parameter to disable ISS validation
          type: boolean
          x-go-name: DisableISSValidation
        id:
          type: string
          x-go-name: Id
        k8s_ca_cert:
          description: K8SCACert is the CA Cert to use to call into the kubernetes
            API
          type: string
          x-go-name: K8SCACert
        k8s_host:
          description: K8SHost is the url string for the kubernetes API
          type: string
          x-go-name: K8SHost
        k8s_issuer:
          description: K8SIssuer is the claim that specifies who issued the Kubernetes
            token
          type: string
          x-go-name: K8SIssuer
        k8s_pub_keys_pem:
          description: K8SPublicKeysPEM is the list of public key in PEM format
          items:
            type: string
          type: array
          x-go-name: K8SPublicKeysPEM
        k8s_token_reviewer_jwt:
          description: K8STokenReviewerJWT is the bearer for clusterApiTypeK8s, used
            during TokenReview API call
          type: string
          x-go-name: K8STokenReviewerJWT
        name:
          type: string
          x-go-name: Name
        protection_key:
          type: string
          x-go-name: ProtectionKey
        rancher_api_key:
          description: RancherApiKey the bear token for clusterApiTypeRancher
          type: string
          x-go-name: RancherApiKey
        rancher_cluster_id:
          description: RancherClusterId cluster id as define in rancher (in case of
            clusterApiTypeRancher)
          type: string
          x-go-name: RancherClusterId
        use_local_ca_jwt:
          description: |-
            UseLocalCAJwt is an optional parameter to set defaulting to using
            the local CA cert and service account jwt when running in a Kubernetes
            pod
          type: boolean
          x-go-name: UseLocalCAJwt
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    K8SAuthsConfigLastChange:
      properties:
        changed_k8s_auths_ids:
          items:
            type: string
          type: array
          x-go-name: ChangedK8SAuthsIDs
        created_k8s_auths_ids:
          items:
            type: string
          type: array
          x-go-name: CreatedK8SAuthsIDs
        deleted_k8s_auths_ids:
          items:
            type: string
          type: array
          x-go-name: DeletedK8SAuthsIDs
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    K8SAuthsConfigPart:
      properties:
        k8s_auths:
          items:
            $ref: '#/components/schemas/K8SAuth'
          type: array
          x-go-name: K8SAuths
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    K8SMigration:
      properties:
        general:
          $ref: '#/components/schemas/MigrationGeneral'
        payload:
          $ref: '#/components/schemas/K8SPayload'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    K8SPayload:
      properties:
        ca:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: CA
        client_cert:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: ClientCert
        client_key:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: ClientKey
        namespace:
          type: string
          x-go-name: Namespace
        password:
          type: string
          x-go-name: Password
        server:
          type: string
          x-go-name: Server
        skip_system:
          type: boolean
          x-go-name: SkipSystem
        token:
          type: string
          x-go-name: Token
        username:
          type: string
          x-go-name: Username
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    K8SRoleType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
    KMIPClient:
      properties:
        activate_keys_on_creation:
          type: boolean
          x-go-name: ActivateKeysOnCreation
        certificate_issue_date:
          format: date-time
          type: string
          x-go-name: CertificateIssueDate
        certificate_ttl_in_seconds:
          format: int64
          type: integer
          x-go-name: CertificateTTLInSeconds
        id:
          type: string
          x-go-name: ID
        name:
          type: string
          x-go-name: Name
        rules:
          items:
            $ref: '#/components/schemas/PathRule'
          type: array
          x-go-name: Rules
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    KMIPClientGetResponse:
      properties:
        client:
          $ref: '#/components/schemas/KMIPClient'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/gateway/config
    KMIPClientListResponse:
      properties:
        clients:
          items:
            $ref: '#/components/schemas/KMIPClient'
          type: array
          x-go-name: Clients
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/gateway/config
    KMIPClientUpdateResponse:
      properties:
        client:
          $ref: '#/components/schemas/KMIPClient'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/gateway/config
    KMIPConfigPart:
      properties:
        clients:
          additionalProperties:
            $ref: '#/components/schemas/KMIPClient'
          type: object
          x-go-name: Clients
        key_enc:
          description: Saves the private key of the cert issuer in encypted form
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: KeyEnc
        server:
          $ref: '#/components/schemas/KMIPServer'
        server_enc:
          description: |-
            Saved for backward compatibility
            TODO: remove this after all clients upgrade
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: ServerEnc
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    KMIPEnvironmentCreateResponse:
      properties:
        ca_cert:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: CACert
        root:
          type: string
          x-go-name: Root
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/gateway/config
    KMIPServer:
      properties:
        active:
          type: boolean
          x-go-name: Active
        ca:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: CA
        certificate:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: Certificate
        certificate_issue_date:
          format: date-time
          type: string
          x-go-name: CertificateIssueDate
        certificate_ttl_in_seconds:
          format: int64
          type: integer
          x-go-name: CertificateTTLInSeconds
        hostname:
          type: string
          x-go-name: Hostname
        root:
          type: string
          x-go-name: Root
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    KeyUsage:
      description: |-
        KeyUsage represents the set of actions that are valid for a given key. It's
        a bitmap of the KeyUsage* constants.
      format: int64
      type: integer
      x-go-package: crypto/x509
    KubernetesAccessRules:
      properties:
        alg:
          title: Algorithm is a type that represents a single crypto algorithm.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        audience:
          description: Audience is an optional Kubernetes jwt claim to verify
          type: string
          x-go-name: Audience
        bound_namespaces:
          description: A list of namespaces that the authentication is restricted
            to.
          items:
            type: string
          type: array
          x-go-name: Namespaces
        bound_pod_names:
          description: A list of pods names that the authentication is restricted
            to.
          items:
            type: string
          type: array
          x-go-name: PodNames
        bound_service_account_names:
          description: A list of service account names that the authentication is
            restricted to.
          items:
            type: string
          type: array
          x-go-name: ServiceAccountNames
        gen_key_pair:
          description: Generate public/private key (the private key is required for
            the K8S Auth Config in the Akeyless Gateway)
          type: string
          x-go-name: GenKeyPair
        pub_key:
          description: The public key value of the Kubernetes auth method configuration
            in the Akeyless Gateway.
          type: string
          x-go-name: PubKeyValue
      title: KubernetesAccessRules includes access rules specific to the Kubernetes
        auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    LDAPAccessRules:
      properties:
        alg:
          title: Algorithm is a type that represents a single crypto algorithm.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        gen_key_pair:
          description: Generate public/private key (the private key is required for
            the LDAP Auth Config in the Akeyless Gateway)
          type: string
          x-go-name: GenKeyPair
        key:
          description: The public key value of LDAP.
          type: string
          x-go-name: PubKeyValue
        unique_identifier:
          description: A unique identifier to distinguish different users
          type: string
          x-go-name: UniqueIdentifier
      title: LDAPAccessRules includes access rules specific to LDAP authentication.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    LastConfigChange:
      properties:
        last_k8s_auths_change:
          $ref: '#/components/schemas/K8SAuthsConfigLastChange'
        last_migrations_change:
          $ref: '#/components/schemas/MigrationsConfigLastChange'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    LastStatusInfo:
      properties:
        migrations_status:
          $ref: '#/components/schemas/MigrationStatus'
        producers_errors:
          type: object
          x-go-name: Producers
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    LdapConfigPart:
      properties:
        ldap_access_id:
          type: string
          x-go-name: LdapAccessId
        ldap_anonymous_search:
          type: boolean
          x-go-name: LdapAnonymousSearch
        ldap_bind_dn:
          type: string
          x-go-name: LdapBindDn
        ldap_bind_password:
          type: string
          x-go-name: LdapBindPassword
        ldap_cert:
          type: string
          x-go-name: LdapCertificate
        ldap_enable:
          type: boolean
          x-go-name: LdapEnable
        ldap_group_attr:
          type: string
          x-go-name: LdapGroupAttr
        ldap_group_dn:
          type: string
          x-go-name: LdapGroupDn
        ldap_group_filter:
          type: string
          x-go-name: LdapGroupFilter
        ldap_private_key:
          type: string
          x-go-name: LdapPrivateKey
        ldap_token_expiration:
          type: string
          x-go-name: LdapTokenExpiration
        ldap_url:
          type: string
          x-go-name: LdapUrlAddress
        ldap_user_attr:
          type: string
          x-go-name: LdapUserAttr
        ldap_user_dn:
          type: string
          x-go-name: LdapUserDn
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    LeadershipConfigPart:
      properties:
        open_leadership:
          items:
            format: uint32
            type: integer
          type: array
          x-go-name: OpenLeadership
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    ListAuthMethodsOutput:
      properties:
        auth_methods:
          items:
            $ref: '#/components/schemas/AuthMethod'
          type: array
          x-go-name: AuthMethods
        next_page:
          type: string
          x-go-name: NextPage
      title: ListAuthMethodsOutput is a list of auth methods.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ListItemsInPathOutput:
      properties:
        folders:
          items:
            type: string
          type: array
          x-go-name: Folders
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
          x-go-name: Items
        next_page:
          type: string
          x-go-name: NextPage
      title: ListItemsInPathOutput is a list of items and/or folders in a specific
        path.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ListRolesOutput:
      properties:
        next_page:
          type: string
          x-go-name: NextPage
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
          x-go-name: Roles
      title: ListRolesOutput is a list of roles.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ListTargetsOutput:
      properties:
        next_page:
          type: string
          x-go-name: NextPage
        targets:
          items:
            $ref: '#/components/schemas/Target'
          type: array
          x-go-name: Targets
      title: ListTargetsOutput is a list of targets.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    LogForwardingConfigPart:
      properties:
        aws_s3_config:
          $ref: '#/components/schemas/AwsS3LogForwardingConfig'
        azure_analytics_config:
          $ref: '#/components/schemas/AzureLogAnalyticsForwardingConfig'
        datadog_config:
          $ref: '#/components/schemas/DatadogForwardingConfig'
        elasticsearch_config:
          $ref: '#/components/schemas/ElasticsearchLogForwardingConfig'
        json_output:
          type: boolean
          x-go-name: JsonOutput
        logan_enable:
          type: boolean
          x-go-name: LoganEnable
        logan_url:
          type: string
          x-go-name: LoganURLConfig
        logstash_config:
          $ref: '#/components/schemas/LogstashLogForwardingConfig'
        logz_io_config:
          $ref: '#/components/schemas/LogzIoLogForwardingConfig'
        pull_interval_sec:
          type: string
          x-go-name: PullIntervalSec
        splunk_config:
          $ref: '#/components/schemas/SplunkLogForwardingConfig'
        syslog_config:
          $ref: '#/components/schemas/SyslogLogForwardingConfig'
        target_log_type:
          type: string
          x-go-name: TargetLogType
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    LogstashLogForwardingConfig:
      properties:
        logstash_dns:
          type: string
          x-go-name: LogstashDns
        logstash_protocol:
          type: string
          x-go-name: LogstashProtocol
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    LogzIoLogForwardingConfig:
      properties:
        target_logz_io_protocol:
          type: string
          x-go-name: TargetLogzIoProtocol
        target_logz_io_token:
          type: string
          x-go-name: TargetLogzIoToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    MigrationGeneral:
      properties:
        id:
          type: string
          x-go-name: Id
        name:
          type: string
          x-go-name: Name
        new_name:
          type: string
          x-go-name: NewName
        prefix:
          type: string
          x-go-name: Prefix
        protection_key:
          type: string
          x-go-name: ProtectionKey
        status:
          type: string
          x-go-name: Status
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    MigrationItems:
      properties:
        failed:
          format: int64
          type: integer
          x-go-name: Failed
        migrated:
          format: int64
          type: integer
          x-go-name: Migrated
        skipped:
          format: int64
          type: integer
          x-go-name: Skipped
        total:
          format: int64
          type: integer
          x-go-name: Total
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/importer/report
    MigrationStatus:
      properties:
        last_messages:
          additionalProperties:
            type: string
          type: object
          x-go-name: LastMessages
        last_reports:
          additionalProperties:
            type: string
          type: object
          x-go-name: LastReports
        last_statuses:
          additionalProperties:
            type: string
          type: object
          x-go-name: LastStatuses
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    MigrationStatusReplyObj:
      properties:
        duration_time:
          type: string
          x-go-name: DurationTime
        last_status_message:
          type: string
          x-go-name: LastMessage
        max_name_length:
          format: int64
          type: integer
          x-go-name: MaxNameLength
        max_value_length:
          format: int64
          type: integer
          x-go-name: MaxValueLength
        migration_id:
          type: string
          x-go-name: MigrationID
        migration_items:
          $ref: '#/components/schemas/MigrationItems'
        migration_name:
          type: string
          x-go-name: MigrationName
        migration_state:
          type: string
          x-go-name: MigrationState
        migration_type:
          type: string
          x-go-name: MigrationType
        start_time:
          type: string
          x-go-name: StartTime
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    MigrationsConfigLastChange:
      properties:
        changed_migrations:
          items:
            type: string
          type: array
          x-go-name: ChangedMigrations
        created_migrations:
          items:
            type: string
          type: array
          x-go-name: CreatedMigrations
        deleted_migrations:
          items:
            type: string
          type: array
          x-go-name: DeletedMigrations
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    MigrationsConfigPart:
      properties:
        active_directory_migrations:
          items:
            $ref: '#/components/schemas/ActiveDirectoryMigration'
          type: array
          x-go-name: ActiveDirectoryMigrations
        aws_secrets_migrations:
          items:
            $ref: '#/components/schemas/AWSSecretsMigration'
          type: array
          x-go-name: AWSSecretsMigrations
        azure_kv_migrations:
          items:
            $ref: '#/components/schemas/AzureKeyVaultMigration'
          type: array
          x-go-name: AzureKVMigrations
        gcp_secrets_migrations:
          items:
            $ref: '#/components/schemas/GCPSecretsMigration'
          type: array
          x-go-name: GCPSecretsMigrations
        hashi_migrations:
          items:
            $ref: '#/components/schemas/HashiMigration'
          type: array
          x-go-name: HashiMigrations
        k8s_migrations:
          items:
            $ref: '#/components/schemas/K8SMigration'
          type: array
          x-go-name: K8SMigrations
        mock_migrations:
          items:
            $ref: '#/components/schemas/MockMigration'
          type: array
          x-go-name: MockMigrations
        one_password_migrations:
          items:
            $ref: '#/components/schemas/OnePasswordMigration'
          type: array
          x-go-name: OnePasswordMigrations
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    MockMigration:
      properties:
        general:
          $ref: '#/components/schemas/MigrationGeneral'
        payload:
          $ref: '#/components/schemas/MockPayload'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    MockPayload:
      properties:
        vaults:
          items:
            type: string
          type: array
          x-go-name: Vaults
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    Name:
      description: |-
        Name represents an X.509 distinguished name. This only includes the common
        elements of a DN. Note that Name is only an approximation of the X.509
        structure. If an accurate representation is needed, asn1.Unmarshal the raw
        subject or issuer as an RDNSequence.
      properties:
        Country:
          items:
            type: string
          type: array
          x-go-name: OrganizationalUnit
        ExtraNames:
          description: |-
            ExtraNames contains attributes to be copied, raw, into any marshaled
            distinguished names. Values override any attributes with the same OID.
            The ExtraNames field is not populated when parsing, see Names.
          items:
            $ref: '#/components/schemas/AttributeTypeAndValue'
          type: array
        Locality:
          items:
            type: string
          type: array
          x-go-name: Province
        Names:
          description: |-
            Names contains all parsed attributes. When parsing distinguished names,
            this can be used to extract non-standard attributes that are not parsed
            by this package. When marshaling to RDNSequences, the Names field is
            ignored, see ExtraNames.
          items:
            $ref: '#/components/schemas/AttributeTypeAndValue'
          type: array
        SerialNumber:
          type: string
          x-go-name: CommonName
        StreetAddress:
          items:
            type: string
          type: array
          x-go-name: PostalCode
      type: object
      x-go-package: crypto/x509/pkix
    NotiForwarder:
      properties:
        client_permissions:
          items:
            type: string
          type: array
          x-go-name: ClientPermissions
        comment:
          type: string
          x-go-name: Comment
        creation_date:
          format: date-time
          type: string
          x-go-name: CreationDate
        endpoint:
          type: string
          x-go-name: Endpoint
        event_types:
          items:
            $ref: '#/components/schemas/EventType'
          type: array
          x-go-name: NotificationTypes
        gateway_cluster_id:
          format: int64
          type: integer
          x-go-name: GatewayClusterId
        is_enabled:
          type: boolean
          x-go-name: IsEnabled
        last_version:
          format: int32
          type: integer
          x-go-name: LastVersion
        modification_date:
          format: date-time
          type: string
          x-go-name: ModificationDate
        noti_forwarder_id:
          format: int64
          type: integer
          x-go-name: NotiForwarderID
        noti_forwarder_name:
          type: string
          x-go-name: Name
        noti_forwarder_type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        noti_forwarder_versions:
          items:
            $ref: '#/components/schemas/ItemVersion'
          type: array
          x-go-name: NotiForwarderVersions
        paths:
          items:
            type: string
          type: array
          x-go-name: Paths
        protection_key:
          type: string
          x-go-name: ProtectionKey
        runner_type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        timespan_in_seconds:
          format: int64
          type: integer
          x-go-name: TimespanInSeconds
        to_emails:
          items:
            $ref: '#/components/schemas/EmailEntry'
          type: array
          x-go-name: ToEmails
        username:
          type: string
          x-go-name: Username
        with_customer_fragment:
          type: boolean
          x-go-name: WithCustomerFragment
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    NotiForwarderRunnerType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    NotiForwarderType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    OAuth2AccessRules:
      description: |-
        OAuth2AccessRules contains access rules specific to OAuth2 authentication
        method.
      properties:
        audience:
          description: The audience in the JWT.
          type: string
          x-go-name: Audience
        bound_claims:
          description: The claims that login is restricted to.
          items:
            $ref: '#/components/schemas/OAuth2CustomClaim'
          type: array
          x-go-name: BoundCustomClaims
        bound_clients_id:
          description: The clients ids that login is restricted to.
          items:
            type: string
          type: array
          x-go-name: BoundClientsIDs
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        jwks_uri:
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
        unique_identifier:
          description: A unique identifier to distinguish different users
          type: string
          x-go-name: UniqueIdentifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    OAuth2CustomClaim:
      description: |-
        OAuth2CustomClaim is a custom claim specific to OAuth2 authentication
        method.
      properties:
        name:
          type: string
          x-go-name: Name
        values:
          items:
            type: string
          type: array
          x-go-name: Values
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    OIDCAccessRules:
      description: |-
        OIDCAccessRules contains access rules specific to Open Id Connect authentication
        method.
      properties:
        allowed_redirect_URIs:
          description: Allowed redirect URIs after the authentication
          items:
            type: string
          type: array
          x-go-name: AllowedRedirectURIs
        audience:
          description: Audience claim to be used as part of the authentication flow.
            In case set, it must match the one configured on the Identity Provider's
            Application
          type: string
          x-go-name: Audience
        bound_claims:
          description: The claims that login is restricted to.
          items:
            $ref: '#/components/schemas/OIDCCustomClaim'
          type: array
          x-go-name: BoundCustomClaims
        client_id:
          description: Client ID
          type: string
          x-go-name: ClientID
        client_secret:
          description: Client Secret
          type: string
          x-go-name: ClientSecret
        is_internal:
          description: |-
            IsInternal indicates whether this is an internal Auth Method where the client has no control
            over it, or it was created by the client
            e.g - Sign In with Google will create an OIDC Auth Method with IsInternal=true
          type: boolean
          x-go-name: IsInternal
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        required_scopes:
          description: A list of required scopes to request from the oidc provider,
            and to check on the token
          items:
            type: string
          type: array
          x-go-name: RequiredScopes
        required_scopes_prefix:
          description: A prefix to add to the required scopes (for example, azures'
            Application ID URI)
          type: string
          x-go-name: RequiredScopesPrefix
        unique_identifier:
          description: A unique identifier to distinguish different users
          type: string
          x-go-name: UniqueIdentifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    OIDCCustomClaim:
      description: |-
        OIDCCustomClaim is a custom claim specific to OIDC authentication
        method.
      properties:
        name:
          type: string
          x-go-name: Name
        values:
          items:
            type: string
          type: array
          x-go-name: Values
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ObjectIdentifier:
      items:
        format: int64
        type: integer
      title: An ObjectIdentifier represents an ASN.1 OBJECT IDENTIFIER.
      type: array
      x-go-package: encoding/asn1
    ObjectVersionSettingsOutput:
      properties:
        item-type:
          description: VersionSettingsObjectType defines object types for account
            version settings
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        max-versions:
          type: string
          x-go-name: MaxVersions
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    OnePasswordMigration:
      properties:
        general:
          $ref: '#/components/schemas/MigrationGeneral'
        payload:
          $ref: '#/components/schemas/OnePasswordPayload'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    OnePasswordPayload:
      properties:
        email:
          type: string
          x-go-name: Email
        password:
          type: string
          x-go-name: Password
        secret_key:
          type: string
          x-go-name: SecretKey
        url:
          type: string
          x-go-name: AccountUrl
        vaults:
          items:
            type: string
          type: array
          x-go-name: Vaults
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    PKICertificateIssueDetails:
      properties:
        allow_any_name:
          type: boolean
          x-go-name: AllowAnyName
        allow_subdomains:
          type: boolean
          x-go-name: AllowSubdomains
        allowed_domains_list:
          items:
            type: string
          type: array
          x-go-name: AllowedDomains
        allowed_uri_sans:
          items:
            type: string
          type: array
          x-go-name: AllowedURISANs
        basic_constraints_valid_for_non_ca:
          type: boolean
          x-go-name: BasicConstraintsValidForNonCA
        client_flag:
          type: boolean
          x-go-name: ClientFlag
        code_signing_flag:
          type: boolean
          x-go-name: CodeSigningFlag
        country:
          items:
            type: string
          type: array
          x-go-name: Country
        enforce_hostnames:
          type: boolean
          x-go-name: EnforceHostnames
        is_ca:
          type: boolean
          x-go-name: IsCA
        key_bits:
          format: int64
          type: integer
          x-go-name: KeyBits
        key_type:
          type: string
          x-go-name: KeyType
        key_usage_list:
          items:
            type: string
          type: array
          x-go-name: KeyUsage
        locality:
          items:
            type: string
          type: array
          x-go-name: Locality
        not_before_duration:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        organization_list:
          items:
            type: string
          type: array
          x-go-name: Organization
        organization_unit_list:
          items:
            type: string
          type: array
          x-go-name: OrganizationalUnit
        postal_code:
          items:
            type: string
          type: array
          x-go-name: PostalCode
        province:
          items:
            type: string
          type: array
          x-go-name: Province
        require_cn:
          type: boolean
          x-go-name: RequireCN
        server_flag:
          type: boolean
          x-go-name: ServerFlag
        street_address:
          items:
            type: string
          type: array
          x-go-name: StreetAddress
      title: PKICertificateIssueDetails defines PKI certificate details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    PasswordPolicyInfo:
      properties:
        password_length:
          format: int64
          type: integer
          x-go-name: PasswordLength
        use_capital_letters:
          type: boolean
          x-go-name: UseCapitalLetters
        use_lower_letters:
          type: boolean
          x-go-name: UseLowerLetters
        use_numbers:
          type: boolean
          x-go-name: UseNumbers
        use_special_characters:
          type: boolean
          x-go-name: UseSpecialCharacters
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    PathRule:
      properties:
        assigners:
          items:
            $ref: '#/components/schemas/RuleAssigner'
          type: array
          x-go-name: Assigners
        capabilities:
          description: The approved/denied capabilities in the path
          items:
            type: string
          type: array
          x-go-name: Capabilities
        is_limit_access:
          description: flag that indicate that this rule is allowed to be access RemainingAccess
            of times.
          type: boolean
          x-go-name: IsLimitAccess
        number_of_access_used:
          format: int64
          type: integer
          x-go-name: NumberOfAccessUsed
        number_of_allowed_access:
          format: int64
          type: integer
          x-go-name: NumberOfAllowedAccess
        path:
          description: The path the rule refers to
          type: string
          x-go-name: Path
        start_time:
          format: int64
          type: integer
          x-go-name: StartTime
        ttl:
          format: int64
          type: integer
          x-go-name: TTL
        type:
          title: PathRuleType defines a kind of every PathRule assigned to a Role.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
      title: PathRule is a single rule used in AKEYLESS RBAC.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    PathRuleType:
      title: PathRuleType defines a kind of every PathRule assigned to a Role.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Producer:
      properties:
        active:
          type: boolean
          x-go-name: Active
        failure_message:
          type: string
          x-go-name: FailureMessage
        id:
          format: int64
          type: integer
          x-go-name: Id
        init:
          type: boolean
          x-go-name: Init
        name:
          type: string
          x-go-name: Name
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    ProducerStatus:
      description: RotationStatus defines types of rotation Status
      type: string
      x-go-name: RotationStatus
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ProducersConfigPart:
      properties:
        producers:
          items:
            $ref: '#/components/schemas/Producer'
          type: array
          x-go-name: Producers
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    RegexpTokenizerInfo:
      description: RegexpTokenizerInfo represents a general Regexp tokenization template
      properties:
        alphabet:
          description: The Alphabet used for the tokenization
          type: string
          x-go-name: Alphabet
        decoding_template:
          description: Transformation to perform on the decrypted data
          type: string
          x-go-name: DecodingTemplate
        encoding_template:
          description: |-
            Transformation to perform on the encrypted data,
            if the required output template doesn't match the input string
            The output Should still be valid for the Pattern, otherwise the secret would be able to be decrypted.
          type: string
          x-go-name: EncodingTemplate
        pattern:
          description: Regexp pattern to extract and deposit the text/encdata
          type: string
          x-go-name: Pattern
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    RequiredActivity:
      properties:
        migrations_required_activity:
          additionalProperties:
            type: boolean
          type: object
          x-go-name: Migrations
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    ReverseRBACClient:
      properties:
        assocs:
          items:
            $ref: '#/components/schemas/AuthMethodRoleAssociation'
          type: array
          x-go-name: Assocs
        auth_method_name:
          type: string
          x-go-name: AuthMethodName
      title: ReverseRBACClient is a single entity that has access to a given object.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ReverseRBACOutput:
      properties:
        clients:
          additionalProperties:
            $ref: '#/components/schemas/ReverseRBACClient'
          type: object
          x-go-name: Clients
      title: ReverseRBACOutput defines output of ReverseRBAC operation.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Role:
      properties:
        access_date:
          format: date-time
          type: string
          x-go-name: AccessDate
        client_permissions:
          items:
            type: string
          type: array
          x-go-name: ClientPermissions
        comment:
          type: string
          x-go-name: Comment
        creation_date:
          format: date-time
          type: string
          x-go-name: CreationDate
        modification_date:
          format: date-time
          type: string
          x-go-name: ModificationDate
        role_auth_methods_assoc:
          items:
            $ref: '#/components/schemas/RoleAuthMethodAssociation'
          type: array
          x-go-name: RoleAuthMethodsAssoc
        role_name:
          type: string
          x-go-name: RoleName
        rules:
          $ref: '#/components/schemas/Rules'
      title: Role includes role details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    RoleAuthMethodAssociation:
      description: |-
        RoleAuthMethodAssociation includes details of an association between a role
        and an auth method.
      properties:
        assoc_id:
          type: string
          x-go-name: AssociationID
        auth_method_access_id:
          type: string
          x-go-name: AuthMethodAccessID
        auth_method_name:
          type: string
          x-go-name: AuthMethodName
        auth_method_sub_claims:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: AuthMethodSubClaims
        sub_claims_case_sensitive:
          type: boolean
          x-go-name: IsSubClaimsCaseSensitive
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    RotateKeyOutput:
      description: RotateKeyOutput defines output of RotateKey operation
      properties:
        classic_key_gw_url:
          type: string
          x-go-name: ClassicKeyGWUrl
        item_type:
          title: ItemType defines types supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        new_item_version:
          format: int32
          type: integer
          x-go-name: NewKeyVersion
        next_rotation_date:
          format: date-time
          type: string
          x-go-name: NextRotationDate
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    RotatedSecretDetailsInfo:
      description: RotatedSecretDetailsInfo The rotated secret rotator info
      properties:
        delete_previous_version_in_days:
          format: int32
          type: integer
          x-go-name: DeletePreviousVersionInDays
        gw_cluster_id:
          format: int64
          type: integer
          x-go-name: GWClusterID
        last_rotation_error:
          type: string
          x-go-name: LastRotatorError
        number_of_versions_to_save:
          format: int32
          type: integer
          x-go-name: NumberOfVersionsToSave
        rotation_hour:
          format: int32
          type: integer
          x-go-name: RotationHour
        rotation_interval_min:
          type: boolean
          x-go-name: RotationIntervalMin
        rotation_statement:
          type: string
          x-go-name: RotationStatement
        rotator_creds_type:
          title: RotatorCredsType defines types supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        rotator_status:
          description: RotationStatus defines types of rotation Status
          type: string
          x-go-name: RotationStatus
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        rotator_type:
          title: RotatorType defines types supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    RotatedSecretOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    Rotator:
      properties:
        id:
          format: int64
          type: integer
          x-go-name: Id
        last_error:
          type: string
          x-go-name: LastError
        name:
          type: string
          x-go-name: Name
        rotation_interval:
          format: int32
          type: integer
          x-go-name: RotationInterval
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    RotatorCredsType:
      title: RotatorCredsType defines types supported by AKEYLESS.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    RotatorType:
      title: RotatorType defines types supported by AKEYLESS.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    RotatorsConfigPart:
      properties:
        rotators:
          items:
            $ref: '#/components/schemas/Rotator'
          type: array
          x-go-name: Rotators
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    RuleAssigner:
      properties:
        access_id:
          type: string
          x-go-name: AccessId
        unique_id:
          type: string
          x-go-name: UniqueId
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Rules:
      properties:
        admin:
          description: Is admin
          type: boolean
          x-go-name: Admin
        path_rules:
          description: The path the rules refers to
          items:
            $ref: '#/components/schemas/PathRule'
          type: array
          x-go-name: PathRules
      title: Rules are a part of AKEYLESS RBAC.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SAMLAccessRules:
      properties:
        allowed_redirect_URIs:
          description: Allowed redirect URIs after the authentication
          items:
            type: string
          type: array
          x-go-name: AllowedRedirectURIs
        bound_attributes:
          description: The attributes that login is restricted to.
          items:
            $ref: '#/components/schemas/SAMLAttribute'
          type: array
          x-go-name: BoundAttributes
        idp_metadata_url:
          description: IDP metadata url
          type: string
          x-go-name: IDPMetadataURL
        idp_metadata_xml:
          description: IDP metadata XML
          type: string
          x-go-name: IDPMetadataXML
        unique_identifier:
          description: A unique identifier to distinguish different users
          type: string
          x-go-name: UniqueIdentifier
      title: SAMLAccessRules defines access rules specific to SAML authentication
        method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SAMLAttribute:
      properties:
        name:
          type: string
          x-go-name: Name
        values:
          items:
            type: string
          type: array
          x-go-name: Values
      title: SAMLAttribute defines an attribute of SAML authentication.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SLA:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SSHCertificateIssueDetails:
      properties:
        allowed_domains:
          description: Relevant for host certificate
          items:
            type: string
          type: array
          x-go-name: AllowedDomains
        allowed_user_key_lengths:
          additionalProperties:
            format: int64
            type: integer
          type: object
          x-go-name: AllowedUserKeyLengths
        allowed_users:
          description: Relevant for user certificate
          items:
            type: string
          type: array
          x-go-name: AllowedUsers
        cert_type:
          format: uint32
          title: SSHCertificateType defines the types of SSH certificates.
          type: integer
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        critical_options:
          additionalProperties:
            type: string
          type: object
          x-go-name: CriticalOptions
        extensions:
          additionalProperties:
            type: string
          type: object
          x-go-name: Extensions
        principals:
          items:
            type: string
          type: array
          x-go-name: Principals
        static_key_id:
          description: In case it is empty, the key ID will be combination of user
            identifiers and a random string
          type: string
          x-go-name: StaticKeyID
      title: SSHCertificateIssueDetails defines SSH certificate details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SSHCertificateType:
      format: uint32
      title: SSHCertificateType defines the types of SSH certificates.
      type: integer
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SecureRemoteAccess:
      properties:
        account_id:
          type: string
          x-go-name: AwsAccountId
        allow_port_forwarding:
          type: boolean
          x-go-name: K8SAllowPortForwading
        allow_providing_external_username:
          type: boolean
          x-go-name: AllowProvidingExternalUser
        bastion_api:
          type: string
          x-go-name: BastionAPI
        bastion_issuer:
          type: string
          x-go-name: BastionIssuer
        bastion_issuer_id:
          format: int64
          type: integer
          x-go-name: BastionIssuerID
        bastion_ssh:
          type: string
          x-go-name: BastionSSH
        category:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        dashboard_url:
          type: string
          x-go-name: K8SDashboardURL
        db_name:
          type: string
          x-go-name: DbName
        domain:
          type: string
          x-go-name: RDPDomain
        enable:
          type: boolean
          x-go-name: Enable
        endpoint:
          type: string
          x-go-name: K8SEndpoint
        host:
          items:
            type: string
          type: array
          x-go-name: Host
        is_cli:
          type: boolean
          x-go-name: AccessCliCategory
        is_web:
          type: boolean
          x-go-name: AccessWebCategory
        isolated:
          type: boolean
          x-go-name: Isolated
        native:
          type: boolean
          x-go-name: AwsNativeCli
        rdp_user:
          type: string
          x-go-name: RDPUser
        region:
          type: string
          x-go-name: AwsRegion
        rotate_after_disconnect:
          type: boolean
          x-go-name: RotateAfterDisconnect
        schema:
          type: string
          x-go-name: Schema
        ssh_password:
          type: boolean
          x-go-name: SSHPassword
        ssh_private_key:
          type: boolean
          x-go-name: SSHPrivateKey
        ssh_user:
          type: string
          x-go-name: SSHUser
        url:
          type: string
          x-go-name: URL
        use_internal_bastion:
          type: boolean
          x-go-name: UseInternalBastion
        web_proxy:
          type: boolean
          x-go-name: WebProxy
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SecureRemoteAccessCategory:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SmInfo:
      properties:
        sla:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        tier:
          description: |-
            Tier represents a level of extensibility the account will have, defined by various limits for different
            resources of Akeyless
            e.g - A StarterTier may have a limit of 3 Client resources and 50 Secret resources
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    SplunkLogForwardingConfig:
      properties:
        splunk_index:
          type: string
          x-go-name: SplunkIndex
        splunk_source:
          type: string
          x-go-name: SplunkSource
        splunk_sourcetype:
          type: string
          x-go-name: SplunkSourcetype
        splunk_token:
          type: string
          x-go-name: SplunkToken
        splunk_url:
          type: string
          x-go-name: SplunkUrl
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    SraInfo:
      properties:
        sla:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        tier:
          description: |-
            Tier represents a level of extensibility the account will have, defined by various limits for different
            resources of Akeyless
            e.g - A StarterTier may have a limit of 3 Client resources and 50 Secret resources
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        user_type:
          type: string
          x-go-name: UserType
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    StaticSecretDetailsInfo:
      properties:
        username:
          type: string
          x-go-name: Username
        website:
          description: deprecated
          type: string
          x-go-name: Website
        websites:
          items:
            type: string
          type: array
          x-go-name: Websites
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SyslogLogForwardingConfig:
      properties:
        syslog_formatter:
          type: string
          x-go-name: SyslogFormatter
        syslog_host:
          type: string
          x-go-name: SyslogHost
        syslog_network:
          type: string
          x-go-name: SyslogNetwork
        syslog_target_tag:
          type: string
          x-go-name: SyslogTargetTag
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
    SystemAccessCredentialsReplyObj:
      properties:
        auth_creds:
          description: Temporary credentials for accessing Auth
          type: string
          x-go-name: AuthAccessCredentials
        expiry:
          description: Credentials expiration date
          format: int64
          type: integer
          x-go-name: Expiry
        kfm_creds:
          description: Temporary credentials for accessing the KFMs instances
          type: string
          x-go-name: KFMsAccessCredentials
        token:
          description: Credentials tmp token
          type: string
          x-go-name: Token
        uam_creds:
          description: Temporary credentials for accessing the UAM service
          type: string
          x-go-name: UAMAccessCredentials
      title: Combination of three temporary credentials signed by Auth for accessing
        Auth, UAM and KFMs instances.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/auth
    SystemAccessCredsSettings:
      description: SystemAccessCredsSettings describes system access credential settings
        for account by minutes
      properties:
        jwt_ttl_default:
          format: int64
          type: integer
          x-go-name: JwtTtlDefault
        jwt_ttl_maximum:
          format: int64
          type: integer
          x-go-name: JwtTtlMaximum
        jwt_ttl_minimum:
          format: int64
          type: integer
          x-go-name: JwtTtlMinimum
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Target:
      properties:
        access_date:
          format: date-time
          type: string
          x-go-name: AccessDate
        access_request_status:
          type: string
          x-go-name: AccessRequestStatus
        attributes:
          additionalProperties:
            type: object
          description: |-
            this is not "omitempty" since an empty value causes no update
            while an empty map will clear the attributes
          type: object
          x-go-name: Attributes
        client_permissions:
          items:
            type: string
          type: array
          x-go-name: ClientPermissions
        comment:
          type: string
          x-go-name: Comment
        creation_date:
          format: date-time
          type: string
          x-go-name: CreationDate
        credentials_less:
          type: boolean
          x-go-name: CredentialsLess
        is_access_request_enabled:
          type: boolean
          x-go-name: IsAccessRequestEnabled
        last_version:
          format: int32
          type: integer
          x-go-name: LastVersion
        modification_date:
          format: date-time
          type: string
          x-go-name: ModificationDate
        protection_key_name:
          type: string
          x-go-name: ProtectionKeyName
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
        target_items_assoc:
          items:
            $ref: '#/components/schemas/TargetItemAssociation'
          type: array
          x-go-name: TargetItemsAssoc
        target_name:
          type: string
          x-go-name: TargetName
        target_type:
          title: TargetType ..
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        target_versions:
          items:
            $ref: '#/components/schemas/ItemVersion'
          type: array
          x-go-name: TargetVersions
        with_customer_fragment:
          type: boolean
          x-go-name: WithCustomerFragment
      title: Target includes target details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    TargetItemAssociation:
      description: |-
        TargetItemAssociation includes details of an association between a target
        and an item.
      properties:
        assoc_id:
          type: string
          x-go-name: AssociationID
        attributes:
          additionalProperties:
            type: string
          type: object
          x-go-name: Attributes
        cluster_id:
          format: int64
          type: integer
          x-go-name: GWClusterID
        item_name:
          type: string
          x-go-name: ItemName
        item_type:
          title: ItemType defines types supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        relationship:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    TargetItemVersion:
      properties:
        access_date:
          format: date-time
          type: string
          x-go-name: AccessDate
        creation_date:
          format: date-time
          type: string
          x-go-name: CreationDate
        customer_fragment_id:
          type: string
          x-go-name: CustomerFragmentId
        deletion_date:
          format: date-time
          type: string
          x-go-name: DeletionDate
        item_version_state:
          description: ItemState defines the different states an Item can be in
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        latest_version:
          type: boolean
          x-go-name: IsLatestVersion
        modification_date:
          format: date-time
          type: string
          x-go-name: ModificationDate
        protection_key_name:
          type: string
          x-go-name: ProtectionKeyName
        target_name:
          type: string
          x-go-name: TargetName
        version:
          format: int32
          type: integer
          x-go-name: Version
        with_customer_fragment:
          type: boolean
          x-go-name: WithCustomerFragment
      title: TargetItemVersion describes an item version in AKEYLESS.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    TargetType:
      title: TargetType ..
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    TargetTypeDetailsInput:
      properties:
        administrative_port:
          type: string
          x-go-name: AdministrativePort
        app_private_key:
          description: |-
            params needed for jwt auth
            AppPrivateKey is the rsa private key in PEM format
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: AppPrivateKey
        artifactory_admin_apikey:
          type: string
          x-go-name: ArtifactoryAdminApiKey
        artifactory_admin_username:
          type: string
          x-go-name: ArtifactoryAdminUsername
        artifactory_base_url:
          type: string
          x-go-name: ArtifactoryBaseURL
        auth_flow:
          type: string
          x-go-name: AuthFlow
        authorization_port:
          type: string
          x-go-name: AuthorizationPort
        aws_access_key_id:
          type: string
          x-go-name: AWSAccessKeyID
        aws_region:
          type: string
          x-go-name: AWSRegion
        aws_secret_access_key:
          type: string
          x-go-name: AWSSecretAccessKey
        aws_session_token:
          type: string
          x-go-name: AWSSessionToken
        azure_client_id:
          type: string
          x-go-name: AzureClientID
        azure_client_secret:
          type: string
          x-go-name: AzureClientSecret
        azure_resource_group_name:
          type: string
          x-go-name: AzureResourceGroupName
        azure_resource_name:
          type: string
          x-go-name: AzureResourceName
        azure_subscription_id:
          type: string
          x-go-name: AzureSubscriptionId
        azure_tenant_id:
          type: string
          x-go-name: AzureTenantID
        ca_cert_data:
          description: CACertData is the rsa 4096 certificate data in PEM format
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: CACertData
        ca_cert_name:
          description: CACertName is the name of the certificate in SalesForce tenant
          type: string
          x-go-name: CACertName
        chef_server_host_name:
          type: string
          x-go-name: ChefServerHostName
        chef_server_key:
          type: string
          x-go-name: ChefServerKey
        chef_server_port:
          type: string
          x-go-name: ChefServerPort
        chef_server_url:
          type: string
          x-go-name: ChefServerURL
        chef_server_username:
          type: string
          x-go-name: ChefServerUsername
        chef_skip_ssl:
          type: boolean
          x-go-name: ChefSkipSSL
        client_id:
          type: string
          x-go-name: ClientId
        client_secret:
          description: params needed for password auth
          type: string
          x-go-name: ClientSecret
        db_host_name:
          type: string
          x-go-name: DbHostName
        db_name:
          type: string
          x-go-name: DbName
        db_port:
          type: string
          x-go-name: DbPort
        db_private_key:
          description: (Optional) Private Key in PEM format
          type: string
          x-go-name: DbPrivateKey
        db_private_key_passphrase:
          type: string
          x-go-name: DbPrivateKeyPassphrase
        db_pwd:
          type: string
          x-go-name: DbPwd
        db_server_certificates:
          description: |-
            (Optional) DBServerCertificates defines the set of root certificate authorities
            that clients use when verifying server certificates.
            If DBServerCertificates is empty, TLS uses the host's root CA set.
          type: string
          x-go-name: DBServerCertificates
        db_server_name:
          description: |-
            (Optional) ServerName is used to verify the hostname on the returned
            certificates unless InsecureSkipVerify is given. It is also included
            in the client's handshake to support virtual hosting unless it is
            an IP address.
          type: string
          x-go-name: DBServerName
        db_user_name:
          type: string
          x-go-name: DbUserName
        eks_access_key_id:
          type: string
          x-go-name: EKSAccessID
        eks_cluster_ca_certificate:
          type: string
          x-go-name: EKSClusterCACertificate
        eks_cluster_endpoint:
          type: string
          x-go-name: EKSClusterEndpoint
        eks_cluster_name:
          type: string
          x-go-name: EKSClusterName
        eks_region:
          type: string
          x-go-name: EKSRegion
        eks_secret_access_key:
          type: string
          x-go-name: EKSSecretAccessKey
        gcp_service_account_email:
          description: deprecated
          type: string
          x-go-name: GCPServiceAccountEmail
        gcp_service_account_key:
          type: string
          x-go-name: GCPServiceAccountKey
        github_app_id:
          format: int64
          type: integer
          x-go-name: GithubAppId
        github_app_private_key:
          type: string
          x-go-name: GithubAppPrivateKey
        github_base_url:
          type: string
          x-go-name: GithubBaseURL
        gke_cluster_ca_certificate:
          type: string
          x-go-name: GKEClusterCACertificate
        gke_cluster_endpoint:
          type: string
          x-go-name: GKEClusterEndpoint
        gke_cluster_name:
          type: string
          x-go-name: GKEClusterName
        gke_service_account_key:
          type: string
          x-go-name: GKEServiceAccountKey
        gke_service_account_name:
          type: string
          x-go-name: GKEServiceAccountName
        host:
          type: string
          x-go-name: HostName
        implementation_type:
          type: string
          x-go-name: ImplementationType
        k8s_bearer_token:
          type: string
          x-go-name: K8sBearerToken
        k8s_cluster_ca_certificate:
          type: string
          x-go-name: K8sClusterCACertificate
        k8s_cluster_endpoint:
          type: string
          x-go-name: K8sClusterEndpoint
        ldap_audience:
          type: string
          x-go-name: Audience
        ldap_bind_dn:
          type: string
          x-go-name: BindDn
        ldap_bind_password:
          type: string
          x-go-name: BindPass
        ldap_certificate:
          type: string
          x-go-name: Certificate
        ldap_token_expiration:
          type: string
          x-go-name: TokenExpirationInSec
        ldap_url:
          type: string
          x-go-name: Url
        mongodb_atlas_api_private_key:
          type: string
          x-go-name: MongoDBAtlasAPIPrivateKey
        mongodb_atlas_api_public_key:
          type: string
          x-go-name: MongoDBAtlasAPIPublicKey
        mongodb_atlas_project_id:
          description: mongodb atlas fields
          type: string
          x-go-name: MongoDBAtlasProjectID
        mongodb_db_name:
          description: common fields
          type: string
          x-go-name: MongoDBName
        mongodb_default_auth_db:
          type: string
          x-go-name: MongoDBDefaultAuthDB
        mongodb_host_port:
          type: string
          x-go-name: MongoDBHostAndPort
        mongodb_is_atlas:
          type: boolean
          x-go-name: MongoDBAtlas
        mongodb_password:
          type: string
          x-go-name: MongoDBPassword
        mongodb_uri_connection:
          description: mongodb fields
          type: string
          x-go-name: MongoDBServerURI
        mongodb_uri_options:
          type: string
          x-go-name: MongoDBURIOptions
        mongodb_username:
          type: string
          x-go-name: MongoDBUsername
        password:
          type: string
          x-go-name: Password
        payload:
          type: string
          x-go-name: Payload
        ping_url:
          type: string
          x-go-name: PingURL
        port:
          type: string
          x-go-name: HostPort
        private_key:
          type: string
          x-go-name: SshPrivateKey
        private_key_password:
          type: string
          x-go-name: SshPrivateKeyPassword
        privileged_user:
          type: string
          x-go-name: PrivilegedUser
        rabbitmq_server_password:
          type: string
          x-go-name: RabbitmqServerPassword
        rabbitmq_server_uri:
          type: string
          x-go-name: RabbitmqServerURI
        rabbitmq_server_user:
          type: string
          x-go-name: RabbitmqServerUser
        security_token:
          type: string
          x-go-name: SecurityToken
        sf_account:
          type: string
          x-go-name: SnowflakeAccountName
        ssl_connection_certificate:
          description: (Optional) SSLConnectionCertificate defines the certificate
            for SSL connection. Must be base64 certificate loaded by UI using file
            loader field
          type: string
          x-go-name: SSLConnectionCertificate
        ssl_connection_mode:
          description: (Optional) SSLConnectionMode defines if SSL mode will be used
            to connect to DB
          type: boolean
          x-go-name: SSLConnectionMode
        tenant_url:
          type: string
          x-go-name: TenantUrl
        url:
          type: string
          x-go-name: URL
        use_gw_cloud_identity:
          type: boolean
          x-go-name: GCPUseDefaultIdentity
        user_name:
          type: string
          x-go-name: Username
        user_password:
          type: string
          x-go-name: UserPassword
        username:
          type: string
          x-go-name: AdminName
        venafi_api_key:
          type: string
          x-go-name: VenafiApiKey
        venafi_base_url:
          type: string
          x-go-name: VenafiBaseURL
        venafi_tpp_password:
          type: string
          x-go-name: VenafiTPPPassword
        venafi_tpp_username:
          type: string
          x-go-name: VenafiTPPUserName
        venafi_use_tpp:
          type: boolean
          x-go-name: VenafiUseTPP
        venafi_zone:
          type: string
          x-go-name: VenafiZone
      title: TargetTypeDetailsInput ...
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Tier:
      description: |-
        Tier represents a level of extensibility the account will have, defined by various limits for different
        resources of Akeyless
        e.g - A StarterTier may have a limit of 3 Client resources and 50 Secret resources
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    TmpUserData:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
        creation_date:
          format: date-time
          type: string
          x-go-name: CreationDate
        custom_ttl:
          format: int64
          type: integer
          x-go-name: CustomTtl
        dynamic_secret_type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer
        host:
          type: string
          x-go-name: Host
        id:
          type: string
          x-go-name: ID
        sub_claims:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: SubClaims
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/dynamicsecret/base
    TokenizerInfo:
      properties:
        vaultless_tokenizer_info:
          $ref: '#/components/schemas/VaultlessTokenizerInfo'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    TokenizerTemplateType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    TweakType:
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    UIDTokenDetails:
      properties:
        children:
          additionalProperties:
            $ref: '#/components/schemas/UIDTokenDetails'
          type: object
          x-go-name: Children
        comment:
          type: string
          x-go-name: Comment
        deny_inheritance:
          type: boolean
          x-go-name: DenyInheritance
        deny_rotate:
          type: boolean
          x-go-name: DenyRotate
        depth:
          format: uint16
          type: integer
          x-go-name: Depth
        expired_date:
          type: string
          x-go-name: ExpiredDate
        id:
          type: string
          x-go-name: ID
        last_rotate:
          type: string
          x-go-name: LastRotate
        revoked:
          type: boolean
          x-go-name: Revoked
        ttl:
          format: int32
          type: integer
          x-go-name: TTL
      title: UIDTokenDetails Universal identity type.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    UniversalIdentityAccessRules:
      properties:
        deny_inheritance:
          type: boolean
          x-go-name: DenyInheritance
        deny_rotate:
          type: boolean
          x-go-name: DenyRotate
        ttl:
          format: int32
          type: integer
          x-go-name: TTL
      title: UniversalIdentityAccessRules contains access rules specific to Universal
        Identity.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    UniversalIdentityDetails:
      properties:
        max_depth:
          format: uint16
          type: integer
          x-go-name: MaxDepth
        number_of_tokens:
          format: int64
          type: integer
          x-go-name: NumberOfTokens
        root:
          $ref: '#/components/schemas/UIDTokenDetails'
      title: UniversalIdentityDetails Universal identity type.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    UpdatePKICertIssuer:
      properties:
        add-tag:
          description: List of the new tags that will be attached to this item
          items:
            type: string
          type: array
          x-go-name: AddTags
        allow-any-name:
          description: If set, clients can request certificates for any CN
          type: boolean
          x-go-name: AllowAnyName
        allow-subdomains:
          description: |-
            If set, clients can request certificates for subdomains and wildcard
            subdomains of the allowed domains
          type: boolean
          x-go-name: AllowSubdomains
        allowed-domains:
          description: |-
            A list of the allowed domains that clients can request to be included in
            the certificate (in a comma-delimited list)
          type: string
          x-go-name: AllowedDomains
        allowed-uri-sans:
          description: |-
            A list of the allowed URIs that clients can request to be included in
            the certificate as part of the URI Subject Alternative Names (in a
            comma-delimited list)
          type: string
          x-go-name: AllowedURISANs
        client-flag:
          description: If set, certificates will be flagged for client auth use
          type: boolean
          x-go-name: ClientFlag
        code-signing-flag:
          description: If set, certificates will be flagged for code signing use
          type: boolean
          x-go-name: CodeSigningFlag
        country:
          description: |-
            A comma-separated list of the country that will be set in the issued
            certificate
          type: string
          x-go-name: Country
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-usage:
          default: DigitalSignature,KeyAgreement,KeyEncipherment
          description: key-usage
          type: string
          x-go-name: KeyUsage
        locality:
          description: |-
            A comma-separated list of the locality that will be set in the issued
            certificate
          type: string
          x-go-name: Locality
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: PKI certificate issuer name
          type: string
          x-go-name: IssuerName
        new-name:
          description: New item name
          type: string
          x-go-name: NewName
        not-enforce-hostnames:
          description: |-
            If set, any names are allowed for CN and SANs in the certificate and not
            only a valid host name
          type: boolean
          x-go-name: NotEnforceHostnames
        not-require-cn:
          description: If set, clients can request certificates without a CN
          type: boolean
          x-go-name: NotRequireCN
        organizational-units:
          description: |-
            A comma-separated list of organizational units (OU) that will be set in
            the issued certificate
          type: string
          x-go-name: OrganizationalUnits
        organizations:
          description: |-
            A comma-separated list of organizations (O) that will be set in the
            issued certificate
          type: string
          x-go-name: Organizations
        postal-code:
          description: |-
            A comma-separated list of the postal code that will be set in the issued
            certificate
          type: string
          x-go-name: PostalCode
        province:
          description: |-
            A comma-separated list of the province that will be set in the issued
            certificate
          type: string
          x-go-name: Province
        rm-tag:
          description: List of the existent tags that will be removed from this item
          items:
            type: string
          type: array
          x-go-name: RemoveTags
        server-flag:
          description: If set, certificates will be flagged for server auth use
          type: boolean
          x-go-name: ServerFlag
        signer-key-name:
          description: A key to sign the certificate with
          type: string
          x-go-name: SignerKeyName
        street-address:
          description: |-
            A comma-separated list of the street address that will be set in the
            issued certificate
          type: string
          x-go-name: StreetAddress
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: he requested Time To Live for the certificate, in seconds
          format: int64
          type: integer
          x-go-name: TTL
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - signer-key-name
      - ttl
      title: UpdatePKICertIssuer is a command that updates a new PKI certificate issuer.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    UpdateSecretValOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    VaultlessTokenizerInfo:
      properties:
        email_tokenizer_info:
          $ref: '#/components/schemas/EmailTokenizerInfo'
        key_name:
          type: string
          x-go-name: EncryptionKeyName
        regexp_tokenizer_info:
          $ref: '#/components/schemas/RegexpTokenizerInfo'
        template_type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        tweak:
          description: Tweak used in the case of internal tweak type
          type: string
          x-go-name: Tweak
        tweak_type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    VersionSettingsObjectType:
      description: VersionSettingsObjectType defines object types for account version
        settings
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    assocRoleAuthMethod:
      description: |-
        assocRoleAuthMethod is a command that creates an association between role
        and auth method.
      properties:
        am-name:
          description: The auth method to associate
          type: string
          x-go-name: AuthMethodName
        case-sensitive:
          type: string
          x-go-name: IsSubClaimsCaseSensitive
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        role-name:
          description: The role to associate
          type: string
          x-go-name: RoleName
        sub-claims:
          additionalProperties:
            type: string
          description: key/val of sub claims, e.g group=admins,developers
          type: object
          x-go-name: SubClaims
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - am-name
      - role-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    assocTargetItem:
      description: |-
        assocTargetItem is a command that creates an association between target
        and item.
      properties:
        disable-previous-key-version:
          description: Automatically disable previous key version (required for azure
            targets)
          type: boolean
          x-go-name: AutoDisablePreviousKeyVersion
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-operations:
          description: A list of allowed operations for the key (required for azure
            targets)
          items:
            type: string
          type: array
          x-go-name: KeyOperations
        keyring-name:
          description: Keyring name of the GCP KMS (required for gcp targets)
          type: string
          x-go-name: KeyringName
        kms-algorithm:
          description: Algorithm of the key in GCP KMS (required for gcp targets)
          type: string
          x-go-name: KMSAlgorithm
        location-id:
          description: Location id of the GCP KMS (required for gcp targets)
          type: string
          x-go-name: LocationId
        multi-region:
          default: "false"
          description: Set to 'true' to create a multi region managed key (relevant
            for aws targets)
          type: string
          x-go-name: MultiRegion
        name:
          description: The item to associate
          type: string
          x-go-name: ItemName
        project-id:
          description: Project id of the GCP KMS (required for gcp targets)
          type: string
          x-go-name: ProjectId
        purpose:
          description: Purpose of the key in GCP KMS (required for gcp targets)
          type: string
          x-go-name: Purpose
        regions:
          description: The list of regions to create a copy of the key in (relevant
            for aws targets)
          items:
            type: string
          type: array
          x-go-name: Regions
        target-name:
          description: The target to associate
          type: string
          x-go-name: TargetName
        tenant-secret-type:
          description: The tenant secret type [Data/SearchIndex/Analytics] (required
            for salesforce targets)
          type: string
          x-go-name: TenantSecretType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        vault-name:
          description: Name of the vault used (required for azure targets)
          type: string
          x-go-name: VaultName
      required:
      - name
      - target-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    auth:
      properties:
        access-id:
          description: Access ID
          type: string
          x-go-name: AccessID
        access-key:
          description: Access key (relevant only for access-type=access_key)
          type: string
          x-go-name: AccessKey
        access-type:
          default: access_key
          description: |-
            Access Type
            (access_key/password/saml/ldap/k8s/azure_ad/oidc/aws_iam/universal_identity/jwt/gcp/cert)
          type: string
          x-go-name: AccessType
        admin-email:
          description: Email (relevant only for access-type=password)
          type: string
          x-go-name: AdminEmail
        admin-password:
          description: Password (relevant only for access-type=password)
          type: string
          x-go-name: AdminPass
        cert-data:
          description: Certificate data encoded in base64. Used if file was not provided.
            (relevant only for access-type=cert)
          type: string
          x-go-name: CertData
        cloud-id:
          description: The cloud identity (relevant only for access-type=azure_ad,aws_iam,gcp)
          type: string
          x-go-name: CloudIdentity
        debug:
          type: boolean
          x-go-name: Debug
        gateway-url:
          description: Gateway URL for the K8S authenticated (relevant only for access-type=k8s)
          type: string
          x-go-name: GatewayURL
        gcp-audience:
          description: GCP JWT audience
          type: string
          x-go-name: GCPAudience
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt:
          description: The Json Web Token (relevant only for access-type=jwt/oidc)
          type: string
          x-go-name: JWT
        k8s-auth-config-name:
          description: The K8S Auth config name (relevant only for access-type=k8s)
          type: string
          x-go-name: K8SAuthConfigName
        k8s-service-account-token:
          description: The K8S service account token. (relevant only for access-type=k8s)
          type: string
          x-go-name: K8SServiceAccountToken
        key-data:
          description: Private key data encoded in base64. Used if file was not provided.(relevant
            only for access-type=cert)
          type: string
          x-go-name: KeyData
        ldap_password:
          description: LDAP password (relevant only for access-type=ldap)
          type: string
          x-go-name: LDAPPassword
        ldap_username:
          description: LDAP username (relevant only for access-type=ldap)
          type: string
          x-go-name: LDAPUsername
        uid_token:
          description: |-
            The universal_identity token (relevant only for
            access-type=universal_identity)
          type: string
          x-go-name: UIDToken
      title: auth is a command that creates temporary access credentials.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    clientData:
      properties:
        clientCertificateData:
          type: string
          x-go-name: ClientCertificateData
        clientKeyData:
          type: string
          x-go-name: ClientKeyData
        parentCertificateData:
          type: string
          x-go-name: ParentCertificateData
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    configure:
      properties:
        access-id:
          description: Access ID
          type: string
          x-go-name: AccessID
        access-key:
          description: Access Key
          type: string
          x-go-name: AccessKey
        access-type:
          default: access_key
          description: Access Type (access_key/password/azure_ad/saml/oidc/aws_iam/gcp/k8s)
          type: string
          x-go-name: AccessType
        admin-email:
          description: Email (relevant only for access-type=password)
          type: string
          x-go-name: AdminEmail
        admin-password:
          description: Password (relevant only for access-type=password)
          type: string
          x-go-name: AdminPass
        azure_ad_object_id:
          description: Azure Active Directory ObjectId (relevant only for access-type=azure_ad)
          type: string
          x-go-name: AzureAdObjectID
        cert-data:
          description: Certificate data encoded in base64. Used if file was not provided.
            (relevant only for access-type=cert in Curl Context)
          type: string
          x-go-name: CertData
        gcp-audience:
          description: GCP JWT audience
          type: string
          x-go-name: GCPAudience
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        k8s-auth-config-name:
          description: The K8S Auth config name (relevant only for access-type=k8s)
          type: string
          x-go-name: K8SAuthConfigName
        key-data:
          description: Private key data encoded in base64. Used if file was not provided.(relevant
            only for access-type=cert in Curl Context)
          type: string
          x-go-name: KeyData
      title: configure is a command that creates a new Akeyless profile.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    configureOutput:
      properties:
        profile:
          type: string
          x-go-name: Profile
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    connectOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAWSTarget:
      properties:
        access-key:
          type: string
          x-go-name: AWSSecretAccessKey
        access-key-id:
          type: string
          x-go-name: AWSAccessKeyID
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        region:
          type: string
          x-go-name: AWSRegion
        session-token:
          type: string
          x-go-name: AWSSessionToken
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        use-gw-cloud-identity:
          type: boolean
          x-go-name: AWSUseDefaultIdentity
      required:
      - name
      title: createAWSTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAWSTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createArtifactoryTarget:
      properties:
        artifactory-admin-name:
          description: Artifactory Admin Name
          type: string
          x-go-name: AdminName
        artifactory-admin-pwd:
          description: Artifactory Admin password
          type: string
          x-go-name: AdminPwd
        base-url:
          description: Base URL
          type: string
          x-go-name: BaseUrl
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - artifactory-admin-name
      - artifactory-admin-pwd
      - base-url
      - name
      title: createArtifactoryTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createArtifactoryTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethod:
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createAuthMethod is a command that creates a new auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodAWSIAM:
      description: |-
        createAuthMethodAWSIAM is a command that creates a new Auth Method that will
        be able to authenticate using AWS IAM credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-arn:
          description: A list of full arns that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundArn
        bound-aws-account-id:
          description: A list of AWS account-IDs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundAccountID
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-resource-id:
          description: A list of full resource ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundResourceID
        bound-role-id:
          description: A list of full role ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundRoleID
        bound-role-name:
          description: A list of full role-name that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundRoleName
        bound-user-id:
          description: A list of full user ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserID
        bound-user-name:
          description: A list of full user-name that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserName
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        sts-url:
          default: https://sts.amazonaws.com
          description: sts URL
          type: string
          x-go-name: STSEndpoint
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - bound-aws-account-id
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodAWSIAMOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodAzureAD:
      description: |-
        createAuthMethodAzureAD is a command that creates a new auth method that
        will be able to authenticate using Azure Active Directory credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          default: https://management.azure.com/
          description: The audience in the JWT
          type: string
          x-go-name: Audience
        bound-group-id:
          description: A list of group ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundGroupIDs
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-providers:
          description: |-
            A list of resource providers that the access is restricted to (e.g,
            Microsoft.Compute, Microsoft.ManagedIdentity, etc)
          items:
            type: string
          type: array
          x-go-name: BoundResourceProviders
        bound-resource-id:
          description: A list of full resource ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundResourceIds
        bound-resource-names:
          description: |-
            A list of resource names that the access is restricted to (e.g, a
            virtual machine name, scale set name, etc).
          items:
            type: string
          type: array
          x-go-name: BoundResourceNames
        bound-resource-types:
          description: |-
            A list of resource types that the access is restricted to (e.g,
            virtualMachines, userAssignedIdentities, etc)
          items:
            type: string
          type: array
          x-go-name: BoundResourceTypes
        bound-rg-id:
          description: A list of resource groups that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundResourceGroups
        bound-spid:
          description: A list of service principal IDs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: BoundServicePrincipalIDs
        bound-sub-id:
          description: A list of subscription ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundSubscriptionsIDs
        bound-tenant-id:
          description: The Azure tenant id that the access is restricted to
          type: string
          x-go-name: BoundTenantID
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        issuer:
          default: https://sts.windows.net/---bound_tenant_id---
          description: Issuer URL
          type: string
          x-go-name: Issuer
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwks-uri:
          default: https://login.microsoftonline.com/common/discovery/keys
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - bound-tenant-id
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodAzureADOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodCert:
      description: |-
        createAuthMethodCert is a command that creates a new auth method that
        will be able to authenticate using a client certificae
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-common-names:
          description: A list of names. At least one must exist in the Common Name.
            Supports globbing.
          items:
            type: string
          type: array
          x-go-name: BoundCommonNames
        bound-dns-sans:
          description: A list of DNS names. At least one must exist in the SANs. Supports
            globbing.
          items:
            type: string
          type: array
          x-go-name: BoundDnsSans
        bound-email-sans:
          description: A list of Email Addresses. At least one must exist in the SANs.
            Supports globbing.
          items:
            type: string
          type: array
          x-go-name: BoundEmailSans
        bound-extensions:
          description: A list of extensions formatted as "oid:value". Expects the
            extension value to be some type of ASN1 encoded string. All values much
            match. Supports globbing on "value".
          items:
            type: string
          type: array
          x-go-name: BoundExtensions
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-organizational-units:
          description: A list of Organizational Units names. At least one must exist
            in the OU field.
          items:
            type: string
          type: array
          x-go-name: BoundOrganizationalUnits
        bound-uri-sans:
          description: A list of URIs. At least one must exist in the SANs. Supports
            globbing.
          items:
            type: string
          type: array
          x-go-name: BoundUriSans
        certificate-data:
          description: The certificate data in base64, if no file was provided
          type: string
          x-go-name: CertificateData
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        revoked-cert-ids:
          description: A list of revoked cert ids
          items:
            type: string
          type: array
          x-go-name: RevokedCertIds
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured, such as common_name or organizational_unit
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - name
      - unique-identifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodCertOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodGCP:
      description: |-
        createAuthMethodGCP is a command that creates a new auth method that
        will be able to authenticate using GCP IAM Service Account credentials
        or GCE instance credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          default: akeyless.io
          description: The audience to verify in the JWT received by the client
          type: string
          x-go-name: Audience
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-labels:
          description: |-
            A comma-separated list of GCP labels formatted as "key:value" strings that must be set on authorized GCE instances.
            TODO: Because GCP labels are not currently ACL'd ....
          items:
            type: string
          type: array
          x-go-name: BoundLabels
        bound-projects:
          description: |-
            === Human and Machine authentication section ===
            Array of GCP project IDs. Only entities belonging to any of the provided projects can authenticate.
          items:
            type: string
          type: array
          x-go-name: BoundProjects
        bound-regions:
          description: |-
            List of regions that a GCE instance must belong to in order to be authenticated.
            TODO: If bound_instance_groups is provided, it is assumed to be a regional group and the group must belong to this region. If bound_zones are provided, this attribute is ignored.
          items:
            type: string
          type: array
          x-go-name: BoundRegions
        bound-service-accounts:
          description: List of service accounts the service account must be part of
            in order to be authenticated.
          items:
            type: string
          type: array
          x-go-name: BoundServiceAccounts
        bound-zones:
          description: |-
            === Machine authentication section ===
            List of zones that a GCE instance must belong to in order to be authenticated.
            TODO: If bound_instance_groups is provided, it is assumed to be a zonal group and the group must belong to this zone.
          items:
            type: string
          type: array
          x-go-name: BoundZones
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        service-account-creds-data:
          description: ServiceAccount credentials data instead of giving a file path,
            base64 encoded
          type: string
          x-go-name: ServiceAccountCredsFileData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: Type of the GCP Access Rules
          type: string
          x-go-name: Type
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - audience
      - name
      - type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodGCPOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodHuawei:
      description: |-
        createAuthMethodHuawei is a command that creates a new auth method that will
        be able to authenticate using Huawei credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        auth-url:
          default: https://iam.myhwclouds.com:443/v3
          description: sts URL
          type: string
          x-go-name: AuthEndpoint
        bound-domain-id:
          description: A list of domain IDs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundDomainID
        bound-domain-name:
          description: A list of domain names that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundDomainIDName
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-tenant-id:
          description: A list of full tenant ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundTenantID
        bound-tenant-name:
          description: A list of full tenant names that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundTenantName
        bound-user-id:
          description: A list of full user ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserID
        bound-user-name:
          description: A list of full user-name that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserName
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodHuaweiOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodK8S:
      description: |-
        createAuthMethodK8S is a command that creates a new auth method that will
        be able to authenticate using K8S.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          description: The audience in the Kubernetes JWT that the access is restricted
            to
          type: string
          x-go-name: Audience
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-namespaces:
          description: A list of namespaces that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundNamespaces
        bound-pod-names:
          description: A list of pod names that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundPodNames
        bound-sa-names:
          description: A list of service account names that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: BoundServiceAccountNames
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gen-key:
          default: "true"
          description: Automatically generate key-pair for K8S configuration. If set
            to false, a public key needs to be provided
          type: string
          x-go-name: GenerateKeyPair
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        public-key:
          description: Base64-encoded or PEM formatted public key data for K8S authentication
            method is required [RSA2048]
          type: string
          x-go-name: PublicKey
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodK8SOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
        prv_key:
          type: string
          x-go-name: PrivateKey
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodLDAP:
      description: |-
        createAuthMethodLDAP is a command that creates a new auth method that will
        be able to authenticate using LDAP.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gen-key:
          default: "true"
          description: Automatically generate key-pair for LDAP configuration. If
            set to false, a public key needs to be provided
          type: string
          x-go-name: GenerateKeyPair
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        public-key-data:
          description: |-
            A public key generated for LDAP authentication method on Akeyless in base64 or PEM format
            [RSA2048]
          type: string
          x-go-name: PublicKeyData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured for OAuth2,
            LDAP and SAML authentication method types and is usually a value such
            as the email, username, or upn for example.
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodLDAPOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
        prv_key:
          type: string
          x-go-name: PrivateKey
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodOAuth2:
      description: |-
        createAuthMethodOAuth2 is a command that creates a new auth method that will
        be able to authenticate using Oauth2.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          description: The audience in the JWT
          type: string
          x-go-name: Audience
        bound-client-ids:
          description: The clients ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundClientID
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwks-uri:
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured for OAuth2,
            LDAP and SAML authentication method types and is usually a value such
            as the email, username, or upn for example.
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - jwks-uri
      - name
      - unique-identifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodOAuth2Output:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodOIDC:
      description: |-
        createAuthMethodOIDC is a command that creates a new auth method that will
        be available to authenticate using OIDC.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        allowed-redirect-uri:
          description: Allowed redirect URIs after the authentication
          items:
            type: string
          type: array
          x-go-name: AllowedRedirectURIs
        audience:
          description: Audience claim to be used as part of the authentication flow.
            In case set, it must match the one configured on the Identity Provider's
            Application
          type: string
          x-go-name: Audience
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        client-id:
          description: Client ID
          type: string
          x-go-name: ClientID
        client-secret:
          description: Client Secret
          type: string
          x-go-name: ClientSecret
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        required-scopes:
          description: RequiredScopes is a list of required scopes that the oidc method
            will request from the oidc provider and the user must approve
          items:
            type: string
          type: array
          x-go-name: RequiredScopes
        required-scopes-prefix:
          description: RequiredScopesPrefix is a a prefix to add to all required-scopes
            when requesting them from the oidc server (for example, azures' Application
            ID URI)
          type: string
          x-go-name: RequiredScopesPrefix
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured for OIDC, OAuth2,
            LDAP and SAML authentication method types and is usually a value such
            as the email, username, or upn for example.
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - name
      - unique-identifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodOIDCOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
        access_key:
          type: string
          x-go-name: AccessKey
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodSAML:
      description: |-
        createAuthMethodSAML is a command that creates a new auth method that will
        be available to authenticate using SAML.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        allowed-redirect-uri:
          description: Allowed redirect URIs after the authentication
          items:
            type: string
          type: array
          x-go-name: AllowedRedirectURIs
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        idp-metadata-url:
          description: IDP metadata url
          type: string
          x-go-name: IDPMetadataURL
        idp-metadata-xml-data:
          description: IDP metadata xml data
          type: string
          x-go-name: IDPMetadataXMLData
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured for OAuth2,
            LDAP and SAML authentication method types and is usually a value such
            as the email, username, or upn for example.
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - name
      - unique-identifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodSAMLOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodUniversalIdentity:
      description: |-
        createAuthMethodUniversalIdentity is a command that creates a new auth
        method that will be able to authenticate using Akeyless Universal Identity.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        deny-inheritance:
          description: Deny from root to create children
          type: boolean
          x-go-name: BoundDenyInheritance
        deny-rotate:
          description: Deny from the token to rotate
          type: boolean
          x-go-name: BoundDenyRotate
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          default: 60
          description: Token ttl
          format: int32
          type: integer
          x-go-name: BoundTTL
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodUniversalIdentityOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAzureTarget:
      properties:
        client-id:
          type: string
          x-go-name: AzureClientID
        client-secret:
          type: string
          x-go-name: AzureClientSecret
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        resource-group-name:
          description: The Resource Group name in your Azure subscription
          type: string
          x-go-name: AzureResourceGroupName
        resource-name:
          description: The name of the relevant Resource
          type: string
          x-go-name: AzureResourceName
        subscription-id:
          description: Azure Subscription Id
          type: string
          x-go-name: AzureSubscriptionId
        tenant-id:
          type: string
          x-go-name: AzureTenantID
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        use-gw-cloud-identity:
          type: boolean
          x-go-name: AzureUseDefaultIdentity
      required:
      - name
      title: createAzureTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAzureTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createCertificate:
      properties:
        certificate-data:
          description: Content of the certificate PEM in a Base64 format.
          type: string
          x-go-name: CertificateData
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        expiration-event-in:
          description: How many days before the expiration of the certificate would
            you like to be notified.
          items:
            type: string
          type: array
          x-go-name: ExpirationEventsInDays
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key to use to encrypt the certificate's key (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        key-data:
          description: Content of the certificate's private key PEM in a Base64 format.
          type: string
          x-go-name: PrivateKeyData
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: Certificate name
          type: string
          x-go-name: CertificateName
        tags:
          description: List of the tags attached to this certificate
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createCertificate is a command that creates a certificate.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createCertificateOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDBTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        db-name:
          type: string
          x-go-name: DbName
        db-server-certificates:
          description: (Optional) DB server certificates
          type: string
          x-go-name: DBServerCertificates
        db-server-name:
          description: (Optional) Server name for certificate verification
          type: string
          x-go-name: DBServerName
        db-type:
          title: TargetType ..
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        host:
          type: string
          x-go-name: DbHostName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        mongodb-atlas:
          type: boolean
          x-go-name: MongoDBAtlas
        mongodb-atlas-api-private-key:
          description: MongoDB Atlas private key
          type: string
          x-go-name: MongoAPIPrivateKey
        mongodb-atlas-api-public-key:
          description: MongoDB Atlas public key
          type: string
          x-go-name: MongoAPIPublicKey
        mongodb-atlas-project-id:
          description: MongoDB Atlas project ID
          type: string
          x-go-name: MongoProjectID
        mongodb-default-auth-db:
          description: MongoDB server default authentication database
          type: string
          x-go-name: MongoDefaultAuthDB
        mongodb-uri-options:
          description: MongoDB server URI options
          type: string
          x-go-name: MongoURIOptions
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        oracle-service-name:
          type: string
          x-go-name: OracleServiceName
        port:
          type: string
          x-go-name: DbPort
        pwd:
          type: string
          x-go-name: DbPwd
        snowflake-account:
          type: string
          x-go-name: SnowflakeAccount
        snowflake-api-private-key:
          description: RSA Private key (base64 encoded)
          type: string
          x-go-name: SnowflakeAPIPrivateKey
        snowflake-api-private-key-password:
          description: The Private key passphrase
          type: string
          x-go-name: SnowflakeAPIPrivateKeyPass
        ssl:
          description: SSL connection mode
          type: boolean
          x-go-name: SSLConnection
        ssl-certificate:
          description: SSL connection certificate
          type: string
          x-go-name: SSLConnectionCertificate
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-name:
          type: string
          x-go-name: DbUserName
      required:
      - db-type
      - name
      title: createDBTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDBTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDFCKey:
      properties:
        alg:
          description: |-
            DFCKey type; options: [AES128GCM, AES256GCM, AES128SIV, AES256SIV, AES128CBC, AES256CBC, RSA1024,
            RSA2048, RSA3072, RSA4096]
          type: string
          x-go-name: Alg
        customer-frg-id:
          description: The customer fragment ID that will be used to create the DFC
            key (if empty, the key will be created independently of a customer fragment)
          type: string
          x-go-name: CustomerFragmentID
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: DFCKey name
          type: string
          x-go-name: DFCKeyName
        split-level:
          default: 3
          description: |-
            The number of fragments that the item will be split into (not includes
            customer fragment)
          format: int64
          type: integer
          x-go-name: SplitLevel
        tag:
          description: List of the tags attached to this DFC key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - alg
      - name
      title: createDFCKey is a command that creates a new DFC key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDFCKeyOutput:
      properties:
        fragment_results:
          items:
            $ref: '#/components/schemas/Duration'
          type: array
          x-go-name: FragmentResults
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDockerhubTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        dockerhub-password:
          description: DockerhubPassword is either the user's password to manage the
            repository
          type: string
          x-go-name: DockerhubPassword
        dockerhub-username:
          description: DockerhubUsername is the name of the user in dockerhub
          type: string
          x-go-name: DockerhubUsername
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createDockerhubTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDockerhubTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDynamicSecret:
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the dynamic secret values (if
            empty, the account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: Dynamic secret name
          type: string
          x-go-name: DynamicSecretName
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createDynamicSecret is a command that creates a new dynamic secret item.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDynamicSecretOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createEKSTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        eks-access-key-id:
          description: Access Key ID
          type: string
          x-go-name: AccessId
        eks-cluster-ca-cert:
          description: EKS cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        eks-cluster-endpoint:
          description: EKS cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        eks-cluster-name:
          description: EKS cluster name
          type: string
          x-go-name: ClusterName
        eks-region:
          default: us-east-2
          description: Region
          type: string
          x-go-name: Region
        eks-secret-access-key:
          description: Secret Access Key
          type: string
          x-go-name: AccessKey
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        use-gw-cloud-identity:
          type: boolean
          x-go-name: UseDefaultIdentity
      required:
      - eks-access-key-id
      - eks-cluster-ca-cert
      - eks-cluster-endpoint
      - eks-cluster-name
      - eks-secret-access-key
      - name
      title: createEKSTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createEKSTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createEventForwarder:
      properties:
        admin-name:
          description: Workstation Admin Name
          type: string
          x-go-name: AdminName
        admin-pwd:
          description: Workstation Admin password
          type: string
          x-go-name: AdminPwd
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        email-to:
          description: A comma seperated list of email addresses to send event to
            (relevant only for \"email\" Event Forwarder)
          type: string
          x-go-name: EmailTo
        event-source-locations:
          description: Event sources
          items:
            type: string
          type: array
          x-go-name: EventSources
        event-source-type:
          default: item
          description: Event Source type [item, target]
          type: string
          x-go-name: EventSourceType
        event-types:
          description: Event types
          items:
            type: string
          type: array
          x-go-name: EventTypes
        every:
          description: Rate of periodic runner repetition in hours
          type: string
          x-go-name: RunEvery
        forwarder-type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        host:
          description: Workstation Host
          type: string
          x-go-name: Host
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: The name of a key that used to encrypt the EventForwarder secret
            value (if empty, the account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: EventForwarder name
          type: string
          x-go-name: EventForwarderName
        runner-type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - event-source-locations
      - forwarder-type
      - name
      - runner-type
      title: createEventForwarder is a command that creates a new event forwarder.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createEventForwarderOutput:
      properties:
        event_forwarder_id:
          format: int64
          type: integer
          x-go-name: EventForwarderID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createGKETarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        gke-account-key:
          description: GKE Service Account key file path
          type: string
          x-go-name: ServiceAccountKey
        gke-cluster-cert:
          description: GKE cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        gke-cluster-endpoint:
          description: GKE cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        gke-cluster-name:
          description: GKE cluster name
          type: string
          x-go-name: ClusterName
        gke-service-account-email:
          description: GKE service account email
          type: string
          x-go-name: ServiceAccountEmail
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        use-gw-cloud-identity:
          type: boolean
          x-go-name: UseDefaultIdentity
      required:
      - name
      title: createGKETarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createGKETargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createGcpTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        gcp-key:
          description: Base64-encoded service account private key text
          type: string
          x-go-name: ServiceAccountKey
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        use-gw-cloud-identity:
          type: boolean
          x-go-name: GCPUseDefaultIdentity
      required:
      - name
      title: createGcpTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createGcpTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createGithubTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        github-app-id:
          description: Github app id
          format: int64
          type: integer
          x-go-name: AppId
        github-app-private-key:
          description: App private key
          type: string
          x-go-name: AppPrivateKey
        github-base-url:
          description: Base URL
          type: string
          x-go-name: BaseUrl
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createGithubTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createGithubTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createKey:
      description: 'createKey is a command that creates a new key. [Deprecated: Use
        command create-dfc-key]'
      properties:
        alg:
          description: |-
            Key type; options: [AES128GCM, AES256GCM, AES128SIV, AES256SIV, AES128CBC, AES256CBC, RSA1024,
            RSA2048, RSA3072, RSA4096]
          type: string
          x-go-name: Alg
        customer-frg-id:
          description: |-
            The customer fragment ID that will be used to create the key (if empty,
            the key will be created independently of a customer fragment)
          type: string
          x-go-name: CustomerFragmentID
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: Key name
          type: string
          x-go-name: KeyName
        split-level:
          default: 2
          description: |-
            The number of fragments that the item will be split into (not includes
            customer fragment)
          format: int64
          type: integer
          x-go-name: SplitLevel
        tag:
          description: List of the tags attached to this key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - alg
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createKeyOutput:
      properties:
        display_id:
          type: string
          x-go-name: DisplayId
        fragment_results:
          items:
            $ref: '#/components/schemas/Duration'
          type: array
          x-go-name: FragmentResults
        item_id:
          format: int64
          type: integer
          x-go-name: ItemId
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createLdapTarget:
      properties:
        bind-dn:
          description: Bind DN
          type: string
          x-go-name: BindDn
        bind-dn-password:
          description: Bind DN Password
          type: string
          x-go-name: BindDnPassword
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        ldap-ca-cert:
          description: CA Certificate File Content
          type: string
          x-go-name: LdapCACert
        ldap-url:
          description: LDAP Server URL
          type: string
          x-go-name: LdapUrl
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        server-type:
          default: OpenLDAP
          description: Set Ldap server type, Options:[OpenLDAP, ActiveDirectory].
            Default is OpenLDAP
          type: string
          x-go-name: ServerType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        token-expiration:
          description: Token expiration
          type: string
          x-go-name: TokenExpiration
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - bind-dn
      - bind-dn-password
      - ldap-url
      - name
      title: createldapTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createLdapTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createNativeK8STarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        k8s-cluster-ca-cert:
          description: K8S cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        k8s-cluster-endpoint:
          description: K8S cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        k8s-cluster-token:
          description: K8S cluster Bearer token
          type: string
          x-go-name: ClusterBearerToken
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - k8s-cluster-ca-cert
      - k8s-cluster-endpoint
      - k8s-cluster-token
      - name
      title: createNativeK8STarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createNativeK8STargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createPKICertIssuerOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createPingTarget:
      properties:
        administrative-port:
          default: "9999"
          description: Ping Federate administrative port
          type: string
          x-go-name: AdministrativePort
        authorization-port:
          default: "9031"
          description: Ping Federate authorization port
          type: string
          x-go-name: AuthorizationPort
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        password:
          description: Ping Federate privileged user password
          type: string
          x-go-name: UserPassword
        ping-url:
          description: Ping URL
          type: string
          x-go-name: PingURL
        privileged-user:
          description: Ping Federate privileged user
          type: string
          x-go-name: PrivilegedUser
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createPingTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createPingTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createRabbitMQTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        rabbitmq-server-password:
          type: string
          x-go-name: RabbitmqServerPassword
        rabbitmq-server-uri:
          type: string
          x-go-name: RabbitmqServerURI
        rabbitmq-server-user:
          type: string
          x-go-name: RabbitmqServerUser
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createRabbitMQTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createRabbitMQTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createRole:
      properties:
        analytics-access:
          description: |-
            Allow this role to view analytics. Currently only 'none', 'own', 'all'
            values are supported, allowing associated auth methods to view reports
            produced by the same auth methods.
          type: string
          x-go-name: AnalyticsAccess
        audit-access:
          description: |-
            Allow this role to view audit logs. Currently only 'none', 'own' and 'all'
            values are supported, allowing associated auth methods to view audit
            logs produced by the same auth methods.
          type: string
          x-go-name: AuditAccess
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        gw-analytics-access:
          description: |-
            Allow this role to view gw analytics. Currently only 'none', 'own', 'all'
            values are supported, allowing associated auth methods to view reports
            produced by the same auth methods.
          type: string
          x-go-name: GwAnalyticsAccess
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Role name
          type: string
          x-go-name: RoleName
        sra-reports-access:
          description: |-
            Allow this role to view SRA Clusters. Currently only 'none', 'own',
            'all' values are supported.
          type: string
          x-go-name: SRAReportsAccess
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createRole is a command that creates a new role .
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createRoleOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createRotatedSecret:
      properties:
        api-id:
          type: string
          x-go-name: ApiId
        api-key:
          type: string
          x-go-name: ApiKey
        application-id:
          description: ApplicationId (used in azure)
          type: string
          x-go-name: ApplicationId
        authentication-credentials:
          type: string
          x-go-name: RotatorCredsType
        auto-rotate:
          description: |-
            Whether to automatically rotate every --rotation-interval days, or
            disable existing automatic rotation
          type: string
          x-go-name: AutoRotate
        aws-region:
          default: us-east-2
          description: Region (used in aws)
          type: string
          x-go-name: AwsRegion
        custom-payload:
          type: string
          x-go-name: Payload
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        gcp-key:
          description: Base64-encoded service account private key text
          type: string
          x-go-name: ServiceAccountKey
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: Secret name
          type: string
          x-go-name: SecretName
        rotate-after-disconnect:
          default: "false"
          description: Rotate the value of the secret after SRA session ends
          type: string
          x-go-name: RotateAfterDisconnect
        rotated-password:
          type: string
          x-go-name: RotatedPassword
        rotated-username:
          type: string
          x-go-name: RotatedUser
        rotation-hour:
          format: int32
          type: integer
          x-go-name: RotationHour
        rotation-interval:
          description: The number of days to wait between every automatic key rotation
            (1-365)
          type: string
          x-go-name: RotationInterval
        rotator-creds-type:
          type: string
          x-go-name: RotatorCredsTypeBC
        rotator-custom-cmd:
          type: string
          x-go-name: RotatorCustomCmd
        rotator-type:
          description: Rotator Type
          type: string
          x-go-name: RotatorType
        secure-access-allow-external-user:
          default: false
          description: Secure Access Allow Providing External User (used in ssh)
          type: boolean
          x-go-name: SecureAccessAllowProvidingExternalUser
        secure-access-aws-account-id:
          description: Secure Access Account Id (used in aws)
          type: string
          x-go-name: SecureAccessAccountId
        secure-access-aws-native-cli:
          description: Secure Access Aws Native Cli (used in aws)
          type: boolean
          x-go-name: SecureAccessAwsNativeCli
        secure-access-bastion-issuer:
          description: Secure Access Bastion Issuer
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-db-name:
          description: Secure Access DB Name (used in data bases)
          type: string
          x-go-name: SecureAccessDBName
        secure-access-db-schema:
          description: Secure Access Schema (used in mssql, postgresql)
          type: string
          x-go-name: SecureAccessSchema
        secure-access-enable:
          description: Secure Access Enabled
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          description: Secure Access Host
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-rdp-domain:
          description: Secure Access Domain (used in ssh)
          type: string
          x-go-name: SecureAccessDomain
        secure-access-rdp-user:
          description: Secure Access Override User (used in ssh)
          type: string
          x-go-name: SecureAccessOverrideUser
        secure-access-web:
          default: false
          description: Secure Access Web
          type: boolean
          x-go-name: SecureAccessWeb
        secure-access-web-browsing:
          default: false
          description: Secure Access Isolated (used in aws, azure)
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          default: false
          description: Secure Access Web Proxy (used in aws, azure)
          type: boolean
          x-go-name: SecureAccessWebProxy
        ssh-password:
          description: 'Deprecated: use RotatedPassword'
          type: string
          x-go-name: SshPassword
        ssh-username:
          description: 'Deprecated: use RotatedUser'
          type: string
          x-go-name: SshUser
        storage-account-key-name:
          description: The name of the storage account key to rotate [key1/key2/kerb1/kerb2]
            (relevat to azure-storage-account)
          type: string
          x-go-name: StorageKeyName
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-attribute:
          description: LDAP User Attribute, Default value "cn"
          type: string
          x-go-name: UserAttribute
        user-dn:
          description: LDAP User Base DN
          type: string
          x-go-name: UserDn
      required:
      - name
      - rotator-type
      - target-name
      title: createRotatedSecret is a command that creates a rotated secret.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSSHCertIssuer:
      properties:
        allowed-users:
          description: Users allowed to fetch the certificate, e.g root,ubuntu
          type: string
          x-go-name: AllowedUsers
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        extensions:
          additionalProperties:
            type: string
          description: Signed certificates with extensions, e.g permit-port-forwarding=\"\"
          type: object
          x-go-name: Extensions
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: SSH certificate issuer name
          type: string
          x-go-name: IssuerName
        principals:
          description: Signed certificates with principal, e.g example_role1,example_role2
          type: string
          x-go-name: Principals
        secure-access-bastion-api:
          type: string
          x-go-name: SecureAccessBastionAPI
        secure-access-bastion-ssh:
          type: string
          x-go-name: SecureAccessBastionSSH
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-ssh-creds-user:
          type: string
          x-go-name: SecureAccessSSHUser
        secure-access-use-internal-bastion:
          type: boolean
          x-go-name: SecureAccessUseInternalBastion
        signer-key-name:
          description: A key to sign the certificate with
          type: string
          x-go-name: SignerKeyName
        tag:
          description: List of the tags attached to this key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: The requested Time To Live for the certificate, in seconds
          format: int64
          type: integer
          x-go-name: TTL
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - allowed-users
      - name
      - signer-key-name
      - ttl
      title: createSSHCertIssuer is a command that creates a new SSH certificate issuer.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSSHCertIssuerOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSSHTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        host:
          type: string
          x-go-name: HostName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        port:
          type: string
          x-go-name: HostPort
        private-key:
          type: string
          x-go-name: PrivateKey
        private-key-password:
          type: string
          x-go-name: PrivateKeyPassword
        ssh-password:
          type: string
          x-go-name: SshPassword
        ssh-username:
          type: string
          x-go-name: SshUser
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createSSHTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSSHTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSalesforceTarget:
      properties:
        app-private-key-data:
          description: Base64 encoded PEM of the connected app private key (relevant
            for JWT auth only)
          type: string
          x-go-name: AppPrivateKeyData
        auth-flow:
          description: type of the auth flow ('jwt' / 'user-password')
          type: string
          x-go-name: AuthFlowType
        ca-cert-data:
          description: Base64 encoded PEM cert to use when uploading a new key to
            Salesforce
          type: string
          x-go-name: CACertData
        ca-cert-name:
          description: name of the certificate in Salesforce tenant to use when uploading
            new key
          type: string
          x-go-name: CACertName
        client-id:
          description: Client ID of the oauth2 app to use for connecting to Salesforce
          type: string
          x-go-name: ClientId
        client-secret:
          description: Client secret of the oauth2 app to use for connecting to Salesforce
            (required for password flow)
          type: string
          x-go-name: ClientSecret
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        email:
          description: The email of the user attached to the oauth2 app used for connecting
            to Salesforce
          type: string
          x-go-name: Email
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        password:
          description: The password of the user attached to the oauth2 app used for
            connecting to Salesforce (required for user-password flow)
          type: string
          x-go-name: Password
        security-token:
          description: The security token of the user attached to the oauth2 app used
            for connecting to Salesforce  (required for user-password flow)
          type: string
          x-go-name: SecurityToken
        tenant-url:
          description: Url of the Salesforce tenant
          type: string
          x-go-name: TenantUrl
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - auth-flow
      - client-id
      - email
      - name
      - tenant-url
      title: createSalesforceTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSalesforceTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSecret:
      properties:
        accessibility:
          default: regular
          description: for personal password manager
          type: string
          x-go-name: ItemAccessibilityString
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        multiline_value:
          description: The provided value is a multiline value (separated by '\n')
          type: boolean
          x-go-name: MultilineValue
        name:
          description: Secret name
          type: string
          x-go-name: SecretName
        password-manager-custom-field:
          additionalProperties:
            type: string
          description: For Password Management use, additional fields
          type: object
          x-go-name: CustomFields
        password-manager-inject-url:
          description: For Password Management use, reflect the website context
          items:
            type: string
          type: array
          x-go-name: Websites
        password-manager-password:
          description: For Password Management use, additional fields
          type: string
          x-go-name: Password
        password-manager-username:
          description: For Password Management use
          type: string
          x-go-name: Username
        protection_key:
          description: |-
            The name of a key that used to encrypt the secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-ssh-creds:
          type: string
          x-go-name: SecureAccessSSHCategory
        secure-access-ssh-user:
          type: string
          x-go-name: SecureAccessSSHUser
        secure-access-url:
          type: string
          x-go-name: SecureAccessURL
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: For Password Management use, reflect the website context
          type: string
          x-go-name: SecretType
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        value:
          description: The secret value
          type: string
          x-go-name: Value
      required:
      - name
      - value
      title: createSecret is a command that creates a static secret.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createTokenizer:
      description: createTokenizer is a command that creates a tokenizer item
      properties:
        alphabet:
          description: Alphabet to use in regexp vaultless tokenization
          type: string
          x-go-name: Alphabet
        decoding-template:
          description: The Decoding output template to use in regexp vaultless tokenization
          type: string
          x-go-name: DecodingTemplate
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        encoding-template:
          description: The Encoding output template to use in regexp vaultless tokenization
          type: string
          x-go-name: EncodingTemplate
        encryption-key-name:
          description: AES key name to use in vaultless tokenization
          type: string
          x-go-name: EncryptionKeyName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: Tokenizer name
          type: string
          x-go-name: TokenizerName
        pattern:
          description: Pattern to use in regexp vaultless tokenization
          type: string
          x-go-name: Pattern
        tag:
          description: List of the tags attached to this key
          items:
            type: string
          type: array
          x-go-name: Tags
        template-type:
          description: Which template type this tokenizer is used for [SSN,CreditCard,USPhoneNumber,Email,Regexp]
          type: string
          x-go-name: TemplateType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        tokenizer-type:
          description: Tokenizer type
          type: string
          x-go-name: TokenizerType
        tweak-type:
          description: The tweak type to use in vaultless tokenization [Supplied,
            Generated, Internal, Masking]
          type: string
          x-go-name: TweakType
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - template-type
      - tokenizer-type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createTokenizerOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createWebTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        url:
          description: The url
          type: string
          x-go-name: URL
      required:
      - name
      title: createWebTarget is a command that creates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createWebTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decrypt:
      description: |-
        decrypt is a command that decrypts ciphertext into plaintext by using an AES
        key.
      properties:
        ciphertext:
          description: Ciphertext to be decrypted in base64 encoded format
          type: string
          x-go-name: Ciphertext
        display-id:
          description: The display id of the key to use in the decryption process
          type: string
          x-go-name: DisplayId
        encryption-context:
          additionalProperties:
            type: string
          description: |-
            The encryption context. If this was specified in the encrypt command, it
            must be specified here or the decryption operation will fail
          type: object
          x-go-name: EncContext
        item-id:
          description: The item id of the key to use in the decryption process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the key to use in the decryption process
          type: string
          x-go-name: KeyName
        output-format:
          description: 'If specified, the output will be formatted accordingly. options:
            [base64]'
          type: string
          x-go-name: OutputFormat
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptFile:
      properties:
        display-id:
          description: The display id of the key to use in the decryption process
          type: string
          x-go-name: DisplayId
        item-id:
          description: The item id of the key to use in the decryption process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the key to use in the decryption process
          type: string
          x-go-name: KeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      title: decryptFile is a command that decrypts a file using an AES key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptFileOutput:
      properties:
        path:
          type: string
          x-go-name: Path
        plain_text:
          type: string
          x-go-name: PlainText
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptGPG:
      properties:
        ciphertext:
          description: Ciphertext to be decrypted in base64 encoded format
          type: string
          x-go-name: Ciphertext
        display-id:
          description: The display id of the key to use in the decryption process
          type: string
          x-go-name: DisplayId
        item-id:
          description: The item id of the key to use in the decryption process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the key to use in the decryption process
          type: string
          x-go-name: KeyName
        output-format:
          description: 'If specified, the output will be formatted accordingly. options:
            [base64]'
          type: string
          x-go-name: OutputFormat
        passphrase:
          description: Passphrase that was used to generate the key
          type: string
          x-go-name: Passphrase
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - ciphertext
      - key-name
      title: decryptGPG is a command that decrypts GPG cipher text based on RSA key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptGPGOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptPKCS1:
      properties:
        ciphertext:
          description: Ciphertext to be decrypted in base64 encoded format
          type: string
          x-go-name: Ciphertext
        display-id:
          description: The display id of the key to use in the decryption process
          type: string
          x-go-name: DisplayId
        item-id:
          description: The item id of the key to use in the decryption process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the key to use in the decryption process
          type: string
          x-go-name: KeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - ciphertext
      - key-name
      title: decryptPKCS1 is a command that decrypts plaintext using RSA and the padding
        scheme from PKCS#1 v1.5.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptPKCS1Output:
      properties:
        plaintext:
          type: string
          x-go-name: Plaintext
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptWithClassicKey:
      properties:
        ciphertext:
          description: Ciphertext to be decrypted in base64 encoded format
          type: string
          x-go-name: Ciphertext
        display-id:
          description: The name of the key to use in the encryption process
          type: string
          x-go-name: DisplayId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: classic key version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - ciphertext
      - display-id
      - version
      title: decryptWithClassicKey is a command that decryptWithClassicKeys ciphertext
        into plaintext by using a classic key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptWithClassicKeyOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteAuthMethod:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: deleteAuthMethod is a command that deletes the auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteAuthMethodOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteAuthMethods:
      description: |-
        deleteAuthMethods is a command that deletes multiple auth methods from a
        given path.
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        path:
          description: Path to delete the auth methods from
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteAuthMethodsOutput:
      properties:
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteEventForwarder:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: EventForwarder name
          type: string
          x-go-name: EventForwarderName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: deleteEventForwarder is a command that creates a new event forwarder.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteEventForwarderOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteItem:
      properties:
        accessibility:
          default: regular
          description: for personal password manager
          type: string
          x-go-name: ItemAccessibilityString
        delete-immediately:
          default: false
          description: When delete-in-days=-1, must be set
          type: boolean
          x-go-name: DeleteImmediately
        delete-in-days:
          default: 7
          description: |-
            The number of days to wait before deleting the item (relevant for keys
            only)
          format: int64
          type: integer
          x-go-name: DeleteInDays
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Item name
          type: string
          x-go-name: ItemName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          default: -1
          description: |-
            The specific version you want to delete - 0=last version, -1=entire item
            with all versions (default)
          format: int32
          type: integer
          x-go-name: Version
      required:
      - name
      title: deleteItem is a command that deletes an item from Akeyless.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteItems:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        path:
          description: Path to delete the items from
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      title: deleteItems is a command that deletes multiple items from a given path.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteItemsOutput:
      properties:
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRole:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Role name
          type: string
          x-go-name: RoleName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: deleteRole is a command that deletes a role.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleAssociation:
      description: |-
        deleteRoleAssociation is a command that deletes an association between role
        and auth method.
      properties:
        assoc-id:
          description: The association id to be deleted
          type: string
          x-go-name: AssocID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - assoc-id
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleAssociationOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleRule:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        path:
          description: The path the rule refers to
          type: string
          x-go-name: Path
        role-name:
          description: The role name to be updated
          type: string
          x-go-name: RoleName
        rule-type:
          default: item-rule
          description: item-rule, role-rule, auth-method-rule, search-rule, reports-rule,
            gw-reports-rule or sra-reports-rule
          type: string
          x-go-name: RuleType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      - role-name
      title: deleteRoleRule is a command that deletes a rule from a role.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleRuleOutput:
      properties:
        deleted:
          type: boolean
          x-go-name: Deleted
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoles:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        path:
          description: Path to delete the auth methods from
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      title: deleteRoles is a command that deletes multiple roles from a given path.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRolesOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteTarget:
      properties:
        force-deletion:
          default: false
          description: Enforce deletion
          type: boolean
          x-go-name: ForceDeletion
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        target-version:
          description: Target version
          format: int32
          type: integer
          x-go-name: TargetVersion
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: deleteTarget is a command that deletes a target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteTargetAssociation:
      description: |-
        deleteTargetAssociation is a command that deletes an association between target
        and item.
      properties:
        assoc-id:
          description: The association id to be deleted
          type: string
          x-go-name: AssocID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Item name
          type: string
          x-go-name: ItemName
        target-name:
          description: The target to associate
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteTargetAssociationOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteTargetOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteTargets:
      properties:
        force-deletion:
          default: false
          description: Enforce deletion
          type: boolean
          x-go-name: ForceDeletion
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        path:
          description: Path to delete the targets from
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      title: deleteTargets is a command that deletes multiple targets from a given
        path.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteTargetsOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    describeItem:
      properties:
        display-id:
          description: The display id of the item
          type: string
          x-go-name: DisplayId
        item-id:
          description: Item id of the item
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Item name
          type: string
          x-go-name: ItemName
        show-versions:
          default: false
          description: Include all item versions in reply
          type: boolean
          x-go-name: ShowVersions
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: describeItem is a command that returns a single item.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    describePermissions:
      description: |-
        describePermissions is a command that shows which permissions your have to a
        particular path.
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        path:
          description: Path to an object
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: Type of object (item, am, role, target)
          type: string
          x-go-name: Type
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      - type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    describeSubClaims:
      description: describe-sub-claims Get the sub-claims associated with the provided
        token or authentication profile
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    describeSubClaimsOutput:
      properties:
        sub_claims:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: SubClaims
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    detokenize:
      description: detokenize is a command that decrypts text with a tokenizer
      properties:
        ciphertext:
          description: Data to be decrypted
          type: string
          x-go-name: Ciphertext
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        tokenizer-name:
          description: The name of the tokenizer to use in the decryption process
          type: string
          x-go-name: TokenizerName
        tweak:
          description: Base64 encoded tweak for vaultless encryption
          type: string
          x-go-name: Tweak
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - ciphertext
      - tokenizer-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    detokenizeOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encrypt:
      properties:
        display-id:
          description: The display id of the key to use in the encryption process
          type: string
          x-go-name: DisplayId
        encryption-context:
          additionalProperties:
            type: string
          description: |-
            name-value pair that specifies the encryption context to be used for
            authenticated encryption. If used here, the same value must be supplied
            to the decrypt command or decryption will fail
          type: object
          x-go-name: EncContext
        input-format:
          description: 'If specified, the plaintext input is assumed to be formatted
            accordingly. Current supported options: [base64]'
          type: string
          x-go-name: InputFormat
        item-id:
          description: The item id of the key to use in the encryption process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the key to use in the encryption process
          type: string
          x-go-name: KeyName
        plaintext:
          description: Data to be encrypted
          type: string
          x-go-name: Plaintext
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      title: encrypt is a command that encrypts plaintext into ciphertext by using
        an AES key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptFile:
      properties:
        display-id:
          description: The display id of the key to use in the encryption process
          type: string
          x-go-name: DisplayId
        encryption-context:
          additionalProperties:
            type: string
          description: |-
            name-value pair that specifies the encryption context to be used for
            authenticated encryption. If used here, the same value must be supplied
            to the decrypt command or decryption will fail
          type: object
          x-go-name: EncContext
        in:
          description: |-
            Path to the file to be encrypted. If not provided, the content will be
            taken from stdin
          type: string
          x-go-name: InputFile
        item-id:
          description: The item id of the key to use in the encryption process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the key to use in the encryption process
          type: string
          x-go-name: KeyName
        out:
          description: |-
            Path to the output file. If not provided, the output will be sent to
            stdout
          type: string
          x-go-name: OutputFilePath
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - in
      - key-name
      title: encryptFile is a command that encrypts a file by using an AES key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptFileOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptGPG:
      properties:
        display-id:
          description: The display id of the key to use in the encryption process
          type: string
          x-go-name: DisplayId
        input-format:
          description: 'If specified, the plaintext input is assumed to be formatted
            accordingly. Current supported options: [base64]'
          type: string
          x-go-name: InputFormat
        item-id:
          description: The item id of the key to use in the encryption process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the key to use in the encryption process
          type: string
          x-go-name: KeyName
        plaintext:
          description: Data to be encrypted
          type: string
          x-go-name: Plaintext
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      - plaintext
      title: encryptGPG is a command that encrypts plaintext using GPG based on RSA
        key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptGPGOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptWithClassicKey:
      properties:
        display-id:
          description: The name of the key to use in the encryption process
          type: string
          x-go-name: DisplayId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        plaintext:
          description: Data to be encrypted
          type: string
          x-go-name: Plaintext
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: classic key version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - display-id
      - plaintext
      - version
      title: encryptWithClassicKey is a command that encrypts plaintext into ciphertext
        by using an Classic Key key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptWithClassicKeyOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateK8SAuthConfig:
      description: gatewayCreateK8SAuth is a command that creates k8s auth config
      properties:
        access-id:
          description: The access ID of the Kubernetes auth method
          type: string
          x-go-name: AuthMethodAccessId
        cluster-api-type:
          default: native_k8s
          description: 'Cluster access type. options: [native_k8s, rancher]'
          type: string
          x-go-name: ClusterApiType
        config-encryption-key-name:
          description: Config encryption key
          type: string
          x-go-name: ConfigEncryptionKey
        disable-issuer-validation:
          description: Disable issuer validation
          type: string
          x-go-name: DisableISSValidation
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        k8s-ca-cert:
          description: The CA Certificate (base64 encoded) to use to call into the
            kubernetes API server
          type: string
          x-go-name: K8SCACert
        k8s-host:
          description: The URL of the kubernetes API server
          type: string
          x-go-name: K8SHost
        k8s-issuer:
          description: The Kubernetes JWT issuer name. If not set, kubernetes/serviceaccount
            will use as an issuer.
          type: string
          x-go-name: K8SIssuer
        name:
          description: K8S Auth config name
          type: string
          x-go-name: K8SAuthConfigName
        rancher-api-key:
          description: The api key used to access the TokenReview API to validate
            other JWTs (relevant for "rancher" only)
          type: string
          x-go-name: RancherApiKey
        rancher-cluster-id:
          description: The cluster id as define in rancher (relevant for "rancher"
            only)
          type: string
          x-go-name: RancherClusterId
        signing-key:
          description: The private key (base64 encoded) associated with the public
            key defined in the Kubernetes auth
          type: string
          x-go-name: AuthMethodSigningKey
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        token-exp:
          default: 300
          description: Time in seconds of expiration of the Akeyless Kube Auth Method
            token
          format: int64
          type: integer
          x-go-name: AuthMethodTokenExpiration
        token-reviewer-jwt:
          description: |-
            A Kubernetes service account JWT used to access the TokenReview API to validate other JWTs (relevant for "native_k8s" only).
            If not set, the JWT submitted in the authentication process will be used to access the Kubernetes TokenReview API.
          type: string
          x-go-name: K8STokenReviewerJWT
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - access-id
      - k8s-host
      - name
      - signing-key
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateK8SAuthConfigOutput:
      properties:
        cluster_id:
          type: string
          x-go-name: ClusterId
        parts_change:
          $ref: '#/components/schemas/ConfigChange'
        total_hash:
          type: string
          x-go-name: TotalHash
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateMigration:
      description: gatewayCreateMigration is a command that create migration
      properties:
        "1password-email":
          description: 1Password user email to connect to the API
          type: string
          x-go-name: OpEmail
        "1password-password":
          description: 1Password user password to connect to the API
          type: string
          x-go-name: OpPassword
        "1password-secret-key":
          description: 1Password user secret key to connect to the API
          type: string
          x-go-name: OpSecretKey
        "1password-url":
          description: 1Password api container url
          type: string
          x-go-name: OpUrl
        "1password-vaults":
          description: 1Password list of vault to get the items from
          items:
            type: string
          type: array
          x-go-name: Vaults
        ad_auto_rotate:
          description: 'Enable/Disable automatic/recurrent rotation for migrated secrets.
            Default is false: only manual rotation is allowed for migrated secrets.
            If set to true, this command should be combined with --ad-rotation-interval
            and --ad-rotation-hour parameters (Relevant only for Active Directory
            migration)'
          type: string
          x-go-name: AdAutoRotate
        ad_computer_base_dn:
          description: 'Distinguished Name of Computer objects (servers) to search
            in Active Directory e.g.: CN=Computers,DC=example,DC=com (Relevant only
            for Active Directory migration)'
          type: string
          x-go-name: AdComputerBaseDN
        ad_discover_local_users:
          description: 'Enable/Disable discovery of local users from each domain server
            and migrate them as SSH Rotated Secrets. Default is false: only domain
            users will be migrated. Discovery of local users might require further
            installation of SSH on the servers, based on the supplied computer base
            DN. This will be implemented automatically as part of the migration process
            (Relevant only for Active Directory migration)'
          type: string
          x-go-name: AdDiscoverLocalUsers
        ad_domain_name:
          description: Active Directory Domain Name (Relevant only for Active Directory
            migration)
          type: string
          x-go-name: AdDomainName
        ad_domain_users_path_template:
          description: 'Path location template for migrating domain users as Rotated
            Secrets e.g.: .../DomainUsers/{{USERNAME}} (Relevant only for Active Directory
            migration)'
          type: string
          x-go-name: AdDomainUsersPathTemplate
        ad_local_users_ignore:
          description: Comma-separated list of Local Users which should not be migrated
            (Relevant only for Active Directory migration)
          type: string
          x-go-name: AdLocalUsersIgnore
        ad_local_users_path_template:
          description: 'Path location template for migrating domain users as Rotated
            Secrets e.g.: .../LocalUsers/{{COMPUTER_NAME}}/{{USERNAME}} (Relevant
            only for Active Directory migration)'
          type: string
          x-go-name: AdLocalUsersPathTemplate
        ad_rotation_hour:
          description: The hour of the scheduled rotation in UTC (Relevant only for
            Active Directory migration)
          format: int32
          type: integer
          x-go-name: AdRotationHour
        ad_rotation_interval:
          description: The number of days to wait between every automatic rotation
            [1-365] (Relevant only for Active Directory migration)
          format: int32
          type: integer
          x-go-name: AdRotationInterval
        ad_sra_enable_rdp:
          description: 'Enable/Disable RDP Secure Remote Access for the migrated local
            users rotated secrets. Default is false: rotated secrets will not be created
            with SRA (Relevant only for Active Directory migration)'
          type: string
          x-go-name: AdSRAEnableRDP
        ad_target_name:
          description: Active Directory LDAP Target Name. Server type should be Active
            Directory (Relevant only for Active Directory migration)
          type: string
          x-go-name: AdTargetName
        ad_targets_path_template:
          description: 'Path location template for migrating domain servers as SSH
            Targets e.g.: .../Servers/{{COMPUTER_NAME}} (Relevant only for Active
            Directory migration)'
          type: string
          x-go-name: AdTargetsPathTemplate
        ad_user_base_dn:
          description: 'Distinguished Name of User objects to search in Active Directory,
            e.g.: CN=Users,DC=example,DC=com (Relevant only for Active Directory migration)'
          type: string
          x-go-name: AdUserBaseDN
        ad_user_groups:
          description: Comma-separated list of domain groups from which privileged
            domain users will be migrated (Relevant only for Active Directory migration)
          type: string
          x-go-name: AdUserGroups
        as_ssh_port:
          description: Set the SSH Port for further connection to the domain servers.
            Default is port 22 (Relevant only for Active Directory migration)
          type: string
          x-go-name: AdSshPort
        aws-key:
          description: AWS Secret Access Key (relevant only for AWS migration)
          type: string
          x-go-name: AwsSecret
        aws-key-id:
          description: AWS Access Key ID with sufficient permissions to get all secrets,
            e.g. 'arn:aws:secretsmanager:[Region]:[AccountId]:secret:[/path/to/secrets/*]'
            (relevant only for AWS migration)
          type: string
          x-go-name: AwsKey
        aws-region:
          description: AWS region of the required Secrets Manager (relevant only for
            AWS migration)
          type: string
          x-go-name: AwsRegion
        azure-client-id:
          description: Azure Key Vault Access client ID, should be Azure AD App with
            a service principal (relevant only for Azure Key Vault migration)
          type: string
          x-go-name: AzureClient
        azure-kv-name:
          description: Azure Key Vault Name (relevant only for Azure Key Vault migration)
          type: string
          x-go-name: AzureName
        azure-secret:
          description: Azure Key Vault secret (relevant only for Azure Key Vault migration)
          type: string
          x-go-name: AzureSecret
        azure-tenant-id:
          description: Azure Key Vault Access tenant ID (relevant only for Azure Key
            Vault migration)
          type: string
          x-go-name: AzureTenant
        gcp-key:
          description: Base64-encoded GCP Service Account private key text with sufficient
            permissions to Secrets Manager, Minimum required permission is Secret
            Manager Secret Accessor, e.g. 'roles/secretmanager.secretAccessor' (relevant
            only for GCP migration)
          type: string
          x-go-name: ServiceAccountKey
        hashi-json:
          description: Import secret key as json value or independent secrets (relevant
            only for HasiCorp Vault migration)
          type: string
          x-go-name: HashiImportAsJson
        hashi-ns:
          description: HashiCorp Vault Namespaces is a comma-separated list of namespaces
            which need to be imported into Akeyless Vault. For every provided namespace,
            all its child namespaces are imported as well, e.g. nmsp/subnmsp1/subnmsp2,nmsp/anothernmsp.
            By default, import all namespaces (relevant only for HasiCorp Vault migration)
          items:
            type: string
          type: array
          x-go-name: HashiNamespaces
        hashi-token:
          description: HashiCorp Vault access token with sufficient permissions to
            preform list & read operations on secrets objects (relevant only for HasiCorp
            Vault migration)
          type: string
          x-go-name: HashiToken
        hashi-url:
          description: HashiCorp Vault API URL, e.g. https://vault-mgr01:8200 (relevant
            only for HasiCorp Vault migration)
          type: string
          x-go-name: HashiUrl
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        k8s-ca-certificate:
          description: |-
            For Certificate Authentication method
            K8s Cluster CA certificate (relevant only for K8s migration with Certificate Authentication method)
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: K8SCA
        k8s-client-certificate:
          description: K8s Client certificate with sufficient permission to list and
            get secrets in the namespace(s) you selected (relevant only for K8s migration
            with Certificate Authentication method)
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: K8SClientCert
        k8s-client-key:
          description: K8s Client key (relevant only for K8s migration with Certificate
            Authentication method)
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: K8SClientKey
        k8s-namespace:
          description: K8s Namespace, Use this field to import secrets from a particular
            namespace only. By default, the secrets are imported from all namespaces
            (relevant only for K8s migration)
          type: string
          x-go-name: K8SNamespace
        k8s-password:
          description: K8s Client password (relevant only for K8s migration with Password
            Authentication method)
          type: string
          x-go-name: K8SPassword
        k8s-skip-system:
          description: K8s Skip Control Plane Secrets, This option allows to avoid
            importing secrets from system namespaces (relevant only for K8s migration)
          type: boolean
          x-go-name: K8SSkipSystem
        k8s-token:
          description: |-
            For Token Authentication method
            K8s Bearer Token with sufficient permission to list and get secrets in the namespace(s) you selected (relevant only for K8s migration with Token Authentication method)
          type: string
          x-go-name: K8SToken
        k8s-url:
          description: K8s API Server URL, e.g. https://k8s-api.mycompany.com:6443
            (relevant only for K8s migration)
          type: string
          x-go-name: K8SServer
        k8s-username:
          description: |-
            For Password Authentication method
            K8s Client username with sufficient permission to list and get secrets in the namespace(s) you selected (relevant only for K8s migration with Password Authentication method)
          type: string
          x-go-name: K8SUsername
        name:
          description: Migration name
          type: string
          x-go-name: MigrationName
        protection-key:
          description: The name of the key that protects the classic key value (if
            empty, the account default key will be used)
          type: string
          x-go-name: ProtectionKey
        target-location:
          description: Target location in Akeyless for imported secrets
          type: string
          x-go-name: TargetLocation
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: Migration type (hashi/aws/gcp/k8s/azure_kv/1password/active_directory)
          type: string
          x-go-name: MigrationType
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - target-location
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerArtifactory:
      description: gatewayCreateProducerArtifactory is a command that creates artifactory
        producer
      properties:
        artifactory-admin-name:
          description: Artifactory Admin Name
          type: string
          x-go-name: AdminName
        artifactory-admin-pwd:
          description: Artifactory Admin password
          type: string
          x-go-name: AdminPwd
        artifactory-token-audience:
          description: Token Audience
          type: string
          x-go-name: TokenAudience
        artifactory-token-scope:
          description: Token Scope
          type: string
          x-go-name: TokenScope
        base-url:
          description: Base URL
          type: string
          x-go-name: BaseUrl
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - artifactory-token-audience
      - artifactory-token-scope
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerArtifactoryOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerAws:
      description: gatewayCreateProducerAws is a command that creates aws producer
      properties:
        access-mode:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
        admin-rotation-interval-days:
          default: 0
          description: Admin credentials rotation interval (days)
          format: int64
          type: integer
          x-go-name: AdminCredsRotationInterval
        aws-access-key-id:
          description: Access Key ID
          type: string
          x-go-name: AccessId
        aws-access-secret-key:
          description: Secret Access Key
          type: string
          x-go-name: AccessKey
        aws-role-arns:
          description: AWS Role ARNs to be used in the Assume Role operation (relevant
            only for assume_role mode)
          type: string
          x-go-name: RoleARNs
        aws-user-console-access:
          default: false
          description: AWS User console access
          type: boolean
          x-go-name: UserConsoleAccess
        aws-user-groups:
          description: AWS User groups
          type: string
          x-go-name: UserGroups
        aws-user-policies:
          description: AWS User policies
          type: string
          x-go-name: UserPolicies
        aws-user-programmatic-access:
          default: true
          description: AWS User programmatic access
          type: boolean
          x-go-name: UserProgrammaticAccess
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        enable-admin-rotation:
          default: false
          description: Automatic admin credentials rotation
          type: boolean
          x-go-name: AutomaticAdminCredsRotation
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        region:
          default: us-east-2
          description: Region
          type: string
          x-go-name: Region
        secure-access-aws-account-id:
          type: string
          x-go-name: SecureAccessAccountId
        secure-access-aws-native-cli:
          type: boolean
          x-go-name: SecureAccessAwsNativeCli
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerAwsOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerAzure:
      description: gatewayCreateProducerAzure is a command that creates azure producer
      properties:
        app-obj-id:
          description: Azure App Object Id
          type: string
          x-go-name: AppObjId
        azure-client-id:
          description: Azure Client ID
          type: string
          x-go-name: ClientId
        azure-client-secret:
          description: Azure Client Secret
          type: string
          x-go-name: ClientSecret
        azure-tenant-id:
          description: Azure Tenant ID
          type: string
          x-go-name: TenantId
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        fixed-user-claim-keyname:
          default: "false"
          description: FixedUserClaimKeyname
          type: string
          x-go-name: FixedUserClaimKeyname
        fixed-user-only:
          default: false
          description: Fixed user
          type: boolean
          x-go-name: FixedUserOnly
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-group-obj-id:
          description: User Group Object Id
          type: string
          x-go-name: UserGroupObjId
        user-portal-access:
          default: false
          description: Azure User portal access
          type: boolean
          x-go-name: UserPortaAccess
        user-principal-name:
          description: User Principal Name
          type: string
          x-go-name: UserPrincipalName
        user-programmatic-access:
          default: false
          description: Azure User programmatic access
          type: boolean
          x-go-name: UserProgrammaticAccess
        user-role-template-id:
          description: User Role Template Id
          type: string
          x-go-name: UserRoleTemplateId
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerAzureOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerCassandra:
      description: gatewayCreateProducerCassandra is a command that creates a Cassandra
        producer
      properties:
        cassandra-creation-statements:
          description: Cassandra creation statements
          type: string
          x-go-name: CreationStatements
        cassandra-hosts:
          description: Cassandra hosts IP or addresses, comma separated
          type: string
          x-go-name: Host
        cassandra-password:
          description: Cassandra superuser password
          type: string
          x-go-name: Password
        cassandra-port:
          default: "9042"
          description: Cassandra port
          type: string
          x-go-name: Port
        cassandra-username:
          description: Cassandra superuser username
          type: string
          x-go-name: UserName
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerCassandraOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerCertificateAutomation:
      description: |-
        gatewayCreateProducerCertificateAutomation is a command that creates a Certificate Automation
        dynamic secret producer to dynamically create certificates generated by Venafi or have
        Akeyless generated certificates using PKI be monitored by Venafi
      properties:
        admin-rotation-interval-days:
          default: 0
          description: Admin credentials rotation interval (days)
          format: int64
          type: integer
          x-go-name: AdminCredsRotationInterval
        allow-subdomains:
          description: Allow subdomains
          type: boolean
          x-go-name: AllowSubdomains
        allowed-domains:
          description: Allowed domains
          items:
            type: string
          type: array
          x-go-name: AllowedDomains
        auto-generated-folder:
          description: Auto generated folder
          type: string
          x-go-name: AutoGeneratedFolder
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        enable-admin-rotation:
          default: false
          description: Automatic admin credentials rotation
          type: boolean
          x-go-name: AutomaticAdminCredsRotation
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        root-first-in-chain:
          description: Root first in chain
          type: boolean
          x-go-name: RootFirstInChain
        sign-using-akeyless-pki:
          description: Use Akeyless PKI issuer or Venafi issuer
          type: boolean
          x-go-name: SignUsingAkeylessPKI
        signer-key-name:
          description: Signer key name
          type: string
          x-go-name: SignerKeyName
        store-private-key:
          description: Store private key
          type: boolean
          x-go-name: StorePrivateKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          description: User TTL in time.Duration format (2160h / 129600m / etc...).
            When using sign-using-akeyless-pki certificates created will have this
            validity period, otherwise the user-ttl is taken from the Validity Period
            field of the Zone's' Issuing Template. When using cert-manager it is advised
            to have a TTL of above 60 days (1440h). For more information - https://cert-manager.io/docs/usage/certificate/
          type: string
          x-go-name: UserTtl
        venafi-api-key:
          description: Venafi API key
          type: string
          x-go-name: VenafiApiKey
        venafi-baseurl:
          description: Venafi Baseurl
          type: string
          x-go-name: VenafiBaseURL
        venafi-password:
          description: Venafi Password
          type: string
          x-go-name: VenafiPassword
        venafi-use-tpp:
          description: Venafi using TPP
          type: boolean
          x-go-name: VenafiUseTPP
        venafi-username:
          description: Venafi Username
          type: string
          x-go-name: VenafiUsername
        venafi-zone:
          description: Venafi Zone
          type: string
          x-go-name: VenafiZone
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerCertificateAutomationOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerChef:
      description: gatewayCreateProducerChef is a command that creates chef producer
      properties:
        chef-orgs:
          description: Organizations
          type: string
          x-go-name: Organizations
        chef-server-key:
          description: Server key
          type: string
          x-go-name: ServerKey
        chef-server-url:
          description: Server URL
          type: string
          x-go-name: ServerURL
        chef-server-username:
          description: Server username
          type: string
          x-go-name: ServerUsername
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        skip-ssl:
          default: true
          description: Skip SSL
          type: boolean
          x-go-name: SkipSSL
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerChefOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerCustom:
      properties:
        admin_rotation_interval_days:
          description: Define rotation interval in days
          format: int64
          type: integer
          x-go-name: RotationIntervalDays
        create-sync-url:
          description: |-
            URL of an endpoint that implements /sync/create method, for example
            https://webhook.example.com/sync/create
          type: string
          x-go-name: CreateSyncURL
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        enable_admin_rotation:
          default: false
          description: Should admin credentials be rotated
          type: boolean
          x-go-name: EnableAdminRotation
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        payload:
          description: Secret payload to be sent with each create/revoke webhook request
          type: string
          x-go-name: Payload
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        revoke-sync-url:
          description: |-
            URL of an endpoint that implements /sync/revoke method, for example
            https://webhook.example.com/sync/revoke
          type: string
          x-go-name: RevokeSyncURL
        rotate-sync-url:
          description: |-
            URL of an endpoint that implements /sync/rotate method, for example
            https://webhook.example.com/sync/rotate
          type: string
          x-go-name: RotateSyncURL
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        timeout-sec:
          default: 60
          description: Maximum allowed time in seconds for the webhook to return the
            results
          format: int64
          type: integer
          x-go-name: TimeoutSeconds
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTTL
      required:
      - create-sync-url
      - name
      - revoke-sync-url
      title: gatewayCreateProducerCustom is a command that creates a custom producer.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerCustomOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerDockerhub:
      description: gatewayCreateProducerDockerhub is a command that creates a DOCKERHUB
        producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        dockerhub-password:
          description: DockerhubPassword is either the user's password access token
            to manage the repository
          type: string
          x-go-name: DockerhubPassword
        dockerhub-token-scopes:
          description: |-
            Access token scopes list (comma-separated) to give the dynamic secret
            valid options are in "repo:admin", "repo:write", "repo:read", "repo:public_read"
          type: string
          x-go-name: TokenScopes
        dockerhub-username:
          description: DockerhubUsername is the name of the user in dockerhub
          type: string
          x-go-name: DockerhubUsername
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerDockerhubOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerEks:
      description: gatewayCreateProducerEks is a command that creates eks producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        eks-access-key-id:
          description: Access Key ID
          type: string
          x-go-name: AccessId
        eks-assume-role:
          description: IAM assume role
          type: string
          x-go-name: AssumeRole
        eks-cluster-ca-cert:
          description: EKS cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        eks-cluster-endpoint:
          description: EKS cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        eks-cluster-name:
          description: EKS cluster name
          type: string
          x-go-name: ClusterName
        eks-region:
          default: us-east-2
          description: Region
          type: string
          x-go-name: Region
        eks-secret-access-key:
          description: Secret Access Key
          type: string
          x-go-name: AccessKey
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-allow-port-forwading:
          type: boolean
          x-go-name: SecureAccessK8SAllowPortForwading
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-cluster-endpoint:
          type: string
          x-go-name: SecureAccessEndpoint
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 15m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerEksOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerGcp:
      description: gatewayCreateProducerGcp is a command that creates a GCP producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        gcp-cred-type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
        gcp-key:
          description: Base64-encoded service account private key text
          type: string
          x-go-name: ServiceAccountKey
        gcp-key-algo:
          description: Service account key algorithm, e.g. KEY_ALG_RSA_1024
          type: string
          x-go-name: KeyAlgorithm
        gcp-sa-email:
          description: The email of the fixed service acocunt to generate keys or
            tokens for. (revelant for service-account-type=fixed)
          type: string
          x-go-name: ServiceAccountEmail
        gcp-token-scopes:
          description: Access token scopes list, e.g. scope1,scope2
          type: string
          x-go-name: TokenScopes
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        role-binding:
          description: Role binding definitions in json format
          type: string
          x-go-name: RoleBindingJson
        service-account-type:
          default: fixed
          description: The type of the gcp dynamic secret. Options[fixed, dynamic]
          type: string
          x-go-name: ServiceAccountType
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      - service-account-type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerGcpOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerGithub:
      description: gatewayCreateProducerGithub is a command that creates github producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        github-app-id:
          description: Github app id
          format: int64
          type: integer
          x-go-name: AppId
        github-app-private-key:
          description: App private key
          type: string
          x-go-name: AppPrivateKey
        github-base-url:
          description: Base URL
          type: string
          x-go-name: BaseUrl
        installation-id:
          description: Github app installation id
          format: int64
          type: integer
          x-go-name: InstallationId
        installation-repository:
          description: Repository that the app installation has access to
          type: string
          x-go-name: Repository
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        token-permissions:
          description: Optional - installation token's allowed permissions
          items:
            type: string
          type: array
          x-go-name: TokenPermissions
        token-repositories:
          description: Optional - installation token's allowed repositories
          items:
            type: string
          type: array
          x-go-name: TokenRepositories
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerGithubOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerGke:
      description: gatewayCreateProducerGke is a command that creates gke producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        gke-account-key:
          description: GKE Service Account key file path
          type: string
          x-go-name: ServiceAccountKey
        gke-cluster-cert:
          description: GKE cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        gke-cluster-endpoint:
          description: GKE cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        gke-cluster-name:
          description: GKE cluster name
          type: string
          x-go-name: ClusterName
        gke-service-account-email:
          description: GKE service account email
          type: string
          x-go-name: ServiceAccountEmail
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-allow-port-forwading:
          type: boolean
          x-go-name: SecureAccessK8SAllowPortForwading
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-cluster-endpoint:
          type: string
          x-go-name: SecureAccessEndpoint
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerGkeOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerHanaDb:
      description: gatewayCreateProducerHanaDb is a command that creates hanadb producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        hana-dbname:
          description: HanaDb Name
          type: string
          x-go-name: DBName
        hanadb-create-statements:
          description: HanaDb Creation statements
          type: string
          x-go-name: CreationStatements
        hanadb-host:
          default: 127.0.0.1
          description: HanaDb Host
          type: string
          x-go-name: DBHost
        hanadb-password:
          description: HanaDb Password
          type: string
          x-go-name: DBPassword
        hanadb-port:
          default: "443"
          description: HanaDb Port
          type: string
          x-go-name: DBPort
        hanadb-revocation-statements:
          description: HanaDb Revocation statements
          type: string
          x-go-name: RevocationStatements
        hanadb-username:
          description: HanaDb Username
          type: string
          x-go-name: DBUsername
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-db-schema:
          type: string
          x-go-name: SecureAccessSchema
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerHanaDbOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerLdap:
      description: gatewayCreateProducerLdap is a command that creates ldap producer
      properties:
        bind-dn:
          description: Bind DN
          type: string
          x-go-name: BindDn
        bind-dn-password:
          description: Bind DN Password
          type: string
          x-go-name: BindDnPassword
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        external-username:
          default: "false"
          description: Fixed user
          type: string
          x-go-name: FixedUserOnly
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        ldap-ca-cert:
          description: CA Certificate File Content
          type: string
          x-go-name: LdapCACert
        ldap-url:
          description: LDAP Server URL
          type: string
          x-go-name: LdapUrl
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        token-expiration:
          description: Token expiration
          type: string
          x-go-name: TokenExpiration
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-attribute:
          description: User Attribute
          type: string
          x-go-name: UserAttribute
        user-dn:
          description: User DN
          type: string
          x-go-name: UserDn
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerLdapOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerMSSQL:
      description: gatewayCreateProducerMSSQL is a command that creates mssql producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        mssql-create-statements:
          description: MSSQL Creation statements
          type: string
          x-go-name: CreationStatements
        mssql-dbname:
          description: MSSQL Name
          type: string
          x-go-name: DBName
        mssql-host:
          default: 127.0.0.1
          description: MSSQL Host
          type: string
          x-go-name: DBHost
        mssql-password:
          description: MSSQL Password
          type: string
          x-go-name: DBPassword
        mssql-port:
          default: "1433"
          description: MSSQL Port
          type: string
          x-go-name: DBPort
        mssql-revocation-statements:
          description: MSSQL Revocation statements
          type: string
          x-go-name: RevocationStatements
        mssql-username:
          description: MSSQL Username
          type: string
          x-go-name: DBUsername
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-db-schema:
          type: string
          x-go-name: SecureAccessSchema
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerMSSQLOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerMongo:
      description: gatewayCreateProducerMongo is a command that creates either mongodb  producer
        or mongodb atlas producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        mongodb-atlas-api-private-key:
          description: MongoDB Atlas private key
          type: string
          x-go-name: MongoAPIPrivateKey
        mongodb-atlas-api-public-key:
          description: MongoDB Atlas public key
          type: string
          x-go-name: MongoAPIPublicKey
        mongodb-atlas-project-id:
          description: MongoDB Atlas project ID
          type: string
          x-go-name: MongoProjectID
        mongodb-custom-data:
          description: MongoDB custom data
          type: string
          x-go-name: CustomData
        mongodb-default-auth-db:
          description: MongoDB server default authentication database
          type: string
          x-go-name: MongoDefaultAuthDB
        mongodb-host-port:
          description: MongoDB server host and port
          type: string
          x-go-name: MongoHostAndPort
        mongodb-name:
          description: MongoDB Name
          type: string
          x-go-name: DBName
        mongodb-password:
          description: MongoDB server password. You will prompted to provide a password
            if it will not appear in CLI parameters
          type: string
          x-go-name: MongoPassword
        mongodb-roles:
          default: '[]'
          description: MongoDB Roles
          type: string
          x-go-name: Roles
        mongodb-server-uri:
          description: MongoDB server URI
          type: string
          x-go-name: MongoServerURI
        mongodb-uri-options:
          description: MongoDB server URI options
          type: string
          x-go-name: MongoURIOptions
        mongodb-username:
          description: MongoDB server username
          type: string
          x-go-name: MongoUsername
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Encrypt producer with following key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerMongoOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerMySQL:
      description: gatewayCreateProducerMySQL is a command that creates mysql producer
      properties:
        db-server-certificates:
          description: (Optional) DB server certificates
          type: string
          x-go-name: DBServerCertificates
        db-server-name:
          description: (Optional) Server name for certificate verification
          type: string
          x-go-name: DBServerName
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        mysql-dbname:
          description: MySQL DB Name
          type: string
          x-go-name: DBName
        mysql-host:
          default: 127.0.0.1
          description: MySQL Host
          type: string
          x-go-name: DBHost
        mysql-password:
          description: MySQL Password
          type: string
          x-go-name: DBPassword
        mysql-port:
          default: "3306"
          description: MySQL Port
          type: string
          x-go-name: DBPort
        mysql-screation-statements:
          description: MySQL Creation statements
          type: string
          x-go-name: CreationStatements
        mysql-username:
          description: MySQL Username
          type: string
          x-go-name: DBUsername
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        ssl:
          description: SSL connection mode
          type: boolean
          x-go-name: SSLConnection
        ssl-certificate:
          description: SSL connection certificate
          type: string
          x-go-name: SSLConnectionCertificate
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerMySQLOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerNativeK8S:
      description: gatewayCreateProducerNativeK8S is a command that creates k8s producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        k8s-cluster-ca-cert:
          description: K8S cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        k8s-cluster-endpoint:
          description: K8S cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        k8s-cluster-token:
          description: K8S cluster Bearer token
          type: string
          x-go-name: ClusterBearerToken
        k8s-namespace:
          description: K8S namespace
          type: string
          x-go-name: Namespace
        k8s-service-account:
          description: K8S service account
          type: string
          x-go-name: ServiceAccount
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-allow-port-forwading:
          type: boolean
          x-go-name: SecureAccessK8SAllowPortForwading
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-cluster-endpoint:
          type: string
          x-go-name: SecureAccessEndpoint
        secure-access-dashboard-url:
          type: string
          x-go-name: SecureAccessDashboardURL
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerNativeK8SOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerOracleDb:
      description: gatewayCreateProducerOracleDb is a command that creates oracle
        db producer
      properties:
        db-server-certificates:
          description: (Optional) DB server certificates
          type: string
          x-go-name: DBServerCertificates
        db-server-name:
          description: (Optional) Server name for certificate verification
          type: string
          x-go-name: DBServerName
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        oracle-host:
          default: 127.0.0.1
          description: Oracle Host
          type: string
          x-go-name: DBHost
        oracle-password:
          description: Oracle Password
          type: string
          x-go-name: DBPassword
        oracle-port:
          default: "1521"
          description: Oracle Port
          type: string
          x-go-name: DBPort
        oracle-screation-statements:
          description: Oracle Creation statements
          type: string
          x-go-name: CreationStatements
        oracle-service-name:
          description: Oracle DB Name
          type: string
          x-go-name: DBName
        oracle-username:
          description: Oracle Username
          type: string
          x-go-name: DBUsername
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerOracleDbOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerPing:
      description: gatewayCreateProducerPing is a command that creates ping producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        ping-administrative-port:
          default: "9999"
          description: Ping Federate administrative port
          type: string
          x-go-name: AdministrativePort
        ping-atm-id:
          description: Set a specific Access Token Management (ATM) instance for the
            created OAuth Client by providing the ATM Id. If no explicit value is
            given, the default pingfederate server ATM will be set.
          type: string
          x-go-name: AccessTokenManagerId
        ping-authorization-port:
          default: "9031"
          description: Ping Federate authorization port
          type: string
          x-go-name: AuthorizationPort
        ping-cert-subject-dn:
          description: The subject DN of the client certificate. If no explicit value
            is given, the producer will create CA certificate and matched client certificate
            and return it as value. Used in conjunction with ping-issuer-dn (relevant
            for CLIENT_TLS_CERTIFICATE authentication method)
          type: string
          x-go-name: CertSubjectDN
        ping-client-authentication-type:
          default: CLIENT_SECRET
          description: OAuth Client Authentication Type [CLIENT_SECRET, PRIVATE_KEY_JWT,
            CLIENT_TLS_CERTIFICATE]
          type: string
          x-go-name: ClientAuthenticationType
        ping-enforce-replay-prevention:
          description: Determines whether PingFederate requires a unique signed JWT
            from the client for each action (relevant for PRIVATE_KEY_JWT authentication
            method)
          type: string
          x-go-name: EnforceReplayPrevention
        ping-grant-types:
          description: List of OAuth client grant types [IMPLICIT, AUTHORIZATION_CODE,
            CLIENT_CREDENTIALS, TOKEN_EXCHANGE, REFRESH_TOKEN, ASSERTION_GRANTS, PASSWORD,
            RESOURCE_OWNER_CREDENTIALS]. If no explicit value is given, AUTHORIZATION_CODE
            will be selected as default.
          items:
            type: string
          type: array
          x-go-name: GrantTypes
        ping-issuer-dn:
          description: Issuer DN of trusted CA certificate that imported into Ping
            Federate server. You may select \"Trust Any\" to trust all the existing
            issuers in Ping Federate server. Used in conjunction with ping-cert-subject-dn
            (relevant for CLIENT_TLS_CERTIFICATE authentication method)
          type: string
          x-go-name: IssuerDN
        ping-jwks:
          description: 'Base64-encoded JSON Web Key Set (JWKS). If no explicit value
            is given, the producer will create JWKs and matched signed JWT (Sign Algo:
            RS256) and return it as value (relevant for PRIVATE_KEY_JWT authentication
            method)'
          type: string
          x-go-name: JWKs
        ping-jwks-url:
          description: The URL of the JSON Web Key Set (JWKS). If no explicit value
            is given, the producer will create JWKs and matched signed JWT and return
            it as value (relevant for PRIVATE_KEY_JWT authentication method)
          type: string
          x-go-name: JWKsURL
        ping-password:
          description: Ping Federate privileged user password
          type: string
          x-go-name: UserPassword
        ping-privileged-user:
          description: Ping Federate privileged user
          type: string
          x-go-name: PrivilegedUser
        ping-redirect-uris:
          description: List of URIs to which the OAuth authorization server may redirect
            the resource owner's user agent after authorization is obtained. At least
            one redirection URI is required for the AUTHORIZATION_CODE and IMPLICIT
            grant types.
          items:
            type: string
          type: array
          x-go-name: RedirectUris
        ping-restricted-scopes:
          description: Limit the OAuth client to specific scopes list
          items:
            type: string
          type: array
          x-go-name: RestrictedScopes
        ping-signing-algo:
          description: The signing algorithm that the client must use to sign its
            request objects [RS256,RS384,RS512,ES256,ES384,ES512,PS256,PS384,PS512]
            If no explicit value is given, the client can use any of the supported
            signing algorithms (relevant for PRIVATE_KEY_JWT authentication method)
          type: string
          x-go-name: SigningAlgorithm
        ping-url:
          description: Ping URL
          type: string
          x-go-name: PingURL
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: The time from dynamic secret creation to expiration.
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerPingOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerPostgreSQL:
      description: gatewayCreateProducerPostgreSQL is a command that creates postgresql
        producer
      properties:
        creation-statements:
          description: PostgreSQL Creation statements
          type: string
          x-go-name: CreationStatements
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        postgresql-db-name:
          description: PostgreSQL DB Name
          type: string
          x-go-name: DBName
        postgresql-host:
          default: 127.0.0.1
          description: PostgreSQL Host
          type: string
          x-go-name: DBHost
        postgresql-password:
          description: PostgreSQL Password
          type: string
          x-go-name: DBPassword
        postgresql-port:
          default: "5432"
          description: PostgreSQL Port
          type: string
          x-go-name: DBPort
        postgresql-username:
          description: PostgreSQL Username
          type: string
          x-go-name: DBUsername
        producer-encryption-key:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        revocation-statement:
          description: PostgreSQL Revocation statements
          type: string
          x-go-name: RevocationStatements
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-db-schema:
          type: string
          x-go-name: SecureAccessSchema
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        ssl:
          description: SSL connection mode
          type: boolean
          x-go-name: SSLConnection
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerPostgreSQLOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerRabbitMQ:
      description: gatewayCreateProducerRabbitMQ is a command that creates rabbitmq
        producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        rabbitmq-admin-pwd:
          description: RabbitMQ Admin password
          type: string
          x-go-name: AdminPwd
        rabbitmq-admin-user:
          description: RabbitMQ Admin User
          type: string
          x-go-name: AdminUser
        rabbitmq-server-uri:
          description: Server URI
          type: string
          x-go-name: ServerURI
        rabbitmq-user-conf-permission:
          description: User configuration permission
          type: string
          x-go-name: UserConfPermission
        rabbitmq-user-read-permission:
          description: User read permission
          type: string
          x-go-name: UserReadPermission
        rabbitmq-user-tags:
          description: User Tags
          type: string
          x-go-name: UserTags
        rabbitmq-user-vhost:
          description: User Virtual Host
          type: string
          x-go-name: UserVHost
        rabbitmq-user-write-permission:
          description: User write permission
          type: string
          x-go-name: UserWritePermission
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-url:
          type: string
          x-go-name: SecureAccessURL
        secure-access-web:
          default: true
          description: Secure Access Web Category
          type: boolean
          x-go-name: AccessWebCategory
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerRabbitMQOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerRdp:
      description: gatewayCreateProducerRdp is a command that creates rdp producer
      properties:
        allow-user-extend-session:
          description: AllowUserExtendSession
          format: int64
          type: integer
          x-go-name: AllowUserExtendSession
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        fixed-user-only:
          default: "false"
          description: Fixed user
          type: string
          x-go-name: FixedUserOnly
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        rdp-admin-name:
          description: RDP Admin Name
          type: string
          x-go-name: AdminName
        rdp-admin-pwd:
          description: RDP Admin password
          type: string
          x-go-name: AdminPwd
        rdp-host-name:
          description: Hostname
          type: string
          x-go-name: Hostname
        rdp-host-port:
          default: "22"
          description: Port
          type: string
          x-go-name: HostPort
        rdp-user-groups:
          description: Groups
          type: string
          x-go-name: UserGroups
        secure-access-allow-external-user:
          type: boolean
          x-go-name: SecureAccessAllowProvidingExternalUser
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-rdp-domain:
          type: string
          x-go-name: SecureAccessDomain
        secure-access-rdp-user:
          type: string
          x-go-name: SecureAccessOverrideUser
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
        warn-user-before-expiration:
          description: WarnBeforeUserExpiration
          format: int64
          type: integer
          x-go-name: WarnBeforeUserExpiration
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerRdpOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerRedshift:
      description: gatewayCreateProducerRedshift is a command that creates redshift
        producer
      properties:
        creation-statements:
          description: Redshift Creation statements
          type: string
          x-go-name: CreationStatements
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        producer-encryption-key:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        redshift-db-name:
          description: Redshift DB Name
          type: string
          x-go-name: DBName
        redshift-host:
          default: 127.0.0.1
          description: Redshift Host
          type: string
          x-go-name: DBHost
        redshift-password:
          description: Redshift Password
          type: string
          x-go-name: DBPassword
        redshift-port:
          default: "5439"
          description: Redshift Port
          type: string
          x-go-name: DBPort
        redshift-username:
          description: Redshift Username
          type: string
          x-go-name: DBUsername
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        ssl:
          description: SSL connection mode
          type: boolean
          x-go-name: SSLConnection
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerRedshiftOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerSnowflake:
      description: GatewayCreateProducerSnowflakeCmd is a command that creates a Snowflake
        producer
      properties:
        account:
          description: Account name
          type: string
          x-go-name: Account
        account-password:
          description: Database Password
          type: string
          x-go-name: DBPassword
        account-username:
          description: Database Username
          type: string
          x-go-name: DBUsername
        db-name:
          description: Database name
          type: string
          x-go-name: DBName
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        private-key:
          description: RSA Private key (base64 encoded)
          type: string
          x-go-name: PrivateKey
        private-key-passphrase:
          description: The Private key passphrase
          type: string
          x-go-name: PrivateKeyPassphrase
        role:
          description: User role
          type: string
          x-go-name: Role
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 24h
          description: User TTL
          type: string
          x-go-name: UserTtl
        warehouse:
          description: Warehouse name
          type: string
          x-go-name: Warehouse
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayCreateProducerSnowflakeOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayDeleteAllowedManagementAccess:
      description: gatewayDeleteAllowedManagementAccess is a command that deletes
        sub-admins
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        sub-admin-id:
          description: SubAdminID to be removed
          type: string
          x-go-name: SubAdminID
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - sub-admin-id
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayDeleteK8SAuthConfig:
      description: gatewayDeleteK8SAuth is a command that deletes k8s auth config
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: K8S Auth config name
          type: string
          x-go-name: K8SAuthConfigName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayDeleteK8SAuthConfigOutput:
      properties:
        cluster_id:
          type: string
          x-go-name: ClusterId
        parts_change:
          $ref: '#/components/schemas/ConfigChange'
        total_hash:
          type: string
          x-go-name: TotalHash
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayDeleteMigration:
      description: gatewayDeleteMigration is a command that delete migration
      properties:
        id:
          description: Migration ID
          type: string
          x-go-name: MigrationID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - id
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayDeleteProducer:
      description: gatewayDeleteProducer is a command that deletes producer
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayDeleteProducerOutput:
      properties:
        producer_name:
          type: string
          x-go-name: ProducerName
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayDeleteSubAdminsOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayGetConfig:
      description: gatewayGetConfig is a command that returns gateway configuration
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayGetK8SAuthConfig:
      description: gatewayGetK8SAuth is a command that gets k8s auth config
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: K8S Auth config name
          type: string
          x-go-name: K8SAuthConfigName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayGetK8SAuthConfigOutput:
      properties:
        am_token_expiration:
          description: AuthMethodTokenExpiration is time in seconds of expiration
            of the Akeyless Kube Auth Method token
          format: int64
          type: integer
          x-go-name: AuthMethodTokenExpiration
        auth_method_access_id:
          description: AuthMethodAccessId of the Kubernetes auth method
          type: string
          x-go-name: AuthMethodAccessId
        auth_method_prv_key_pem:
          description: |-
            AuthMethodSigningKey is the private key (in base64 of the PEM format) associated with the public key defined in the
            Kubernetes auth method, that used to sign the internal token for the Akeyless Kubernetes Auth Method
          type: string
          x-go-name: AuthMethodSigningKey
        cluster_api_type:
          description: ClusterApiType defines types of API access to cluster
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/akeyless-api/gator
        disable_iss_validation:
          description: DisableISSValidation is optional parameter to disable ISS validation
          type: boolean
          x-go-name: DisableISSValidation
        id:
          type: string
          x-go-name: Id
        k8s_ca_cert:
          description: K8SCACert is the CA Cert to use to call into the kubernetes
            API
          type: string
          x-go-name: K8SCACert
        k8s_host:
          description: K8SHost is the url string for the kubernetes API
          type: string
          x-go-name: K8SHost
        k8s_issuer:
          description: K8SIssuer is the claim that specifies who issued the Kubernetes
            token
          type: string
          x-go-name: K8SIssuer
        k8s_pub_keys_pem:
          description: K8SPublicKeysPEM is the list of public key in PEM format
          items:
            type: string
          type: array
          x-go-name: K8SPublicKeysPEM
        k8s_token_reviewer_jwt:
          description: K8STokenReviewerJWT is the bearer for clusterApiTypeK8s, used
            during TokenReview API call
          type: string
          x-go-name: K8STokenReviewerJWT
        name:
          type: string
          x-go-name: Name
        protection_key:
          type: string
          x-go-name: ProtectionKey
        rancher_api_key:
          description: RancherApiKey the bear token for clusterApiTypeRancher
          type: string
          x-go-name: RancherApiKey
        rancher_cluster_id:
          description: RancherClusterId cluster id as define in rancher (in case of
            clusterApiTypeRancher)
          type: string
          x-go-name: RancherClusterId
        use_local_ca_jwt:
          description: |-
            UseLocalCAJwt is an optional parameter to set defaulting to using
            the local CA cert and service account jwt when running in a Kubernetes
            pod
          type: boolean
          x-go-name: UseLocalCAJwt
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayGetLdapAuthConfig:
      description: gatewayGetLdapAuth is a command that gets ldap auth config
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayGetLdapAuthConfigOutput:
      properties:
        ldap_access_id:
          type: string
          x-go-name: LdapAccessId
        ldap_anonymous_search:
          type: boolean
          x-go-name: LdapAnonymousSearch
        ldap_bind_dn:
          type: string
          x-go-name: LdapBindDn
        ldap_bind_password:
          type: string
          x-go-name: LdapBindPassword
        ldap_cert:
          type: string
          x-go-name: LdapCertificate
        ldap_enable:
          type: boolean
          x-go-name: LdapEnable
        ldap_group_attr:
          type: string
          x-go-name: LdapGroupAttr
        ldap_group_dn:
          type: string
          x-go-name: LdapGroupDn
        ldap_group_filter:
          type: string
          x-go-name: LdapGroupFilter
        ldap_private_key:
          type: string
          x-go-name: LdapPrivateKey
        ldap_token_expiration:
          type: string
          x-go-name: LdapTokenExpiration
        ldap_url:
          type: string
          x-go-name: LdapUrlAddress
        ldap_user_attr:
          type: string
          x-go-name: LdapUserAttr
        ldap_user_dn:
          type: string
          x-go-name: LdapUserDn
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayGetMigration:
      description: gatewayGetMigration is a command that get migration
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Migration name to display
          type: string
          x-go-name: MigrationName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayGetProducer:
      description: gatewayGetProducer is a command that returns producer
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayGetTmpUsers:
      description: gatewayGetTmpUsers is a command that returns gateway configuration
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer Name
          type: string
          x-go-name: ProducerName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayListAllowedManagementAccess:
      description: gatewayListAllowedManagementAccess is a command that returns list
        sub admins
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayListMigration:
      description: gatewayListMigration is a command that list migration
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayListProducers:
      description: gatewayListProducers is a command that returns producer
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayMigratePersonalItems:
      description: gatewayMigratePersonalItems is a command that migrate personal
        items from external vault
      properties:
        "1password-email":
          description: 1Password user email to connect to the API
          type: string
          x-go-name: OpEmail
        "1password-password":
          description: 1Password user password to connect to the API
          type: string
          x-go-name: OpPassword
        "1password-secret-key":
          description: 1Password user secret key to connect to the API
          type: string
          x-go-name: OpSecretKey
        "1password-url":
          description: 1Password api container url
          type: string
          x-go-name: OpUrl
        "1password-vaults":
          description: 1Password list of vault to get the items from
          items:
            type: string
          type: array
          x-go-name: Vaults
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        protection-key:
          description: The name of a key that used to encrypt the secret value
          type: string
          x-go-name: ProtectionKey
        target-location:
          description: Target location in your Akeyless personal folder for migrated
            secrets
          type: string
          x-go-name: TargetLocation
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          default: 1password
          description: Migration type for now only 1password.
          type: string
          x-go-name: MigrationType
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayMigratePersonalItemsOutput:
      properties:
        migration_items:
          $ref: '#/components/schemas/MigrationItems'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayMigrationGetOutput:
      properties:
        body:
          $ref: '#/components/schemas/MigrationsConfigPart'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayMigrationListOutput:
      properties:
        body:
          $ref: '#/components/schemas/MigrationsConfigPart'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayRevokeTmpUsers:
      description: gatewayRevokeTmpUsers is a command that revoke producer tmp user
      properties:
        host:
          description: 'Deprecated: has no effect'
          type: string
          x-go-name: Host
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer Name
          type: string
          x-go-name: ProducerName
        revoke-all:
          description: Revoke All Temp Creds
          type: boolean
          x-go-name: RevokeAll
        soft-delete:
          description: Soft Delete
          type: boolean
          x-go-name: SoftDelete
        tmp-creds-id:
          default: demo_default_tmp_creds_id_for_sdk_bc
          description: Tmp Creds ID
          type: string
          x-go-name: TmpCredsID
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - tmp-creds-id
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayStartProducer:
      description: gatewayStartProducer is a command that starts producer
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayStartProducerOutput:
      properties:
        producer_name:
          type: string
          x-go-name: ProducerName
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayStatusMigration:
      description: gatewayStatusMigration is a command that get migration status
      properties:
        id:
          description: Migration ID
          type: string
          x-go-name: MigrationID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Migration name to display
          type: string
          x-go-name: MigrationName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayStopProducer:
      description: gatewayStopProducer is a command that stops producer
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayStopProducerOutput:
      properties:
        producer_name:
          type: string
          x-go-name: ProducerName
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewaySyncMigration:
      description: gatewaySyncMigration is a command that sync migration
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Migration name
          type: string
          x-go-name: MigrationName
        start-sync:
          description: true, for starting synchronization, false for stopping
          type: boolean
          x-go-name: Sync
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateItem:
      description: gatewayUpdateItem is a command that updates classic key
      properties:
        add-tag:
          description: List of the new tags that will be attached to this item
          items:
            type: string
          type: array
          x-go-name: AddTags
        api-id:
          type: string
          x-go-name: ApiId
        api-key:
          type: string
          x-go-name: ApiKey
        auto-rotate:
          description: Whether to automatically rotate every --rotation-interval days,
            or disable existing automatic rotation
          type: string
          x-go-name: AutoRotate
        custom-payload:
          type: string
          x-go-name: Payload
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          default: default_metadata
          description: Description of the object
          type: string
          x-go-name: Description
        gcp-key:
          description: Base64-encoded service account private key text
          type: string
          x-go-name: ServiceAccountKey
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: The name of a key that used to encrypt the secret value (if
            empty, the account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Item name
          type: string
          x-go-name: ItemName
        new-metadata:
          default: default_metadata
          description: Deprecated - use description
          type: string
          x-go-name: NewMetadata
        new-name:
          description: New item name
          type: string
          x-go-name: NewName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        rm-tag:
          description: List of the existent tags that will be removed from this item
          items:
            type: string
          type: array
          x-go-name: RemoveTags
        rotated-password:
          type: string
          x-go-name: RotatedPassword
        rotated-username:
          type: string
          x-go-name: RotatedUser
        rotation-hour:
          default: 0
          description: The Rotation Hour
          format: int32
          type: integer
          x-go-name: RotationHour
        rotation-interval:
          description: The number of days to wait between every automatic key rotation
            (1-365)
          type: string
          x-go-name: RotationInterval
        rotator-creds-type:
          description: The rotation credentials type
          type: string
          x-go-name: RotatorCredsType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: Item type
          type: string
          x-go-name: ItemType
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateItemOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateK8SAuthConfig:
      description: gatewayUpdateK8SAuth is a command that updates k8s auth config
      properties:
        access-id:
          description: The access ID of the Kubernetes auth method
          type: string
          x-go-name: AuthMethodAccessId
        cluster-api-type:
          default: native_k8s
          description: 'Cluster access type. options: [native_k8s, rancher]'
          type: string
          x-go-name: ClusterApiType
        config-encryption-key-name:
          description: Config encryption key
          type: string
          x-go-name: ConfigEncryptionKey
        disable-issuer-validation:
          description: Disable issuer validation
          type: string
          x-go-name: DisableISSValidation
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        k8s-ca-cert:
          description: The CA Certificate (base64 encoded) to use to call into the
            kubernetes API server
          type: string
          x-go-name: K8SCACert
        k8s-host:
          description: The URL of the kubernetes API server
          type: string
          x-go-name: K8SHost
        k8s-issuer:
          description: The Kubernetes JWT issuer name. If not set, kubernetes/serviceaccount
            will use as an issuer.
          type: string
          x-go-name: K8SIssuer
        name:
          description: K8S Auth config name
          type: string
          x-go-name: K8SAuthConfigName
        new-name:
          description: K8S Auth config new name
          type: string
          x-go-name: K8SAuthConfigNewName
        rancher-api-key:
          description: The api key used to access the TokenReview API to validate
            other JWTs (relevant for "rancher" only)
          type: string
          x-go-name: RancherApiKey
        rancher-cluster-id:
          description: The cluster id as define in rancher (relevant for "rancher"
            only)
          type: string
          x-go-name: RancherClusterId
        signing-key:
          description: The private key (base64 encoded) associated with the public
            key defined in the Kubernetes auth
          type: string
          x-go-name: AuthMethodSigningKey
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        token-exp:
          default: 300
          description: Time in seconds of expiration of the Akeyless Kube Auth Method
            token
          format: int64
          type: integer
          x-go-name: AuthMethodTokenExpiration
        token-reviewer-jwt:
          description: |-
            A Kubernetes service account JWT used to access the TokenReview API to validate other JWTs (relevant for "native_k8s" only).
            If not set, the JWT submitted in the authentication process will be used to access the Kubernetes TokenReview API.
          type: string
          x-go-name: K8STokenReviewerJWT
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - access-id
      - k8s-host
      - name
      - new-name
      - signing-key
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateK8SAuthConfigOutput:
      properties:
        cluster_id:
          type: string
          x-go-name: ClusterId
        parts_change:
          $ref: '#/components/schemas/ConfigChange'
        total_hash:
          type: string
          x-go-name: TotalHash
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateMigration:
      description: gatewayUpdateMigration is a command that update migration
      properties:
        "1password-email":
          description: 1Password user email to connect to the API
          type: string
          x-go-name: OpEmail
        "1password-password":
          description: 1Password user password to connect to the API
          type: string
          x-go-name: OpPassword
        "1password-secret-key":
          description: 1Password user secret key to connect to the API
          type: string
          x-go-name: OpSecretKey
        "1password-url":
          description: 1Password api container url
          type: string
          x-go-name: OpUrl
        "1password-vaults":
          description: 1Password list of vault to get the items from
          items:
            type: string
          type: array
          x-go-name: Vaults
        ad_auto_rotate:
          description: 'Enable/Disable automatic/recurrent rotation for migrated secrets.
            Default is false: only manual rotation is allowed for migrated secrets.
            If set to true, this command should be combined with --ad-rotation-interval
            and --ad-rotation-hour parameters (Relevant only for Active Directory
            migration)'
          type: string
          x-go-name: AdAutoRotate
        ad_computer_base_dn:
          description: 'Distinguished Name of Computer objects (servers) to search
            in Active Directory e.g.: CN=Computers,DC=example,DC=com (Relevant only
            for Active Directory migration)'
          type: string
          x-go-name: AdComputerBaseDN
        ad_discover_local_users:
          description: 'Enable/Disable discovery of local users from each domain server
            and migrate them as SSH Rotated Secrets. Default is false: only domain
            users will be migrated. Discovery of local users might require further
            installation of SSH on the servers, based on the supplied computer base
            DN. This will be implemented automatically as part of the migration process
            (Relevant only for Active Directory migration)'
          type: string
          x-go-name: AdDiscoverLocalUsers
        ad_domain_name:
          description: Active Directory Domain Name (Relevant only for Active Directory
            migration)
          type: string
          x-go-name: AdDomainName
        ad_domain_users_path_template:
          description: 'Path location template for migrating domain users as Rotated
            Secrets e.g.: .../DomainUsers/{{USERNAME}} (Relevant only for Active Directory
            migration)'
          type: string
          x-go-name: AdDomainUsersPathTemplate
        ad_local_users_ignore:
          description: Comma-separated list of Local Users which should not be migrated
            (Relevant only for Active Directory migration)
          type: string
          x-go-name: AdLocalUsersIgnore
        ad_local_users_path_template:
          description: 'Path location template for migrating domain users as Rotated
            Secrets e.g.: .../LocalUsers/{{COMPUTER_NAME}}/{{USERNAME}} (Relevant
            only for Active Directory migration)'
          type: string
          x-go-name: AdLocalUsersPathTemplate
        ad_rotation_hour:
          description: The hour of the scheduled rotation in UTC (Relevant only for
            Active Directory migration)
          format: int32
          type: integer
          x-go-name: AdRotationHour
        ad_rotation_interval:
          description: The number of days to wait between every automatic rotation
            [1-365] (Relevant only for Active Directory migration)
          format: int32
          type: integer
          x-go-name: AdRotationInterval
        ad_sra_enable_rdp:
          description: 'Enable/Disable RDP Secure Remote Access for the migrated local
            users rotated secrets. Default is false: rotated secrets will not be created
            with SRA (Relevant only for Active Directory migration)'
          type: string
          x-go-name: AdSRAEnableRDP
        ad_target_name:
          description: Active Directory LDAP Target Name. Server type should be Active
            Directory (Relevant only for Active Directory migration)
          type: string
          x-go-name: AdTargetName
        ad_targets_path_template:
          description: 'Path location template for migrating domain servers as SSH
            Targets e.g.: .../Servers/{{COMPUTER_NAME}} (Relevant only for Active
            Directory migration)'
          type: string
          x-go-name: AdTargetsPathTemplate
        ad_user_base_dn:
          description: 'Distinguished Name of User objects to search in Active Directory,
            e.g.: CN=Users,DC=example,DC=com (Relevant only for Active Directory migration)'
          type: string
          x-go-name: AdUserBaseDN
        ad_user_groups:
          description: Comma-separated list of domain groups from which privileged
            domain users will be migrated (Relevant only for Active Directory migration)
          type: string
          x-go-name: AdUserGroups
        as_ssh_port:
          description: Set the SSH Port for further connection to the domain servers.
            Default is port 22 (Relevant only for Active Directory migration)
          type: string
          x-go-name: AdSshPort
        aws-key:
          description: AWS Secret Access Key (relevant only for AWS migration)
          type: string
          x-go-name: AwsSecret
        aws-key-id:
          description: AWS Access Key ID with sufficient permissions to get all secrets,
            e.g. 'arn:aws:secretsmanager:[Region]:[AccountId]:secret:[/path/to/secrets/*]'
            (relevant only for AWS migration)
          type: string
          x-go-name: AwsKey
        aws-region:
          description: AWS region of the required Secrets Manager (relevant only for
            AWS migration)
          type: string
          x-go-name: AwsRegion
        azure-client-id:
          description: Azure Key Vault Access client ID, should be Azure AD App with
            a service principal (relevant only for Azure Key Vault migration)
          type: string
          x-go-name: AzureClient
        azure-kv-name:
          description: Azure Key Vault Name (relevant only for Azure Key Vault migration)
          type: string
          x-go-name: AzureName
        azure-secret:
          description: Azure Key Vault secret (relevant only for Azure Key Vault migration)
          type: string
          x-go-name: AzureSecret
        azure-tenant-id:
          description: Azure Key Vault Access tenant ID (relevant only for Azure Key
            Vault migration)
          type: string
          x-go-name: AzureTenant
        gcp-key:
          description: Base64-encoded GCP Service Account private key text with sufficient
            permissions to Secrets Manager, Minimum required permission is Secret
            Manager Secret Accessor, e.g. 'roles/secretmanager.secretAccessor' (relevant
            only for GCP migration)
          type: string
          x-go-name: ServiceAccountKey
        hashi-json:
          description: Import secret key as json value or independent secrets (relevant
            only for HasiCorp Vault migration)
          type: string
          x-go-name: HashiImportAsJson
        hashi-ns:
          description: HashiCorp Vault Namespaces is a comma-separated list of namespaces
            which need to be imported into Akeyless Vault. For every provided namespace,
            all its child namespaces are imported as well, e.g. nmsp/subnmsp1/subnmsp2,nmsp/anothernmsp.
            By default, import all namespaces (relevant only for HasiCorp Vault migration)
          items:
            type: string
          type: array
          x-go-name: HashiNamespaces
        hashi-token:
          description: HashiCorp Vault access token with sufficient permissions to
            preform list & read operations on secrets objects (relevant only for HasiCorp
            Vault migration)
          type: string
          x-go-name: HashiToken
        hashi-url:
          description: HashiCorp Vault API URL, e.g. https://vault-mgr01:8200 (relevant
            only for HasiCorp Vault migration)
          type: string
          x-go-name: HashiUrl
        id:
          description: Migration ID (Can be retrieved with gateway-list-migration
            command)
          type: string
          x-go-name: MigrationID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        k8s-ca-certificate:
          description: |-
            For Certificate Authentication method
            K8s Cluster CA certificate (relevant only for K8s migration with Certificate Authentication method)
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: K8SCA
        k8s-client-certificate:
          description: K8s Client certificate with sufficient permission to list and
            get secrets in the namespace(s) you selected (relevant only for K8s migration
            with Certificate Authentication method)
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: K8SClientCert
        k8s-client-key:
          description: K8s Client key (relevant only for K8s migration with Certificate
            Authentication method)
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: K8SClientKey
        k8s-namespace:
          description: K8s Namespace, Use this field to import secrets from a particular
            namespace only. By default, the secrets are imported from all namespaces
            (relevant only for K8s migration)
          type: string
          x-go-name: K8SNamespace
        k8s-password:
          description: K8s Client password (relevant only for K8s migration with Password
            Authentication method)
          type: string
          x-go-name: K8SPassword
        k8s-skip-system:
          description: K8s Skip Control Plane Secrets, This option allows to avoid
            importing secrets from system namespaces (relevant only for K8s migration)
          type: boolean
          x-go-name: K8SSkipSystem
        k8s-token:
          description: |-
            For Token Authentication method
            K8s Bearer Token with sufficient permission to list and get secrets in the namespace(s) you selected (relevant only for K8s migration with Token Authentication method)
          type: string
          x-go-name: K8SToken
        k8s-url:
          description: K8s API Server URL, e.g. https://k8s-api.mycompany.com:6443
            (relevant only for K8s migration)
          type: string
          x-go-name: K8SServer
        k8s-username:
          description: |-
            For Password Authentication method
            K8s Client username with sufficient permission to list and get secrets in the namespace(s) you selected (relevant only for K8s migration with Password Authentication method)
          type: string
          x-go-name: K8SUsername
        name:
          description: Migration name
          type: string
          x-go-name: MigrationName
        new_name:
          description: New migration name
          type: string
          x-go-name: NewMigrationName
        protection-key:
          description: The name of the key that protects the classic key value (if
            empty, the account default key will be used)
          type: string
          x-go-name: ProtectionKey
        target-location:
          description: Target location in Akeyless for imported secrets
          type: string
          x-go-name: TargetLocation
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - target-location
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerArtifactory:
      description: gatewayUpdateProducerArtifactory is a command that updates artifactory
        producer
      properties:
        artifactory-admin-name:
          description: Artifactory Admin Name
          type: string
          x-go-name: AdminName
        artifactory-admin-pwd:
          description: Artifactory Admin password
          type: string
          x-go-name: AdminPwd
        artifactory-token-audience:
          description: Token Audience
          type: string
          x-go-name: TokenAudience
        artifactory-token-scope:
          description: Token Scope
          type: string
          x-go-name: TokenScope
        base-url:
          description: Base URL
          type: string
          x-go-name: BaseUrl
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - artifactory-token-audience
      - artifactory-token-scope
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerArtifactoryOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerAws:
      description: gatewayUpdateProducerAws is a command that Updates aws producer
      properties:
        access-mode:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
        admin-rotation-interval-days:
          default: 0
          description: Admin credentials rotation interval (days)
          format: int64
          type: integer
          x-go-name: AdminCredsRotationInterval
        aws-access-key-id:
          description: Access Key ID
          type: string
          x-go-name: AccessId
        aws-access-secret-key:
          description: Secret Access Key
          type: string
          x-go-name: AccessKey
        aws-role-arns:
          description: AWS Role ARNs to be used in the Assume Role operation (relevant
            only for assume_role mode)
          type: string
          x-go-name: RoleARNs
        aws-user-console-access:
          default: false
          description: AWS User console access
          type: boolean
          x-go-name: UserConsoleAccess
        aws-user-groups:
          description: AWS User groups
          type: string
          x-go-name: UserGroups
        aws-user-policies:
          description: AWS User policies
          type: string
          x-go-name: UserPolicies
        aws-user-programmatic-access:
          default: true
          description: AWS User programmatic access
          type: boolean
          x-go-name: UserProgrammaticAccess
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        enable-admin-rotation:
          default: false
          description: Automatic admin credentials rotation
          type: boolean
          x-go-name: AutomaticAdminCredsRotation
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        region:
          default: us-east-2
          description: Region
          type: string
          x-go-name: Region
        secure-access-aws-account-id:
          type: string
          x-go-name: SecureAccessAccountId
        secure-access-aws-native-cli:
          type: boolean
          x-go-name: SecureAccessAwsNativeCli
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerAwsOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerAzure:
      description: gatewayUpdateProducerAzure is a command that updates azure producer
      properties:
        app-obj-id:
          description: Azure App Object Id
          type: string
          x-go-name: AppObjId
        azure-client-id:
          description: Azure Client ID
          type: string
          x-go-name: ClientId
        azure-client-secret:
          description: Azure Client Secret
          type: string
          x-go-name: ClientSecret
        azure-tenant-id:
          description: Azure Tenant ID
          type: string
          x-go-name: TenantId
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        fixed-user-claim-keyname:
          default: "false"
          description: FixedUserClaimKeyname
          type: string
          x-go-name: FixedUserClaimKeyname
        fixed-user-only:
          default: false
          description: Fixed user
          type: boolean
          x-go-name: FixedUserOnly
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-group-obj-id:
          description: User Group Object Id
          type: string
          x-go-name: UserGroupObjId
        user-portal-access:
          default: false
          description: Azure User portal access
          type: boolean
          x-go-name: UserPortaAccess
        user-principal-name:
          description: User Principal Name
          type: string
          x-go-name: UserPrincipalName
        user-programmatic-access:
          default: false
          description: Azure User programmatic access
          type: boolean
          x-go-name: UserProgrammaticAccess
        user-role-template-id:
          description: User Role Template Id
          type: string
          x-go-name: UserRoleTemplateId
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerAzureOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerCassandra:
      description: gatewayUpdateProducerCassandra is a command that updates a Cassandra
        producer
      properties:
        cassandra-creation-statements:
          description: Cassandra creation statements
          type: string
          x-go-name: CreationStatements
        cassandra-hosts:
          description: Cassandra hosts IP or addresses, comma separated
          type: string
          x-go-name: Host
        cassandra-password:
          description: Cassandra superuser password
          type: string
          x-go-name: Password
        cassandra-port:
          default: "9042"
          description: Cassandra port
          type: string
          x-go-name: Port
        cassandra-username:
          description: Cassandra superuser username
          type: string
          x-go-name: UserName
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerCassandraOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerCertificateAutomation:
      description: |-
        gatewayUpdateProducerCertificateAutomation is a command that updates a Certificate Automation
        dynamic secret producer to dynamically update certificates generated by Venafi or have
        Akeyless generated certificates using PKI be monitored by Venafi
      properties:
        admin-rotation-interval-days:
          default: 0
          description: Admin credentials rotation interval (days)
          format: int64
          type: integer
          x-go-name: AdminCredsRotationInterval
        allow-subdomains:
          description: Allow subdomains
          type: boolean
          x-go-name: AllowSubdomains
        allowed-domains:
          description: Allowed domains
          items:
            type: string
          type: array
          x-go-name: AllowedDomains
        auto-generated-folder:
          description: Auto generated folder
          type: string
          x-go-name: AutoGeneratedFolder
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        enable-admin-rotation:
          default: false
          description: Automatic admin credentials rotation
          type: boolean
          x-go-name: AutomaticAdminCredsRotation
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        root-first-in-chain:
          description: Root first in chain
          type: boolean
          x-go-name: RootFirstInChain
        sign-using-akeyless-pki:
          description: Use Akeyless PKI issuer or Venafi issuer
          type: boolean
          x-go-name: SignUsingAkeylessPKI
        signer-key-name:
          description: Signer key name
          type: string
          x-go-name: SignerKeyName
        store-private-key:
          description: Store private key
          type: boolean
          x-go-name: StorePrivateKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          description: User TTL in time.Duration format (2160h / 129600m / etc...).
            When using sign-using-akeyless-pki certificates created will have this
            validity period, otherwise the user-ttl is taken from the Validity Period
            field of the Zone's' Issuing Template. When using cert-manager it is advised
            to have a TTL of above 60 days (1440h). For more information - https://cert-manager.io/docs/usage/certificate/
          type: string
          x-go-name: UserTtl
        venafi-api-key:
          description: Venafi API key
          type: string
          x-go-name: VenafiApiKey
        venafi-baseurl:
          description: Venafi Baseurl
          type: string
          x-go-name: VenafiBaseURL
        venafi-password:
          description: Venafi Password
          type: string
          x-go-name: VenafiPassword
        venafi-use-tpp:
          description: Venafi using TPP
          type: boolean
          x-go-name: VenafiUseTPP
        venafi-username:
          description: Venafi Username
          type: string
          x-go-name: VenafiUsername
        venafi-zone:
          description: Venafi Zone
          type: string
          x-go-name: VenafiZone
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerCertificateAutomationOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerChef:
      description: gatewayUpdateProducerChef is a command that updates chef producer
      properties:
        chef-orgs:
          description: Organizations
          type: string
          x-go-name: Organizations
        chef-server-key:
          description: Server key
          type: string
          x-go-name: ServerKey
        chef-server-url:
          description: Server URL
          type: string
          x-go-name: ServerURL
        chef-server-username:
          description: Server username
          type: string
          x-go-name: ServerUsername
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        skip-ssl:
          default: true
          description: Skip SSL
          type: boolean
          x-go-name: SkipSSL
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerChefOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerCustom:
      properties:
        admin_rotation_interval_days:
          description: Define rotation interval in days
          format: int64
          type: integer
          x-go-name: RotationIntervalDays
        create-sync-url:
          description: |-
            URL of an endpoint that implements /sync/create method, for example
            https://webhook.example.com/sync/create
          type: string
          x-go-name: CreateSyncURL
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        enable_admin_rotation:
          default: false
          description: Should admin credentials be rotated
          type: boolean
          x-go-name: EnableAdminRotation
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        payload:
          description: Secret payload to be sent with each create/revoke webhook request
          type: string
          x-go-name: Payload
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        revoke-sync-url:
          description: |-
            URL of an endpoint that implements /sync/revoke method, for example
            https://webhook.example.com/sync/revoke
          type: string
          x-go-name: RevokeSyncURL
        rotate-sync-url:
          description: |-
            URL of an endpoint that implements /sync/rotate method, for example
            https://webhook.example.com/sync/rotate
          type: string
          x-go-name: RotateSyncURL
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        timeout-sec:
          default: 60
          description: Maximum allowed time in seconds for the webhook to return the
            results
          format: int64
          type: integer
          x-go-name: TimeoutSeconds
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTTL
      required:
      - create-sync-url
      - name
      - revoke-sync-url
      title: gatewayUpdateProducerCustom is a command that updates a custom producer.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerCustomOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerDockerhub:
      description: gatewayUpdateProducerDockerhub is a command that updates a DOCKERHUB
        producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        dockerhub-password:
          description: DockerhubPassword is either the user's password access token
            to manage the repository
          type: string
          x-go-name: DockerhubPassword
        dockerhub-token-scopes:
          description: |-
            Access token scopes list (comma-separated) to give the dynamic secret
            valid options are in "repo:admin", "repo:write", "repo:read", "repo:public_read"
          type: string
          x-go-name: TokenScopes
        dockerhub-username:
          description: DockerhubUsername is the name of the user in dockerhub
          type: string
          x-go-name: DockerhubUsername
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerDockerhubOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerEks:
      description: gatewayUpdateProducerEks is a command that updates eks producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        eks-access-key-id:
          description: Access Key ID
          type: string
          x-go-name: AccessId
        eks-assume-role:
          description: IAM assume role
          type: string
          x-go-name: AssumeRole
        eks-cluster-ca-cert:
          description: EKS cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        eks-cluster-endpoint:
          description: EKS cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        eks-cluster-name:
          description: EKS cluster name
          type: string
          x-go-name: ClusterName
        eks-region:
          default: us-east-2
          description: Region
          type: string
          x-go-name: Region
        eks-secret-access-key:
          description: Secret Access Key
          type: string
          x-go-name: AccessKey
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-allow-port-forwading:
          type: boolean
          x-go-name: SecureAccessK8SAllowPortForwading
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-cluster-endpoint:
          type: string
          x-go-name: SecureAccessEndpoint
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 15m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerEksOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerGcp:
      description: gatewayUpdateProducerGcp is a command that updates a GCP producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        gcp-cred-type:
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/producer/config
        gcp-key:
          description: Base64-encoded service account private key text
          type: string
          x-go-name: ServiceAccountKey
        gcp-key-algo:
          description: Service account key algorithm, e.g. KEY_ALG_RSA_1024
          type: string
          x-go-name: KeyAlgorithm
        gcp-sa-email:
          description: The email of the fixed service acocunt to generate keys or
            tokens for. (revelant for service-account-type=fixed)
          type: string
          x-go-name: ServiceAccountEmail
        gcp-token-scopes:
          description: Access token scopes list, e.g. scope1,scope2
          type: string
          x-go-name: TokenScopes
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        role-binding:
          description: Role binding definitions in json format
          type: string
          x-go-name: RoleBindingJson
        service-account-type:
          default: fixed
          description: The type of the gcp dynamic secret. Options[fixed, dynamic]
          type: string
          x-go-name: ServiceAccountType
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      - service-account-type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerGcpOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerGithub:
      description: gatewayUpdateProducerGithub is a command that updates github producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        github-app-id:
          description: Github app id
          format: int64
          type: integer
          x-go-name: AppId
        github-app-private-key:
          description: App private key
          type: string
          x-go-name: AppPrivateKey
        github-base-url:
          description: Base URL
          type: string
          x-go-name: BaseUrl
        installation-id:
          description: Github app installation id
          format: int64
          type: integer
          x-go-name: InstallationId
        installation-repository:
          description: Repository that the app installation has access to
          type: string
          x-go-name: Repository
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        token-permissions:
          description: Optional - installation token's allowed permissions
          items:
            type: string
          type: array
          x-go-name: TokenPermissions
        token-repositories:
          description: Optional - installation token's allowed repositories
          items:
            type: string
          type: array
          x-go-name: TokenRepositories
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerGithubOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerGke:
      description: gatewayUpdateProducerGke is a command that updates gke producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        gke-account-key:
          description: GKE Service Account key file path
          type: string
          x-go-name: ServiceAccountKey
        gke-cluster-cert:
          description: GKE cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        gke-cluster-endpoint:
          description: GKE cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        gke-cluster-name:
          description: GKE cluster name
          type: string
          x-go-name: ClusterName
        gke-service-account-email:
          description: GKE service account email
          type: string
          x-go-name: ServiceAccountEmail
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-allow-port-forwading:
          type: boolean
          x-go-name: SecureAccessK8SAllowPortForwading
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-cluster-endpoint:
          type: string
          x-go-name: SecureAccessEndpoint
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerGkeOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerHanaDb:
      description: gatewayUpdateProducerHanaDb is a command that updates hanadb producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        hana-dbname:
          description: HanaDb Name
          type: string
          x-go-name: DBName
        hanadb-create-statements:
          description: HanaDb Creation statements
          type: string
          x-go-name: CreationStatements
        hanadb-host:
          default: 127.0.0.1
          description: HanaDb Host
          type: string
          x-go-name: DBHost
        hanadb-password:
          description: HanaDb Password
          type: string
          x-go-name: DBPassword
        hanadb-port:
          default: "443"
          description: HanaDb Port
          type: string
          x-go-name: DBPort
        hanadb-revocation-statements:
          description: HanaDb Revocation statements
          type: string
          x-go-name: RevocationStatements
        hanadb-username:
          description: HanaDb Username
          type: string
          x-go-name: DBUsername
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-db-schema:
          type: string
          x-go-name: SecureAccessSchema
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerHanaDbOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerLdap:
      description: gatewayUpdateProducerLdap is a command that updates ldap producer
      properties:
        bind-dn:
          description: Bind DN
          type: string
          x-go-name: BindDn
        bind-dn-password:
          description: Bind DN Password
          type: string
          x-go-name: BindDnPassword
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        external-username:
          default: "false"
          description: Fixed user
          type: string
          x-go-name: FixedUserOnly
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        ldap-ca-cert:
          description: CA Certificate File Content
          type: string
          x-go-name: LdapCACert
        ldap-url:
          description: LDAP Server URL
          type: string
          x-go-name: LdapUrl
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        token-expiration:
          description: Token expiration
          type: string
          x-go-name: TokenExpiration
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-attribute:
          description: User Attribute
          type: string
          x-go-name: UserAttribute
        user-dn:
          description: User DN
          type: string
          x-go-name: UserDn
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerLdapOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerMSSQL:
      description: gatewayUpdateProducerMSSQL is a command that updates mssql producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        mssql-create-statements:
          description: MSSQL Creation statements
          type: string
          x-go-name: CreationStatements
        mssql-dbname:
          description: MSSQL Name
          type: string
          x-go-name: DBName
        mssql-host:
          default: 127.0.0.1
          description: MSSQL Host
          type: string
          x-go-name: DBHost
        mssql-password:
          description: MSSQL Password
          type: string
          x-go-name: DBPassword
        mssql-port:
          default: "1433"
          description: MSSQL Port
          type: string
          x-go-name: DBPort
        mssql-revocation-statements:
          description: MSSQL Revocation statements
          type: string
          x-go-name: RevocationStatements
        mssql-username:
          description: MSSQL Username
          type: string
          x-go-name: DBUsername
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-db-schema:
          type: string
          x-go-name: SecureAccessSchema
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerMSSQLOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerMongo:
      description: gatewayUpdateProducerMongo is a command that updates either mongodb  producer
        or mongodb atlas producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        mongodb-atlas-api-private-key:
          description: MongoDB Atlas private key
          type: string
          x-go-name: MongoAPIPrivateKey
        mongodb-atlas-api-public-key:
          description: MongoDB Atlas public key
          type: string
          x-go-name: MongoAPIPublicKey
        mongodb-atlas-project-id:
          description: MongoDB Atlas project ID
          type: string
          x-go-name: MongoProjectID
        mongodb-custom-data:
          description: MongoDB custom data
          type: string
          x-go-name: CustomData
        mongodb-default-auth-db:
          description: MongoDB server default authentication database
          type: string
          x-go-name: MongoDefaultAuthDB
        mongodb-host-port:
          description: MongoDB server host and port
          type: string
          x-go-name: MongoHostAndPort
        mongodb-name:
          description: MongoDB Name
          type: string
          x-go-name: DBName
        mongodb-password:
          description: MongoDB server password. You will prompted to provide a password
            if it will not appear in CLI parameters
          type: string
          x-go-name: MongoPassword
        mongodb-roles:
          default: '[]'
          description: MongoDB Roles
          type: string
          x-go-name: Roles
        mongodb-server-uri:
          description: MongoDB server URI
          type: string
          x-go-name: MongoServerURI
        mongodb-uri-options:
          description: MongoDB server URI options
          type: string
          x-go-name: MongoURIOptions
        mongodb-username:
          description: MongoDB server username
          type: string
          x-go-name: MongoUsername
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Encrypt producer with following key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerMongoOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerMySQL:
      description: gatewayUpdateProducerMySQL is a command that updates mysql producer
      properties:
        db-server-certificates:
          description: (Optional) DB server certificates
          type: string
          x-go-name: DBServerCertificates
        db-server-name:
          description: (Optional) Server name for certificate verification
          type: string
          x-go-name: DBServerName
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        mysql-dbname:
          description: MySQL DB Name
          type: string
          x-go-name: DBName
        mysql-host:
          default: 127.0.0.1
          description: MySQL Host
          type: string
          x-go-name: DBHost
        mysql-password:
          description: MySQL Password
          type: string
          x-go-name: DBPassword
        mysql-port:
          default: "3306"
          description: MySQL Port
          type: string
          x-go-name: DBPort
        mysql-screation-statements:
          description: MySQL Creation statements
          type: string
          x-go-name: CreationStatements
        mysql-username:
          description: MySQL Username
          type: string
          x-go-name: DBUsername
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        ssl:
          description: SSL connection mode
          type: boolean
          x-go-name: SSLConnection
        ssl-certificate:
          description: SSL connection certificate
          type: string
          x-go-name: SSLConnectionCertificate
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerMySQLOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerNativeK8S:
      description: gatewayUpdateProducerNativeK8S is a command that updates k8s producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        k8s-cluster-ca-cert:
          description: K8S cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        k8s-cluster-endpoint:
          description: K8S cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        k8s-cluster-token:
          description: K8S cluster Bearer token
          type: string
          x-go-name: ClusterBearerToken
        k8s-namespace:
          description: K8S namespace
          type: string
          x-go-name: Namespace
        k8s-service-account:
          description: K8S service account
          type: string
          x-go-name: ServiceAccount
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-allow-port-forwading:
          type: boolean
          x-go-name: SecureAccessK8SAllowPortForwading
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-cluster-endpoint:
          type: string
          x-go-name: SecureAccessEndpoint
        secure-access-dashboard-url:
          type: string
          x-go-name: SecureAccessDashboardURL
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerNativeK8SOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerOracleDb:
      description: gatewayUpdateProducerOracleDb is a command that updates oracle
        db producer
      properties:
        db-server-certificates:
          description: (Optional) DB server certificates
          type: string
          x-go-name: DBServerCertificates
        db-server-name:
          description: (Optional) Server name for certificate verification
          type: string
          x-go-name: DBServerName
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        oracle-host:
          default: 127.0.0.1
          description: Oracle Host
          type: string
          x-go-name: DBHost
        oracle-password:
          description: Oracle Password
          type: string
          x-go-name: DBPassword
        oracle-port:
          default: "1521"
          description: Oracle Port
          type: string
          x-go-name: DBPort
        oracle-screation-statements:
          description: Oracle Creation statements
          type: string
          x-go-name: CreationStatements
        oracle-service-name:
          description: Oracle DB Name
          type: string
          x-go-name: DBName
        oracle-username:
          description: Oracle Username
          type: string
          x-go-name: DBUsername
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerOracleDbOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerPing:
      description: gatewayUpdateProducerPing is a command that updates Ping producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer New name
          type: string
          x-go-name: ProducerNewName
        ping-administrative-port:
          default: "9999"
          description: Ping Federate administrative port
          type: string
          x-go-name: AdministrativePort
        ping-atm-id:
          description: Set a specific Access Token Management (ATM) instance for the
            created OAuth Client by providing the ATM Id. If no explicit value is
            given, the default pingfederate server ATM will be set.
          type: string
          x-go-name: AccessTokenManagerId
        ping-authorization-port:
          default: "9031"
          description: Ping Federate authorization port
          type: string
          x-go-name: AuthorizationPort
        ping-cert-subject-dn:
          description: The subject DN of the client certificate. If no explicit value
            is given, the producer will create CA certificate and matched client certificate
            and return it as value. Used in conjunction with ping-issuer-dn (relevant
            for CLIENT_TLS_CERTIFICATE authentication method)
          type: string
          x-go-name: CertSubjectDN
        ping-client-authentication-type:
          default: CLIENT_SECRET
          description: OAuth Client Authentication Type [CLIENT_SECRET, PRIVATE_KEY_JWT,
            CLIENT_TLS_CERTIFICATE]
          type: string
          x-go-name: ClientAuthenticationType
        ping-enforce-replay-prevention:
          description: Determines whether PingFederate requires a unique signed JWT
            from the client for each action (relevant for PRIVATE_KEY_JWT authentication
            method)
          type: string
          x-go-name: EnforceReplayPrevention
        ping-grant-types:
          description: List of OAuth client grant types [IMPLICIT, AUTHORIZATION_CODE,
            CLIENT_CREDENTIALS, TOKEN_EXCHANGE, REFRESH_TOKEN, ASSERTION_GRANTS, PASSWORD,
            RESOURCE_OWNER_CREDENTIALS]. If no explicit value is given, AUTHORIZATION_CODE
            will be selected as default.
          items:
            type: string
          type: array
          x-go-name: GrantTypes
        ping-issuer-dn:
          description: Issuer DN of trusted CA certificate that imported into Ping
            Federate server. You may select \"Trust Any\" to trust all the existing
            issuers in Ping Federate server. Used in conjunction with ping-cert-subject-dn
            (relevant for CLIENT_TLS_CERTIFICATE authentication method)
          type: string
          x-go-name: IssuerDN
        ping-jwks:
          description: 'Base64-encoded JSON Web Key Set (JWKS). If no explicit value
            is given, the producer will create JWKs and matched signed JWT (Sign Algo:
            RS256) and return it as value (relevant for PRIVATE_KEY_JWT authentication
            method)'
          type: string
          x-go-name: JWKs
        ping-jwks-url:
          description: The URL of the JSON Web Key Set (JWKS). If no explicit value
            is given, the producer will create JWKs and matched signed JWT and return
            it as value (relevant for PRIVATE_KEY_JWT authentication method)
          type: string
          x-go-name: JWKsURL
        ping-password:
          description: Ping Federate privileged user password
          type: string
          x-go-name: UserPassword
        ping-privileged-user:
          description: Ping Federate privileged user
          type: string
          x-go-name: PrivilegedUser
        ping-redirect-uris:
          description: List of URIs to which the OAuth authorization server may redirect
            the resource owner's user agent after authorization is obtained. At least
            one redirection URI is required for the AUTHORIZATION_CODE and IMPLICIT
            grant types.
          items:
            type: string
          type: array
          x-go-name: RedirectUris
        ping-restricted-scopes:
          description: Limit the OAuth client to specific scopes list
          items:
            type: string
          type: array
          x-go-name: RestrictedScopes
        ping-signing-algo:
          description: The signing algorithm that the client must use to sign its
            request objects [RS256,RS384,RS512,ES256,ES384,ES512,PS256,PS384,PS512]
            If no explicit value is given, the client can use any of the supported
            signing algorithms (relevant for PRIVATE_KEY_JWT authentication method)
          type: string
          x-go-name: SigningAlgorithm
        ping-url:
          description: Ping URL
          type: string
          x-go-name: PingURL
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: The time from dynamic secret creation to expiration.
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerPingOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerPostgreSQL:
      description: gatewayUpdateProducerPostgreSQL is a command that updates postgresql
        producer
      properties:
        creation-statements:
          description: PostgreSQL Creation statements
          type: string
          x-go-name: CreationStatements
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        postgresql-db-name:
          description: PostgreSQL DB Name
          type: string
          x-go-name: DBName
        postgresql-host:
          default: 127.0.0.1
          description: PostgreSQL Host
          type: string
          x-go-name: DBHost
        postgresql-password:
          description: PostgreSQL Password
          type: string
          x-go-name: DBPassword
        postgresql-port:
          default: "5432"
          description: PostgreSQL Port
          type: string
          x-go-name: DBPort
        postgresql-username:
          description: PostgreSQL Username
          type: string
          x-go-name: DBUsername
        producer-encryption-key:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        revocation-statement:
          description: PostgreSQL Revocation statements
          type: string
          x-go-name: RevocationStatements
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-db-schema:
          type: string
          x-go-name: SecureAccessSchema
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-web:
          type: boolean
          x-go-name: AccessWebCategory
        ssl:
          description: SSL connection mode
          type: boolean
          x-go-name: SSLConnection
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerPostgreSQLOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerRabbitMQ:
      description: gatewayUpdateProducerRabbitMQ is a command that updates rabbitmq
        producer
      properties:
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        rabbitmq-admin-pwd:
          description: RabbitMQ Admin password
          type: string
          x-go-name: AdminPwd
        rabbitmq-admin-user:
          description: RabbitMQ Admin User
          type: string
          x-go-name: AdminUser
        rabbitmq-server-uri:
          description: Server URI
          type: string
          x-go-name: ServerURI
        rabbitmq-user-conf-permission:
          description: User configuration permission
          type: string
          x-go-name: UserConfPermission
        rabbitmq-user-read-permission:
          description: User read permission
          type: string
          x-go-name: UserReadPermission
        rabbitmq-user-tags:
          description: User Tags
          type: string
          x-go-name: UserTags
        rabbitmq-user-vhost:
          description: User Virtual Host
          type: string
          x-go-name: UserVHost
        rabbitmq-user-write-permission:
          description: User write permission
          type: string
          x-go-name: UserWritePermission
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-url:
          type: string
          x-go-name: SecureAccessURL
        secure-access-web:
          default: true
          description: Secure Access Web Category
          type: boolean
          x-go-name: AccessWebCategory
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerRabbitMQOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerRdp:
      description: gatewayUpdateProducerRdp is a command that updates rdp producer
      properties:
        allow-user-extend-session:
          description: AllowUserExtendSession
          format: int64
          type: integer
          x-go-name: AllowUserExtendSession
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        fixed-user-only:
          default: "false"
          description: Fixed user
          type: string
          x-go-name: FixedUserOnly
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key-name:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        rdp-admin-name:
          description: RDP Admin Name
          type: string
          x-go-name: AdminName
        rdp-admin-pwd:
          description: RDP Admin password
          type: string
          x-go-name: AdminPwd
        rdp-host-name:
          description: Hostname
          type: string
          x-go-name: Hostname
        rdp-host-port:
          default: "22"
          description: Port
          type: string
          x-go-name: HostPort
        rdp-user-groups:
          description: Groups
          type: string
          x-go-name: UserGroups
        secure-access-allow-external-user:
          type: boolean
          x-go-name: SecureAccessAllowProvidingExternalUser
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-rdp-domain:
          type: string
          x-go-name: SecureAccessDomain
        secure-access-rdp-user:
          type: string
          x-go-name: SecureAccessOverrideUser
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
        warn-user-before-expiration:
          description: WarnBeforeUserExpiration
          format: int64
          type: integer
          x-go-name: WarnBeforeUserExpiration
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerRdpOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerRedshift:
      description: gatewayUpdateProducerRedshift is a command that updates redshift
        producer
      properties:
        creation-statements:
          description: Redshift Creation statements
          type: string
          x-go-name: CreationStatements
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        producer-encryption-key:
          description: Dynamic producer encryption key
          type: string
          x-go-name: ProducerEncryptionKey
        redshift-db-name:
          description: Redshift DB Name
          type: string
          x-go-name: DBName
        redshift-host:
          default: 127.0.0.1
          description: Redshift Host
          type: string
          x-go-name: DBHost
        redshift-password:
          description: Redshift Password
          type: string
          x-go-name: DBPassword
        redshift-port:
          default: "5439"
          description: Redshift Port
          type: string
          x-go-name: DBPort
        redshift-username:
          description: Redshift Username
          type: string
          x-go-name: DBUsername
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        ssl:
          description: SSL connection mode
          type: boolean
          x-go-name: SSLConnection
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 60m
          description: User TTL
          type: string
          x-go-name: UserTtl
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerRedshiftOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerSnowflake:
      description: GatewayUpdateProducerSnowflakeCmd is a command that updates a Snowflake
        producer
      properties:
        account:
          description: Account name
          type: string
          x-go-name: Account
        account-password:
          description: Database Password
          type: string
          x-go-name: DBPassword
        account-username:
          description: Database Username
          type: string
          x-go-name: DBUsername
        db-name:
          description: Database name
          type: string
          x-go-name: DBName
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer name
          type: string
          x-go-name: ProducerName
        new-name:
          description: Producer name
          type: string
          x-go-name: ProducerNewName
        private-key:
          description: RSA Private key (base64 encoded)
          type: string
          x-go-name: PrivateKey
        private-key-passphrase:
          description: The Private key passphrase
          type: string
          x-go-name: PrivateKeyPassphrase
        role:
          description: User role
          type: string
          x-go-name: Role
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        target-name:
          description: Target name
          type: string
          x-go-name: TargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user-ttl:
          default: 24h
          description: User TTL
          type: string
          x-go-name: UserTtl
        warehouse:
          description: Warehouse name
          type: string
          x-go-name: Warehouse
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateProducerSnowflakeOutput:
      properties:
        producer_details:
          $ref: '#/components/schemas/DSProducerDetails'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    gatewayUpdateTmpUsers:
      description: gatewayUpdateTmpUsers is a command that returns gateway configuration
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Producer Name
          type: string
          x-go-name: ProducerName
        new-ttl-min:
          description: New TTL in Minutes
          format: int64
          type: integer
          x-go-name: NewTTL
        tmp-creds-id:
          description: Tmp Creds ID
          type: string
          x-go-name: TmpCredsID
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - new-ttl-min
      - tmp-creds-id
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    genCustomerFragment:
      properties:
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
      title: genCustomerFragment is a command that generates customer fragment.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getAccountSettings:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: getAccountSettings is a command that returns account settings.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getAuthMethod:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getAuthMethod is a command that returns information about the auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getCertificateValue:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Certificate name
          type: string
          x-go-name: CertificateName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: Certificate version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - name
      title: getCertificateValue is a command that gets a certificate value.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getDynamicSecretValue:
      properties:
        args:
          description: |-
            Optional arguments as key=value pairs or JSON strings, e.g -
            \"--args=csr=base64_encoded_csr --args=common_name=bar\" or
            args='{\"csr\":\"base64_encoded_csr\"}. It is possible to combine both
            formats.'
          items:
            type: string
          type: array
          x-go-name: Arguments
        host:
          description: Host
          type: string
          x-go-name: Host
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Dynamic secret name
          type: string
          x-go-name: DynamicSecretName
        target:
          description: Target Name
          type: string
          x-go-name: TargetName
        timeout:
          default: 15
          description: Timeout in seconds
          format: int64
          type: integer
          x-go-name: TimeoutSec
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getDynamicSecretValue is a command that gets dynamic secret value.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getEventForwarder:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: EventForwarder name
          type: string
          x-go-name: EventForwarderName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getEventForwarder is a command that creates a new event forwarder.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getEventForwarderOutput:
      properties:
        event_forwarder:
          $ref: '#/components/schemas/NotiForwarder'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getKubeExecCreds:
      description: |-
        getKubeExecCreds is a command that gets credentials for authentication with
        Kubernetes cluster based on a PKI cert issuer.
      properties:
        alt-names:
          description: |-
            The Subject Alternative Names to be included in the PKI certificate (in
            a comma-separated list) (if CSR is supplied this flag is ignored and any DNS.* names are taken from it)
          type: string
          x-go-name: AltNames
        cert-issuer-name:
          description: The name of the PKI certificate issuer
          type: string
          x-go-name: CertIssuerName
        common-name:
          description: The common name to be included in the PKI certificate (if CSR
            is supplied this flag is ignored and the CSR subject CN is taken)
          type: string
          x-go-name: CommonName
        csr-data-base64:
          description: Certificate Signing Request contents encoded in base64 to generate
            the certificate with
          type: string
          x-go-name: CSRData
        extended-key-usage:
          description: 'A comma-separated list of extended key usage requests which
            will be used for certificate issuance. Supported values: ''clientauth'',
            ''serverauth''.'
          type: string
          x-go-name: ExtKeyUsage
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-data-base64:
          description: |-
            PKI key file contents. If this option is used, the certificate
            will be printed to stdout
          type: string
          x-go-name: KeyData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: Updated certificate lifetime in seconds (must be less than
            the Certificate Issuer default TTL)
          format: int64
          type: integer
          x-go-name: Ttl
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        uri-sans:
          description: |-
            The URI Subject Alternative Names to be included in the PKI certificate
            (in a comma-separated list) (if CSR is supplied this flag is ignored and any URI.* names are taken from it)
          type: string
          x-go-name: URISANs
      required:
      - cert-issuer-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getKubeExecCredsOutput:
      properties:
        apiVersion:
          type: string
          x-go-name: APIVersion
        kind:
          type: string
          x-go-name: Kind
        status:
          $ref: '#/components/schemas/clientData'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getPKICertificateOutput:
      properties:
        data:
          type: string
          x-go-name: Data
        parent_cert:
          type: string
          x-go-name: ParentCert
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getRSAPublic:
      description: |-
        getRSAPublic is a command that obtains the public key from a specific RSA
        private key.
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Name of RSA key to extract the public key from
          type: string
          x-go-name: KeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getRSAPublicOutput:
      properties:
        pem:
          type: string
          x-go-name: PEM
        raw:
          type: string
          x-go-name: Raw
        ssh:
          type: string
          x-go-name: SSH
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getRole:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Role name
          type: string
          x-go-name: RoleName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getRole is a command that returns role details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getRotatedSecretValue:
      properties:
        ignore-cache:
          description: |-
            Ignore Cache
            Retrieve the Secret value without checking the Gateway's cache [true/false]. This flag is only relevant when using the RestAPI
          type: string
          x-go-name: IgnoreCache
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        names:
          description: Secret name
          type: string
          x-go-name: Names
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: Secret version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - names
      title: getRotatedSecretValue is a command that creates a new Akeyless profile.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getSSHCertificate:
      properties:
        cert-issuer-name:
          description: The name of the SSH certificate issuer
          type: string
          x-go-name: CertIssuerName
        cert-username:
          description: The username to sign in the SSH certificate
          type: string
          x-go-name: Username
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        legacy-signing-alg-name:
          description: Set this option to output legacy ('ssh-rsa-cert-v01@openssh.com')
            signing algorithm name in the certificate.
          type: boolean
          x-go-name: LegacySigningAlgName
        public-key-data:
          description: |-
            SSH public key file contents. If this option is used, the certificate
            will be printed to stdout
          type: string
          x-go-name: PublicKeyData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: Updated certificate lifetime in seconds (must be less than
            the Certificate Issuer default TTL)
          format: int64
          type: integer
          x-go-name: Ttl
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - cert-issuer-name
      - cert-username
      title: getSSHCertificate is a command that generates SSH certificate.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getSSHCertificateOutput:
      properties:
        data:
          type: string
          x-go-name: Data
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getTags:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Item name
          type: string
          x-go-name: ItemName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getTags is a command that returns the items tags.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getTarget:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        show-versions:
          default: false
          description: Include all target versions in reply
          type: boolean
          x-go-name: ShowVersions
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getTarget is a command that returns target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getTargetDetails:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        show-versions:
          default: false
          description: Include all target versions in reply
          type: boolean
          x-go-name: ShowVersions
        target-version:
          description: Target version
          format: int32
          type: integer
          x-go-name: TargetVersion
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getTargetDetails is a command that returns target details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipClientDeleteRule:
      properties:
        client-id:
          type: string
          x-go-name: ClientID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          type: string
          x-go-name: ClientName
        path:
          description: Access path
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      title: kmipClientDeleteRule is a command that deletes an RBAC rule from a client.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipClientSetRule:
      properties:
        capability:
          description: Access capabilities
          items:
            type: string
          type: array
          x-go-name: Capabilities
        client-id:
          type: string
          x-go-name: ClientID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          type: string
          x-go-name: ClientName
        path:
          description: Access path
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - capability
      - path
      title: kmipClientSetRule is a command that adds a new RBAC rule to a client.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipCreateClient:
      properties:
        activate-keys-on-creation:
          type: string
          x-go-name: ActivateKeysOnCreation
        certificate-ttl:
          format: int64
          type: integer
          x-go-name: CertificateTTL
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Client name
          type: string
          x-go-name: ClientName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: kmipCreateClient is a command that creates a new KMIP client.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipCreateClientOutput:
      properties:
        certificate:
          type: string
          x-go-name: Certificate
        id:
          type: string
          x-go-name: ID
        key:
          type: string
          x-go-name: Key
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipDeleteClient:
      properties:
        client-id:
          type: string
          x-go-name: ClientID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          type: string
          x-go-name: ClientName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: kmipDeleteClient is a command that deletes a KMIP client.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipDeleteClientOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipDeleteServer:
      description: |-
        kmipDeleteServer is a command that the kmip server
        (allowed only if it has no clients nor associated items)
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipDeleteServerOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipDescribeClient:
      properties:
        client-id:
          type: string
          x-go-name: ClientID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          type: string
          x-go-name: ClientName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: kmipDescribeClient is a command that shows KMIP client details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipDescribeServer:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: kmipDescribeServer is a command that shows KMIP environment details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipDescribeServerOutput:
      properties:
        active:
          type: boolean
          x-go-name: Active
        ca_cert:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: CACert
        certificate_issue_date:
          format: date-time
          type: string
          x-go-name: CertificateIssueDate
        certificate_ttl_in_seconds:
          format: int64
          type: integer
          x-go-name: CertificateTTLInSeconds
        hostname:
          type: string
          x-go-name: Hostname
        root:
          type: string
          x-go-name: Root
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipListClients:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: kmipListClients is a command that shows existing KMIP clients.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipMoveServer:
      description: |-
        kmipMoveServer is a command that Moves the root location of the kmip server
        and all associated items to a new root location
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        new-root:
          type: string
          x-go-name: NewRoot
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipMoveServerOutput:
      properties:
        new_root:
          type: string
          x-go-name: NewRoot
        old_root:
          type: string
          x-go-name: OldRoot
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipRenewClientCertificate:
      properties:
        client-id:
          type: string
          x-go-name: ClientID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          type: string
          x-go-name: ClientName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: kmipRenewClientCertificate is a command that renews KMIP client certificate.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipRenewClientCertificateOutput:
      properties:
        certificate:
          type: string
          x-go-name: Certificate
        id:
          type: string
          x-go-name: ID
        key:
          type: string
          x-go-name: Key
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipRenewServerCertificate:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: kmipRenewServerCertificate is a command that renews KMIP server certificate.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipRenewServerCertificateOutput:
      properties:
        ca_cert:
          type: string
          x-go-name: CACert
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipServerSetup:
      properties:
        certificate-ttl:
          format: int64
          type: integer
          x-go-name: CertificateTTL
        hostname:
          description: Hostname
          type: string
          x-go-name: Hostname
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        root:
          type: string
          x-go-name: Root
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - hostname
      title: kmipServerSetup is a command that creates a new KMIP environment.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipSetServerState:
      description: |-
        kmipSetServerState is a command that sets the environment state to
        active/inactive.
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        state:
          type: string
          x-go-name: State
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - state
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    kmipSetServerStateOutput:
      properties:
        is_active:
          type: boolean
          x-go-name: IsActive
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listAuthMethods:
      description: |-
        listAuthMethods is a command that returns a list of all auth methods in the
        account.
      properties:
        filter:
          description: Filter by auth method name or part of it
          type: string
          x-go-name: Filter
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        pagination-token:
          description: Next page reference
          type: string
          x-go-name: PaginationToken
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: |-
            The Auth method types list of the requested method. In case it is empty, all
            types of auth methods will be returned. options: [api_key, azure_ad, oauth2/jwt, saml2,
            ldap, aws_iam, oidc, universal_identity, gcp, k8s, cert]
          items:
            type: string
          type: array
          x-go-name: Types
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listGateways:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: listGateways is a command that returns a list of gateways.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listItems:
      properties:
        accessibility:
          default: regular
          description: for personal password manager
          type: string
          x-go-name: ItemAccessibilityString
        filter:
          description: Filter by item name or part of it
          type: string
          x-go-name: Filter
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        minimal-view:
          type: boolean
          x-go-name: BasicData
        pagination-token:
          description: Next page reference
          type: string
          x-go-name: PaginationToken
        path:
          description: Path to folder
          type: string
          x-go-name: Path
        sub_types:
          items:
            type: string
          type: array
          x-go-name: SubTypes
        tag:
          description: Filter by item tag
          type: string
          x-go-name: Tag
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: |-
            The item types list of the requested items. In case it is empty, all
            types of items will be returned. options: [key, static-secret,
            dynamic-secret, classic-key]
          items:
            type: string
          type: array
          x-go-name: Types
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: listItems is a command that returns items list.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listRoles:
      properties:
        filter:
          description: Filter by item name or part of it
          type: string
          x-go-name: Filter
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        pagination-token:
          description: Next page reference
          type: string
          x-go-name: PaginationToken
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: listRoles is a command that returns a list of roles.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listSRABastions:
      properties:
        allowed-urls-only:
          type: boolean
          x-go-name: BastionsAllowedURLsOnly
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: listSRABastions is a command that returns a list of bastions.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listSharedItems:
      description: listSharedItems is a command to list all the items been shared
      properties:
        accessibility:
          default: regular
          description: for personal password manager
          type: string
          x-go-name: ItemAccessibilityString
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listTargets:
      properties:
        filter:
          description: Filter by auth method name or part of it
          type: string
          x-go-name: Filter
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        pagination-token:
          description: Next page reference
          type: string
          x-go-name: PaginationToken
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: |-
            The target types list . In case it is empty, all
            types of targets will be returned. options: [hanadb cassandra aws ssh gke eks mysql mongodb snowflake mssql redshift artifactory azure rabbitmq k8s venafi gcp oracle dockerhub ldap github chef web salesforce postgres]
          items:
            type: string
          type: array
          x-go-name: Types
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: listTargets is a command that returns a list of targets.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    moveObjects:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        objects-type:
          default: item
          description: The objects type to move (item/auth_method/role)
          type: string
          x-go-name: ObjectsType
        source:
          description: Source path to move the objects from
          type: string
          x-go-name: SourcePath
        target:
          description: Target path to move the objects to
          type: string
          x-go-name: TargetPath
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - source
      - target
      title: moveObjects is a command that moves/renames objects.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    moveObjectsOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    rawCreds:
      properties:
        access-id:
          type: string
          x-go-name: AccessID
        access-key:
          type: string
          x-go-name: AccessKey
      title: rawCreds is a command that returns raw Akeyless access credentials.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    refreshKey:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Key name
          type: string
          x-go-name: KeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: refreshKey is a command that refreshes a key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    refreshKeyOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    requestAccess:
      properties:
        capability:
          description: 'List of the required capabilities options: [read, update,
            delete]'
          items:
            type: string
          type: array
          x-go-name: Capabilities
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Item type
          type: string
          x-go-name: ItemType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - capability
      - name
      title: requestAccess is a command that requests access for an item.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    requestAccessOutput:
      properties:
        response:
          type: string
          x-go-name: Response
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    reverseRBAC:
      description: |-
        reverseRBAC is a command that shows which auth methods have access to a
        particular object.
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        path:
          description: Path to an object
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: Type of object (item, am, role)
          type: string
          x-go-name: Type
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      - type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    revokeCreds:
      description: |-
        revokeCreds will permanently revoke the credentials associated with the
        provided token or profile.
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    revokeCredsOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    rollbackSecret:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Secret name
          type: string
          x-go-name: SecretName
        old-version:
          description: Old secret version to rollback to
          format: int32
          type: integer
          x-go-name: OldSecretVersion
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - old-version
      title: rollbackSecret is a command that rollbacks secret to older version.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    rollbackSecretOutput:
      properties:
        name:
          type: string
          x-go-name: Name
        version:
          format: int32
          type: integer
          x-go-name: Version
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    rotateKey:
      description: of it.
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Key name
          type: string
          x-go-name: KeyName
        new-cert-pem-data:
          description: |-
            The new pem encoded certificate for the classic key.
            relevant only for keys provided by user ('bring-your-own-key')
          type: string
          x-go-name: NewCertPemData
        new-key-data:
          description: |-
            The new base64 encoded value for the classic key.
            relevant only for keys provided by user ('bring-your-own-key')
          type: string
          x-go-name: NewKeyData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: rotateKey is a command that rotates an existing key, by creating a new
        version of the key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    rotateSecret:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Secret name (Rotated Secret or Custom Dynamic Secret)
          type: string
          x-go-name: SecretName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: rotateSecret is a command that trigger a rotate operation for a Rotated
        Secret or Custom Dynamic Secret..
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    setItemState:
      properties:
        desired-state:
          description: Desired item state (Enabled, Disabled)
          type: string
          x-go-name: State
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Current item name
          type: string
          x-go-name: ItemName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          default: 0
          description: 'The specific version you want to update: 0=item level state
            (default)'
          format: int32
          type: integer
          x-go-name: Version
      required:
      - desired-state
      - name
      title: setItemState is a command that sets item's state to enabled/disabled.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    setItemStateOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    setRoleRule:
      properties:
        capability:
          description: |-
            List of the approved/denied capabilities in the path options: [read,
            create, update, delete, list, deny]
          items:
            type: string
          type: array
          x-go-name: Capabilities
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        path:
          description: The path the rule refers to
          type: string
          x-go-name: Path
        role-name:
          description: The role name to be updated
          type: string
          x-go-name: RoleName
        rule-type:
          default: item-rule
          description: item-rule, target-rule, role-rule, auth-method-rule, search-rule,
            reports-rule, gw-reports-rule or sra-reports-rule
          type: string
          x-go-name: RuleType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: RoleRule ttl
          format: int32
          type: integer
          x-go-name: RuleTTL
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - capability
      - path
      - role-name
      title: setRoleRule is a command that sets a rule to a role.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    setRoleRuleOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    shareItem:
      properties:
        accessibility:
          default: regular
          description: for personal password manager
          type: string
          x-go-name: ItemAccessibilityString
        action:
          description: Action to be performed on the item [start/stop/describe]
          type: string
          x-go-name: Action
        emails:
          description: For Password Management use, reflect the website context
          items:
            type: string
          type: array
          x-go-name: Emails
        item-name:
          description: Item name
          type: string
          x-go-name: ItemName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: TTL of the Availability of the shared secret in seconds
          format: int32
          type: integer
          x-go-name: TTL
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        view-once:
          default: false
          description: ViewOnlyOnce Shared secrets can only be viewed once [true/false]
          type: boolean
          x-go-name: ViewOnlyOnce
      required:
      - action
      - item-name
      title: shareItem is a command to start/stop/describe sharing a given item with
        user that don't use akeyless.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signGPG:
      properties:
        display-id:
          description: The display id of the key to use in the encryption process
          type: string
          x-go-name: DisplayId
        item-id:
          description: The item id of the key to use in the encryption process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the key to use in the encryption process
          type: string
          x-go-name: KeyName
        message:
          description: The message to be signed in base64 format
          type: string
          x-go-name: Message
        passphrase:
          description: Passphrase that was used to generate the key
          type: string
          x-go-name: Passphrase
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      - message
      title: signGPG is a command that calculates the GPG signature of a message using
        RSA key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signGPGOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signJWTOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signJWTWithClassicKey:
      properties:
        display-id:
          description: The name of the key to use in the sign JWT process
          type: string
          x-go-name: DisplayId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-claims:
          description: JWTClaims
          type: string
          x-go-name: JWTClaims
        signing-method:
          description: SigningMethod
          type: string
          x-go-name: SigningMethod
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: classic key version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - display-id
      - jwt-claims
      - signing-method
      - version
      title: signJWTWithClassicKey is a command that signs JWT by using an Classic
        key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signPKCS1:
      description: |-
        signPKCS1 is a command that calculates the signature of hashed data using
        RSASSA-PKCS1-V1_5-SIGN from RSA PKCS#1 v1.5.
      properties:
        display-id:
          description: The display id of the key to use in the signing process
          type: string
          x-go-name: DisplayId
        item-id:
          description: The item id of the key to use in the signing process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the RSA key to use in the signing process
          type: string
          x-go-name: KeyName
        message:
          description: The message to be signed
          type: string
          x-go-name: Message
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - message
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signPKCS1Output:
      properties:
        result:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signPKICertOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signPKICertWithClassicKey:
      properties:
        common-name:
          description: The common name to be included in the PKI certificate
          type: string
          x-go-name: CommonName
        country:
          description: |-
            A comma-separated list of the country that will be set in the issued
            certificate
          type: string
          x-go-name: Country
        display-id:
          description: The name of the key to use in the sign PKI Cert process
          type: string
          x-go-name: DisplayId
        dns-names:
          description: DNS Names to be included in the PKI certificate (in a comma-delimited
            list)
          type: string
          x-go-name: DNSNames
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-usage:
          default: DigitalSignature,KeyAgreement,KeyEncipherment
          description: key-usage
          type: string
          x-go-name: KeyUsage
        locality:
          description: |-
            A comma-separated list of the locality that will be set in the issued
            certificate
          type: string
          x-go-name: Locality
        organizational-units:
          description: |-
            A comma-separated list of organizational units (OU) that will be set in
            the issued certificate
          type: string
          x-go-name: OrganizationalUnits
        organizations:
          description: |-
            A comma-separated list of organizations (O) that will be set in the
            issued certificate
          type: string
          x-go-name: Organizations
        postal-code:
          description: |-
            A comma-separated list of the postal code that will be set in the issued
            certificate
          type: string
          x-go-name: PostalCode
        province:
          description: |-
            A comma-separated list of the province that will be set in the issued
            certificate
          type: string
          x-go-name: Province
        public-key-pem-data:
          description: PublicKey using for signing in a PEM format.
          type: string
          x-go-name: PublicKeyPEMData
        signing-method:
          description: SigningMethod
          type: string
          x-go-name: SigningMethod
        street-address:
          description: |-
            A comma-separated list of the street address that will be set in the
            issued certificate
          type: string
          x-go-name: StreetAddress
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: he requested Time To Live for the certificate, in seconds
          format: int64
          type: integer
          x-go-name: TTL
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        uri-sans:
          description: The URI Subject Alternative Names to be included in the PKI
            certificate (in a comma-delimited list)
          type: string
          x-go-name: URISANs
        version:
          description: classic key version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - display-id
      - signing-method
      - ttl
      - version
      title: signPKICertWithClassicKey is a command that signs PKI certificate by
        using an Classic key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    staticCredsAuth:
      description: |-
        staticCredsAuth is a command that creates a temporary access profile using
        the provided static credentials.
      properties:
        access-id:
          description: Akeyless JWT token
          type: string
          x-go-name: AccessID
        admin-email:
          description: Akeyless JWT token
          type: string
          x-go-name: AdminEmail
        creds:
          description: Akeyless JWT token
          type: string
          x-go-name: Creds
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    staticCredsAuthOutput:
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    tokenize:
      description: tokenize is a command that encrypts text with a tokenizer
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        plaintext:
          description: Data to be encrypted
          type: string
          x-go-name: Plaintext
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        tokenizer-name:
          description: The name of the tokenizer to use in the encryption process
          type: string
          x-go-name: TokenizerName
        tweak:
          description: Base64 encoded tweak for vaultless encryption
          type: string
          x-go-name: Tweak
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - plaintext
      - tokenizer-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    tokenizeOutput:
      properties:
        result:
          type: string
          x-go-name: Result
        tweak:
          type: string
          x-go-name: Tweak
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidCreateChildToken:
      description: |-
        uidCreateChildToken is a command that creates a new child token using
        Akeyless Universal Identity.
      properties:
        auth-method-name:
          description: The universal identity auth method name, required only when
            uid-token is not provided
          type: string
          x-go-name: AuthMethodName
        child-deny-inheritance:
          description: Deny from new child to create their own children
          type: boolean
          x-go-name: ChildDenyInheritance
        child-deny-rotate:
          description: Deny from new child to rotate
          type: boolean
          x-go-name: ChildDenyRotate
        child-ttl:
          description: New child token ttl
          format: int32
          type: integer
          x-go-name: ChildTTL
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        uid-token-id:
          description: The ID of the uid-token, required only when uid-token is not
            provided
          type: string
          x-go-name: UIDTokenId
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidCreateChildTokenOutput:
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidGenerateToken:
      description: |-
        uidGenerateToken is a command that generates a new token using Akeyless
        Universal Identity.
      properties:
        auth-method-name:
          description: The universal identity auth method name
          type: string
          x-go-name: AuthMethodName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - auth-method-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidGenerateTokenOutput:
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidListChildren:
      description: |-
        uidListChildren is a command that lists child token ids of Akeyless
        Universal Identity.
      properties:
        auth-method-name:
          description: The universal identity auth method name, required only when
            uid-token is not provided
          type: string
          x-go-name: AuthMethodName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidRevokeToken:
      properties:
        auth-method-name:
          description: The universal identity auth method name
          type: string
          x-go-name: AuthMethodName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        revoke-token:
          description: the universal identity token/token-id to revoke
          type: string
          x-go-name: RevokeToken
        revoke-type:
          description: |-
            revokeSelf/revokeAll (delete only this token/this token and his
            children)
          type: string
          x-go-name: RevokeType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - revoke-token
      - revoke-type
      title: uidRevokeToken is a command that revokes universal identity token.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidRevokeTokenOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidRotateToken:
      description: |-
        uidRotateToken is a command that rotates an Akeyless Universal Identity
        token.
      properties:
        fork:
          description: Create a new child token with default parameters
          type: boolean
          x-go-name: Fork
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        send-manual-ack-token:
          description: |-
            The new rotated token to send manual ack for (with
            uid-token=the-orig-token)
          type: string
          x-go-name: SendManualAckToken
        uid-token:
          description: The Universal identity token
          type: string
          x-go-name: UIDToken
        with-manual-ack:
          description: Disable automatic ack
          type: boolean
          x-go-name: WithManualAck
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidRotateTokenOutput:
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    unconfigure:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        profile:
          default: default
          description: The profile name to be removed
          type: string
          x-go-name: Profile
      title: unconfigure is a command that removes configuration of client profile.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    unconfigureOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    update:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        version:
          description: Version
          type: string
          x-go-name: Version
      title: update is a command that updates to the latest AKEYLESS CLI version.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAWSTarget:
      properties:
        access-key:
          type: string
          x-go-name: AWSSecretAccessKey
        access-key-id:
          type: string
          x-go-name: AWSAccessKeyID
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        region:
          type: string
          x-go-name: AWSRegion
        session-token:
          type: string
          x-go-name: AWSSessionToken
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
        use-gw-cloud-identity:
          type: boolean
          x-go-name: AWSUseDefaultIdentity
      required:
      - name
      title: updateAWSTarget is a command that updates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAWSTargetDetails:
      properties:
        access-key:
          type: string
          x-go-name: AWSSecretAccessKey
        access-key-id:
          type: string
          x-go-name: AWSAccessKeyID
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        protection_key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        region:
          type: string
          x-go-name: AWSRegion
        session-token:
          type: string
          x-go-name: AWSSessionToken
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateAWSTargetDetails is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAWSTargetOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAccountSettings:
      properties:
        address:
          description: Address
          type: string
          x-go-name: Address
        city:
          description: City
          type: string
          x-go-name: City
        company-name:
          description: Company name
          type: string
          x-go-name: CompanyName
        country:
          description: Country
          type: string
          x-go-name: Country
        default-versioning:
          description: Should create version by default
          type: string
          x-go-name: CreateVersionByDefault
        dp-enable-classic-key-protection:
          description: Enable classic key protection ["true"/"false"]
          type: string
          x-go-name: EnableClassicKeyProtection
        item-type:
          description: VersionSettingsObjectType defines object types for account
            version settings
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl-default:
          description: Default ttl
          format: int64
          type: integer
          x-go-name: JwtTtlDefault
        jwt-ttl-max:
          description: Maximum ttl
          format: int64
          type: integer
          x-go-name: JwtTtlMax
        jwt-ttl-min:
          description: Minimum ttl
          format: int64
          type: integer
          x-go-name: JwtTtlMin
        max-versions:
          description: Max versions
          type: string
          x-go-name: MaxVersions
        password-length:
          description: For PasswordPolicy use
          format: int64
          type: integer
          x-go-name: PasswordLength
        phone:
          description: Phone number
          type: string
          x-go-name: Phone
        postal-code:
          description: Postal code
          type: string
          x-go-name: PostalCode
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        use-lower-letters:
          description: For PasswordPolicy use
          type: string
          x-go-name: UseLowerLetters
        use-numbers:
          description: For PasswordPolicy use
          type: string
          x-go-name: UseNumbers
        use-special-characters:
          description: For PasswordPolicy use
          type: string
          x-go-name: UseSpecialCharacters
        use_capital-letters:
          description: For PasswordPolicy use
          type: string
          x-go-name: UseCapitalLetters
      title: updateAccountSettings is a command that updates an existing account settings.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAccountSettingsOutput:
      properties:
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateArtifactoryTarget:
      properties:
        artifactory-admin-name:
          description: Artifactory Admin Name
          type: string
          x-go-name: AdminName
        artifactory-admin-pwd:
          description: Artifactory Admin password
          type: string
          x-go-name: AdminPwd
        base-url:
          description: Base URL
          type: string
          x-go-name: BaseUrl
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
      required:
      - artifactory-admin-name
      - artifactory-admin-pwd
      - base-url
      - name
      title: updateArtifactoryTarget is a command that updates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateArtifactoryTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAssoc:
      description: |-
        updateAssoc is a command that updates the sub-claims of an association between role
        and auth method.
      properties:
        assoc-id:
          description: The association id to be updated
          type: string
          x-go-name: AssocID
        case-sensitive:
          type: string
          x-go-name: IsSubClaimsCaseSensitive
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        sub-claims:
          additionalProperties:
            type: string
          description: key/val of sub claims, e.g group=admins,developers
          type: object
          x-go-name: SubClaims
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - assoc-id
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAssocOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethod:
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateAuthMethod is a command that updates a api key auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodAWSIAM:
      description: |-
        updateAuthMethodAWSIAM is a command that updates a new Auth Method that will
        be able to authenticate using AWS IAM credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-arn:
          description: A list of full arns that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundArn
        bound-aws-account-id:
          description: A list of AWS account-IDs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundAccountID
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-resource-id:
          description: A list of full resource ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundResourceID
        bound-role-id:
          description: A list of full role ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundRoleID
        bound-role-name:
          description: A list of full role-name that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundRoleName
        bound-user-id:
          description: A list of full user ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserID
        bound-user-name:
          description: A list of full user-name that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserName
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        sts-url:
          default: https://sts.amazonaws.com
          description: sts URL
          type: string
          x-go-name: STSEndpoint
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - bound-aws-account-id
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodAWSIAMOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodAzureAD:
      description: |-
        updateAuthMethodAzureAD is a command that updates a new auth method that
        will be able to authenticate using Azure Active Directory credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          default: https://management.azure.com/
          description: The audience in the JWT
          type: string
          x-go-name: Audience
        bound-group-id:
          description: A list of group ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundGroupIDs
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-providers:
          description: |-
            A list of resource providers that the access is restricted to (e.g,
            Microsoft.Compute, Microsoft.ManagedIdentity, etc)
          items:
            type: string
          type: array
          x-go-name: BoundResourceProviders
        bound-resource-id:
          description: A list of full resource ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundResourceIds
        bound-resource-names:
          description: |-
            A list of resource names that the access is restricted to (e.g, a
            virtual machine name, scale set name, etc).
          items:
            type: string
          type: array
          x-go-name: BoundResourceNames
        bound-resource-types:
          description: |-
            A list of resource types that the access is restricted to (e.g,
            virtualMachines, userAssignedIdentities, etc)
          items:
            type: string
          type: array
          x-go-name: BoundResourceTypes
        bound-rg-id:
          description: A list of resource groups that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundResourceGroups
        bound-spid:
          description: A list of service principal IDs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: BoundServicePrincipalIDs
        bound-sub-id:
          description: A list of subscription ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundSubscriptionsIDs
        bound-tenant-id:
          description: The Azure tenant id that the access is restricted to
          type: string
          x-go-name: BoundTenantID
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        issuer:
          default: https://sts.windows.net/---bound_tenant_id---
          description: Issuer URL
          type: string
          x-go-name: Issuer
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwks-uri:
          default: https://login.microsoftonline.com/common/discovery/keys
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - bound-tenant-id
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodAzureADOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodCert:
      description: |-
        updateAuthMethodCert is a command that updates a new auth method that
        will be able to authenticate using a client certificae
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-common-names:
          description: A list of names. At least one must exist in the Common Name.
            Supports globbing.
          items:
            type: string
          type: array
          x-go-name: BoundCommonNames
        bound-dns-sans:
          description: A list of DNS names. At least one must exist in the SANs. Supports
            globbing.
          items:
            type: string
          type: array
          x-go-name: BoundDnsSans
        bound-email-sans:
          description: A list of Email Addresses. At least one must exist in the SANs.
            Supports globbing.
          items:
            type: string
          type: array
          x-go-name: BoundEmailSans
        bound-extensions:
          description: A list of extensions formatted as "oid:value". Expects the
            extension value to be some type of ASN1 encoded string. All values much
            match. Supports globbing on "value".
          items:
            type: string
          type: array
          x-go-name: BoundExtensions
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-organizational-units:
          description: A list of Organizational Units names. At least one must exist
            in the OU field.
          items:
            type: string
          type: array
          x-go-name: BoundOrganizationalUnits
        bound-uri-sans:
          description: A list of URIs. At least one must exist in the SANs. Supports
            globbing.
          items:
            type: string
          type: array
          x-go-name: BoundUriSans
        certificate-data:
          description: The certificate data in base64, if no file was provided
          type: string
          x-go-name: CertificateData
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        revoked-cert-ids:
          description: A list of revoked cert ids
          items:
            type: string
          type: array
          x-go-name: RevokedCertIds
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured, such as common_name or organizational_unit
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - name
      - unique-identifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodCertOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodGCP:
      description: |-
        updateAuthMethodGCP is a command that updates a new auth method that
        will be able to authenticate using GCP IAM Service Account credentials
        or GCE instance credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          default: akeyless.io
          description: The audience to verify in the JWT received by the client
          type: string
          x-go-name: Audience
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-labels:
          description: |-
            A comma-separated list of GCP labels formatted as "key:value" strings that must be set on authorized GCE instances.
            TODO: Because GCP labels are not currently ACL'd ....
          items:
            type: string
          type: array
          x-go-name: BoundLabels
        bound-projects:
          description: |-
            === Human and Machine authentication section ===
            Array of GCP project IDs. Only entities belonging to any of the provided projects can authenticate.
          items:
            type: string
          type: array
          x-go-name: BoundProjects
        bound-regions:
          description: |-
            List of regions that a GCE instance must belong to in order to be authenticated.
            TODO: If bound_instance_groups is provided, it is assumed to be a regional group and the group must belong to this region. If bound_zones are provided, this attribute is ignored.
          items:
            type: string
          type: array
          x-go-name: BoundRegions
        bound-service-accounts:
          description: List of service accounts the service account must be part of
            in order to be authenticated.
          items:
            type: string
          type: array
          x-go-name: BoundServiceAccounts
        bound-zones:
          description: |-
            === Machine authentication section ===
            List of zones that a GCE instance must belong to in order to be authenticated.
            TODO: If bound_instance_groups is provided, it is assumed to be a zonal group and the group must belong to this zone.
          items:
            type: string
          type: array
          x-go-name: BoundZones
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        service-account-creds-data:
          description: ServiceAccount credentials data instead of giving a file path,
            base64 encoded
          type: string
          x-go-name: ServiceAccountCredsFileData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: Type of the GCP Access Rules
          type: string
          x-go-name: Type
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - audience
      - name
      - type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodGCPOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodK8S:
      description: |-
        updateAuthMethodK8S is a command that updates a new auth method that will
        be able to authenticate using K8S.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          description: The audience in the Kubernetes JWT that the access is restricted
            to
          type: string
          x-go-name: Audience
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-namespaces:
          description: A list of namespaces that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundNamespaces
        bound-pod-names:
          description: A list of pod names that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundPodNames
        bound-sa-names:
          description: A list of service account names that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: BoundServiceAccountNames
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gen-key:
          description: Automatically generate key-pair for K8S configuration. If set
            to false, a public key needs to be provided
          type: string
          x-go-name: GenerateKeyPair
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        public-key:
          description: Base64-encoded or PEM formatted public key data for K8S authentication
            method is required [RSA2048]
          type: string
          x-go-name: PublicKey
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodK8SOutput:
      properties:
        prv_key:
          type: string
          x-go-name: PrivateKey
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodLDAP:
      description: |-
        updateAuthMethodLDAP is a command that updates a new auth method that will
        be able to authenticate using LDAP.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gen-key:
          description: Automatically generate key-pair for LDAP configuration. If
            set to false, a public key needs to be provided
          type: string
          x-go-name: GenerateKeyPair
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        public-key-data:
          description: |-
            A public key generated for LDAP authentication method on Akeyless in base64 or PEM format
            [RSA2048]
          type: string
          x-go-name: PublicKeyData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured for OAuth2,
            LDAP and SAML authentication method types and is usually a value such
            as the email, username, or upn for example.
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodLDAPOutput:
      properties:
        prv_key:
          type: string
          x-go-name: PrivateKey
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodOAuth2:
      description: |-
        updateAuthMethodOAuth2 is a command that updates a new auth method that will
        be able to authenticate using Oauth2.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          description: The audience in the JWT
          type: string
          x-go-name: Audience
        bound-client-ids:
          description: The clients ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundClientID
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwks-uri:
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured for OAuth2,
            LDAP and SAML authentication method types and is usually a value such
            as the email, username, or upn for example.
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - jwks-uri
      - name
      - unique-identifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodOAuth2Output:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodOIDC:
      description: |-
        updateAuthMethodOIDC is a command that updates a new auth method that will
        be available to authenticate using OIDC.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        allowed-redirect-uri:
          description: Allowed redirect URIs after the authentication
          items:
            type: string
          type: array
          x-go-name: AllowedRedirectURIs
        audience:
          description: Audience claim to be used as part of the authentication flow.
            In case set, it must match the one configured on the Identity Provider's
            Application
          type: string
          x-go-name: Audience
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        client-id:
          description: Client ID
          type: string
          x-go-name: ClientID
        client-secret:
          description: Client Secret
          type: string
          x-go-name: ClientSecret
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        required-scopes:
          description: RequiredScopes is a list of required scopes that the oidc method
            will request from the oidc provider and the user must approve
          items:
            type: string
          type: array
          x-go-name: RequiredScopes
        required-scopes-prefix:
          description: RequiredScopesPrefix is a a prefix to add to all required-scopes
            when requesting them from the oidc server (for example, azures' Application
            ID URI)
          type: string
          x-go-name: RequiredScopesPrefix
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured for OIDC, OAuth2,
            LDAP and SAML authentication method types and is usually a value such
            as the email, username, or upn for example.
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - name
      - unique-identifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodOIDCOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodSAML:
      description: |-
        updateAuthMethodSAML is a command that updates a new auth method that will
        be available to authenticate using SAML.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        allowed-redirect-uri:
          description: Allowed redirect URIs after the authentication
          items:
            type: string
          type: array
          x-go-name: AllowedRedirectURIs
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        idp-metadata-url:
          description: IDP metadata url
          type: string
          x-go-name: IDPMetadataURL
        idp-metadata-xml-data:
          description: IDP metadata xml data
          type: string
          x-go-name: IDPMetadataXMLData
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        unique-identifier:
          description: |-
            A unique identifier (ID) value should be configured for OAuth2,
            LDAP and SAML authentication method types and is usually a value such
            as the email, username, or upn for example.
            Whenever a user logs in with a token, these authentication types issue
            a "sub claim" that contains details uniquely identifying that user.
            This sub claim includes a key containing the ID value that you
            configured, and is used to distinguish between different users from
            within the same organization.
          type: string
          x-go-name: UniqueIdentifier
      required:
      - name
      - unique-identifier
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodSAMLOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodUniversalIdentity:
      description: |-
        updateAuthMethodUniversalIdentity is a command that updates a new auth
        method that will be able to authenticate using Akeyless Universal Identity.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        deny-inheritance:
          description: Deny from root to create children
          type: boolean
          x-go-name: BoundDenyInheritance
        deny-rotate:
          description: Deny from the token to rotate
          type: boolean
          x-go-name: BoundDenyRotate
        force-sub-claims:
          description: 'if true: enforce role-association must include sub claims'
          type: boolean
          x-go-name: ForceSubClaims
        gw-bound-ips:
          description: A CIDR whitelist with the GW IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: GWCIDRWhitelist
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt-ttl:
          description: Jwt TTL
          format: int64
          type: integer
          x-go-name: JwtTtl
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        new-name:
          description: Auth Method new name
          type: string
          x-go-name: AuthMethodNewName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          default: 60
          description: Token ttl
          format: int32
          type: integer
          x-go-name: BoundTTL
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAuthMethodUniversalIdentityOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAzureTarget:
      properties:
        client-id:
          type: string
          x-go-name: AzureClientID
        client-secret:
          type: string
          x-go-name: AzureClientSecret
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        resource-group-name:
          description: The Resource Group name in your Azure subscription
          type: string
          x-go-name: AzureResourceGroupName
        resource-name:
          description: The name of the relevant Resource
          type: string
          x-go-name: AzureResourceName
        subscription-id:
          description: Azure Subscription Id
          type: string
          x-go-name: AzureSubscriptionId
        tenant-id:
          type: string
          x-go-name: AzureTenantID
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
        use-gw-cloud-identity:
          type: boolean
          x-go-name: AzureUseDefaultIdentity
      required:
      - name
      title: updateAzureTarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateAzureTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateCertificateOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateCertificateValue:
      properties:
        certificate-data:
          description: Content of the certificate PEM in a Base64 format.
          type: string
          x-go-name: CertificateData
        expiration-event-in:
          description: How many days before the expiration of the certificate would
            you like to be notified.
          items:
            type: string
          type: array
          x-go-name: ExpirationEventsInDays
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key:
          description: |-
            The name of a key to use to encrypt the certificate's key (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        key-data:
          description: Content of the certificate's private key PEM in a Base64 format.
          type: string
          x-go-name: PrivateKeyData
        name:
          description: Certificate name
          type: string
          x-go-name: CertificateName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateCertificateValue is a command that updates a certificate.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateDBTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        db-name:
          type: string
          x-go-name: DbName
        db-server-certificates:
          description: (Optional) DB server certificates
          type: string
          x-go-name: DBServerCertificates
        db-server-name:
          description: (Optional) Server name for certificate verification
          type: string
          x-go-name: DBServerName
        db-type:
          title: TargetType ..
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        host:
          type: string
          x-go-name: DbHostName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        mongodb-atlas:
          type: boolean
          x-go-name: MongoDBAtlas
        mongodb-atlas-api-private-key:
          description: MongoDB Atlas private key
          type: string
          x-go-name: MongoAPIPrivateKey
        mongodb-atlas-api-public-key:
          description: MongoDB Atlas public key
          type: string
          x-go-name: MongoAPIPublicKey
        mongodb-atlas-project-id:
          description: MongoDB Atlas project ID
          type: string
          x-go-name: MongoProjectID
        mongodb-default-auth-db:
          description: MongoDB server default authentication database
          type: string
          x-go-name: MongoDefaultAuthDB
        mongodb-uri-options:
          description: MongoDB server URI options
          type: string
          x-go-name: MongoURIOptions
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        oracle-service-name:
          type: string
          x-go-name: OracleServiceName
        port:
          type: string
          x-go-name: DbPort
        pwd:
          type: string
          x-go-name: DbPwd
        snowflake-account:
          type: string
          x-go-name: SnowflakeAccount
        snowflake-api-private-key:
          description: RSA Private key (base64 encoded)
          type: string
          x-go-name: SnowflakeAPIPrivateKey
        snowflake-api-private-key-password:
          description: The Private key passphrase
          type: string
          x-go-name: SnowflakeAPIPrivateKeyPass
        ssl:
          description: SSL connection mode
          type: boolean
          x-go-name: SSLConnection
        ssl-certificate:
          description: SSL connection certificate
          type: string
          x-go-name: SSLConnectionCertificate
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
        user-name:
          type: string
          x-go-name: DbUserName
      required:
      - db-type
      - name
      title: updateDBTarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateDBTargetDetails:
      properties:
        db_type:
          type: string
          x-go-name: DbType
        host_name:
          type: string
          x-go-name: DbHostName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        mongo_db_name:
          type: string
          x-go-name: MongoDBName
        mongo_uri:
          type: string
          x-go-name: MongoDBURIConnection
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        port:
          type: string
          x-go-name: DbPort
        protection_key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        pwd:
          type: string
          x-go-name: DbPwd
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        user_name:
          type: string
          x-go-name: DbUserName
      required:
      - name
      title: updateDBTargetDetails is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateDBTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateDockerhubTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        dockerhub-password:
          type: string
          x-go-name: DockerhubPassword
        dockerhub-username:
          type: string
          x-go-name: DockerhubUsername
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
      required:
      - name
      title: updateDockerhubTarget is a command that updates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateDockerhubTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateEKSTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        eks-access-key-id:
          description: Access Key ID
          type: string
          x-go-name: AccessId
        eks-cluster-ca-cert:
          description: EKS cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        eks-cluster-endpoint:
          description: EKS cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        eks-cluster-name:
          description: EKS cluster name
          type: string
          x-go-name: ClusterName
        eks-region:
          default: us-east-2
          description: Region
          type: string
          x-go-name: Region
        eks-secret-access-key:
          description: Secret Access Key
          type: string
          x-go-name: AccessKey
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
        use-gw-cloud-identity:
          type: boolean
          x-go-name: UseDefaultIdentity
      required:
      - eks-access-key-id
      - eks-cluster-ca-cert
      - eks-cluster-endpoint
      - eks-cluster-name
      - eks-secret-access-key
      - name
      title: updateEKSTarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateEKSTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateEventForwarder:
      properties:
        admin-name:
          description: Workstation Admin Name
          type: string
          x-go-name: AdminName
        description:
          default: default_comment
          description: Description of the object
          type: string
          x-go-name: Description
        email-to:
          description: A comma seperated list of email addresses to send event to
            (relevant only for \"email\" Event Forwarder)
          type: string
          x-go-name: EmailTo
        enable:
          description: Enable
          type: string
          x-go-name: Enable
        event-source-locations:
          description: Event sources
          items:
            type: string
          type: array
          x-go-name: EventSources
        event-types:
          description: Event types
          items:
            type: string
          type: array
          x-go-name: EventTypes
        host:
          description: Workstation Host
          type: string
          x-go-name: Host
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: EventForwarder name
          type: string
          x-go-name: EventForwarderName
        new-comment:
          default: default_comment
          description: Deprecated - use description
          type: string
          x-go-name: NewComment
        new-name:
          description: New EventForwarder name
          type: string
          x-go-name: NewName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateEventForwarder is a command that updates an event forwarder.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateEventForwarderOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateGKETarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        gke-account-key:
          description: GKE Service Account key file path
          type: string
          x-go-name: ServiceAccountKey
        gke-cluster-cert:
          description: GKE cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        gke-cluster-endpoint:
          description: GKE cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        gke-cluster-name:
          description: GKE cluster name
          type: string
          x-go-name: ClusterName
        gke-service-account-email:
          description: GKE service account email
          type: string
          x-go-name: ServiceAccountEmail
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
        use-gw-cloud-identity:
          type: boolean
          x-go-name: UseDefaultIdentity
      required:
      - name
      title: updateGKETarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateGKETargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateGcpTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        gcp-key:
          description: Base64-encoded service account private key text
          type: string
          x-go-name: ServiceAccountKey
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
        use-gw-cloud-identity:
          type: boolean
          x-go-name: GCPUseDefaultIdentity
      required:
      - name
      title: updateGcpTarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateGcpTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateGithubTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        github-app-id:
          description: Github app id
          format: int64
          type: integer
          x-go-name: AppId
        github-app-private-key:
          description: App private key
          type: string
          x-go-name: AppPrivateKey
        github-base-url:
          description: Base URL
          type: string
          x-go-name: BaseUrl
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
      required:
      - name
      title: updateGithubTarget is a command that updates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateGithubTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateItem:
      properties:
        accessibility:
          default: regular
          description: for personal password manager
          type: string
          x-go-name: ItemAccessibilityString
        add-tag:
          description: List of the new tags that will be attached to this item
          items:
            type: string
          type: array
          x-go-name: AddTags
        cert-file-data:
          description: PEM Certificate in a Base64 format. Used for updating RSA keys'
            certificates.
          type: string
          x-go-name: CertFileData
        delete_protection:
          type: string
          x-go-name: ItemProtected
        description:
          default: default_metadata
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Current item name
          type: string
          x-go-name: ItemName
        new-metadata:
          default: default_metadata
          description: Deprecated - use description
          type: string
          x-go-name: NewMetadata
        new-name:
          description: New item name
          type: string
          x-go-name: NewName
        rm-tag:
          description: List of the existent tags that will be removed from this item
          items:
            type: string
          type: array
          x-go-name: RemoveTags
        secure-access-add-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessAddHost
        secure-access-allow-external-user:
          type: string
          x-go-name: SecureAccessAllowProvidingExternalUser
        secure-access-allow-port-forwading:
          type: boolean
          x-go-name: SecureAccessK8SAllowPortForwading
        secure-access-aws-account-id:
          type: string
          x-go-name: SecureAccessAccountId
        secure-access-aws-native-cli:
          type: boolean
          x-go-name: SecureAccessAwsNativeCli
        secure-access-aws-region:
          type: string
          x-go-name: SecureAccessAwsRegion
        secure-access-bastion-api:
          type: string
          x-go-name: SecureAccessBastionAPI
        secure-access-bastion-issuer:
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-bastion-ssh:
          type: string
          x-go-name: SecureAccessBastionSSH
        secure-access-cluster-endpoint:
          type: string
          x-go-name: SecureAccessEndpoint
        secure-access-dashboard-url:
          type: string
          x-go-name: SecureAccessDashboardURL
        secure-access-db-name:
          type: string
          x-go-name: SecureAccessDBName
        secure-access-db-schema:
          type: string
          x-go-name: SecureAccessSchema
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-rdp-domain:
          type: string
          x-go-name: SecureAccessDomain
        secure-access-rdp-user:
          type: string
          x-go-name: SecureAccessOverrideUser
        secure-access-rm-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessRemoveHost
        secure-access-ssh-creds:
          type: string
          x-go-name: SecureAccessSSHCategory
        secure-access-ssh-creds-user:
          type: string
          x-go-name: SecureAccessSSHUser
        secure-access-url:
          type: string
          x-go-name: SecureAccessURL
        secure-access-use-internal-bastion:
          type: boolean
          x-go-name: SecureAccessUseInternalBastion
        secure-access-web-browsing:
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          type: boolean
          x-go-name: SecureAccessWebProxy
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateItem is a command that updates item.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateItemOutput:
      properties:
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateLdapTarget:
      properties:
        bind-dn:
          type: string
          x-go-name: BindDn
        bind-dn-password:
          type: string
          x-go-name: BindDnPassword
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        ldap-ca-cert:
          type: string
          x-go-name: LdapCACert
        ldap-url:
          type: string
          x-go-name: LdapUrl
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        server-type:
          description: Set Ldap server type, Options:[OpenLDAP, ActiveDirectory]
          type: string
          x-go-name: ServerType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        token-expiration:
          type: string
          x-go-name: TokenExpiration
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
      required:
      - name
      title: updateLdapTarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateLdapTargetDetails:
      properties:
        bind-dn:
          type: string
          x-go-name: BindDn
        bind-dn-password:
          type: string
          x-go-name: BindDnPassword
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          type: string
          x-go-name: ProtectionKey
        ldap-ca-cert:
          type: string
          x-go-name: LdapCACert
        ldap-url:
          type: string
          x-go-name: LdapUrl
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        protection_key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        token-expiration:
          type: string
          x-go-name: TokenExpiration
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateLdapTargetDetails is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateLdapTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateNativeK8STarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        k8s-cluster-ca-cert:
          description: K8S cluster CA certificate
          type: string
          x-go-name: ClusterCACert
        k8s-cluster-endpoint:
          description: K8S cluster URL endpoint
          type: string
          x-go-name: ClusterEndpoint
        k8s-cluster-token:
          description: K8S cluster Bearer token
          type: string
          x-go-name: ClusterBearerToken
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
      required:
      - k8s-cluster-ca-cert
      - k8s-cluster-endpoint
      - k8s-cluster-token
      - name
      title: updateNativeK8STarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateNativeK8STargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateOutput:
      properties:
        changelog:
          type: string
          x-go-name: Changelog
        latest:
          type: string
          x-go-name: Latest
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updatePKICertIssuerOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updatePingTarget:
      properties:
        administrative-port:
          default: "9999"
          description: Ping Federate administrative port
          type: string
          x-go-name: AdministrativePort
        authorization-port:
          default: "9031"
          description: Ping Federate authorization port
          type: string
          x-go-name: AuthorizationPort
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        password:
          description: Ping Federate privileged user password
          type: string
          x-go-name: UserPassword
        ping-url:
          description: Ping URL
          type: string
          x-go-name: PingURL
        privileged-user:
          description: Ping Federate privileged user
          type: string
          x-go-name: PrivilegedUser
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
      required:
      - name
      title: updatePingTarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updatePingTargetOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRDPTargetDetails:
      properties:
        admin_name:
          type: string
          x-go-name: AdminName
        admin_pwd:
          type: string
          x-go-name: AdminPwd
        host_name:
          type: string
          x-go-name: HostName
        host_port:
          type: string
          x-go-name: HostPort
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        protection_key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateRDPTargetDetails is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRabbitMQTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        rabbitmq-server-password:
          type: string
          x-go-name: RabbitmqServerPassword
        rabbitmq-server-uri:
          type: string
          x-go-name: RabbitmqServerURI
        rabbitmq-server-user:
          type: string
          x-go-name: RabbitmqServerUser
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
      required:
      - name
      title: updateRabbitMQTarget is a command that updates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRabbitMQTargetDetails:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        protection_key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        rabbitmq_server_password:
          type: string
          x-go-name: RabbitmqServerPassword
        rabbitmq_server_uri:
          type: string
          x-go-name: RabbitmqServerURI
        rabbitmq_server_user:
          type: string
          x-go-name: RabbitmqServerUser
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateRabbitMQTargetDetails is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRabbitMQTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRole:
      properties:
        analytics-access:
          description: |-
            Allow this role to view analytics. Currently only 'none', 'own', 'all'
            values are supported, allowing associated auth methods to view reports
            produced by the same auth methods.
          type: string
          x-go-name: AnalyticsAccess
        audit-access:
          description: |-
            Allow this role to view audit logs. Currently only 'none', 'own' and 'all'
            values are supported, allowing associated auth methods to view audit
            logs produced by the same auth methods.
          type: string
          x-go-name: AuditAccess
        description:
          default: default_comment
          description: Description of the object
          type: string
          x-go-name: Description
        gw-analytics-access:
          description: |-
            Allow this role to view gw analytics. Currently only 'none', 'own', 'all'
            values are supported, allowing associated auth methods to view reports
            produced by the same auth methods.
          type: string
          x-go-name: GwAnalyticsAccess
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Role name
          type: string
          x-go-name: RoleName
        new-comment:
          default: default_comment
          description: Deprecated - use description
          type: string
          x-go-name: NewComment
        new-name:
          description: New Role name
          type: string
          x-go-name: NewName
        sra-reports-access:
          description: |-
            Allow this role to view SRA Clusters. Currently only 'none', 'own',
            'all' values are supported.
          type: string
          x-go-name: SRAReportsAccess
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateRole is a command that updates an existing role.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRoleOutput:
      properties:
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRotatedSecret:
      description: 'updateRotatedSecret is a command that updates rotated secret.
        [Deprecated: Use gateway-update-item command]'
      properties:
        add-tag:
          description: List of the new tags that will be attached to this item
          items:
            type: string
          type: array
          x-go-name: AddTags
        api-id:
          type: string
          x-go-name: ApiId
        api-key:
          type: string
          x-go-name: ApiKey
        auto-rotate:
          description: |-
            Whether to automatically rotate every --rotation-interval days, or
            disable existing automatic rotation
          type: string
          x-go-name: AutoRotate
        aws-region:
          default: us-east-2
          description: Region (used in aws)
          type: string
          x-go-name: AwsRegion
        custom-payload:
          type: string
          x-go-name: Payload
        description:
          default: default_metadata
          description: Description of the object
          type: string
          x-go-name: Description
        gcp-key:
          description: Base64-encoded service account private key text
          type: string
          x-go-name: ServiceAccountKey
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Secret name
          type: string
          x-go-name: SecretName
        new-metadata:
          default: default_metadata
          description: Deprecated - use description
          type: string
          x-go-name: NewMetadata
        new-name:
          description: New item name
          type: string
          x-go-name: NewName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        rm-tag:
          description: List of the existent tags that will be removed from this item
          items:
            type: string
          type: array
          x-go-name: RemoveTags
        rotate-after-disconnect:
          default: "false"
          description: Rotate the value of the secret after SRA session ends
          type: string
          x-go-name: RotateAfterDisconnect
        rotated-password:
          type: string
          x-go-name: RotatedPassword
        rotated-username:
          type: string
          x-go-name: RotatedUser
        rotation-hour:
          format: int32
          type: integer
          x-go-name: RotationHour
        rotation-interval:
          description: The number of days to wait between every automatic key rotation
            (7-365)
          type: string
          x-go-name: RotationInterval
        rotator-creds-type:
          type: string
          x-go-name: RotatorCredsType
        rotator-custom-cmd:
          type: string
          x-go-name: RotatorCustomCmd
        secure-access-allow-external-user:
          default: false
          description: Secure Access Allow Providing External User (used in ssh)
          type: boolean
          x-go-name: SecureAccessAllowProvidingExternalUser
        secure-access-aws-account-id:
          description: Secure Access Account Id (used in aws)
          type: string
          x-go-name: SecureAccessAccountId
        secure-access-aws-native-cli:
          description: Secure Access Aws Native Cli (used in aws)
          type: boolean
          x-go-name: SecureAccessAwsNativeCli
        secure-access-bastion-issuer:
          description: Secure Access Bastion Issuer
          type: string
          x-go-name: SecureAccessBastionIssuer
        secure-access-db-name:
          description: Secure Access DB Name (used in data bases)
          type: string
          x-go-name: SecureAccessDBName
        secure-access-db-schema:
          description: Secure Access Schema (used in mssql, postgresql)
          type: string
          x-go-name: SecureAccessSchema
        secure-access-enable:
          description: Secure Access Enabled
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          description: Secure Access Host
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-rdp-domain:
          description: Secure Access Domain (used in ssh)
          type: string
          x-go-name: SecureAccessDomain
        secure-access-rdp-user:
          description: Secure Access Override User (used in ssh)
          type: string
          x-go-name: SecureAccessOverrideUser
        secure-access-web:
          default: false
          description: Secure Access Web
          type: boolean
          x-go-name: SecureAccessWeb
        secure-access-web-browsing:
          default: false
          description: Secure Access Isolated (used in aws, azure)
          type: boolean
          x-go-name: SecureAccessIsolated
        secure-access-web-proxy:
          default: false
          description: Secure Access Web Proxy (used in aws, azure)
          type: boolean
          x-go-name: SecureAccessWebProxy
        ssh-password:
          description: 'Deprecated: use RotatedPassword'
          type: string
          x-go-name: SshPassword
        ssh-username:
          description: 'Deprecated: use RotatedUser'
          type: string
          x-go-name: SshUser
        storage-account-key-name:
          description: The name of the storage account key to rotate [key1/key2/kerb1/kerb2]
          type: string
          x-go-name: StorageKeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRotatedSecretOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRotationSettings:
      description: updateRotationSettings is a command that updates rotations settings
        of an existing key
      properties:
        auto-rotate:
          description: Whether to automatically rotate every --rotation-interval days,
            or disable existing automatic rotation
          type: boolean
          x-go-name: AutoRotate
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Key name
          type: string
          x-go-name: KeyName
        rotation-interval:
          description: The number of days to wait between every automatic key rotation
            (7-365)
          format: int64
          type: integer
          x-go-name: RotationInterval
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - auto-rotate
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSSHCertIssuer:
      properties:
        add-tag:
          description: List of the new tags that will be attached to this item
          items:
            type: string
          type: array
          x-go-name: AddTags
        allowed-users:
          description: Users allowed to fetch the certificate, e.g root,ubuntu
          type: string
          x-go-name: AllowedUsers
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        extensions:
          additionalProperties:
            type: string
          description: Signed certificates with extensions, e.g permit-port-forwarding=\"\"
          type: object
          x-go-name: Extensions
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: SSH certificate issuer name
          type: string
          x-go-name: IssuerName
        new-name:
          description: New item name
          type: string
          x-go-name: NewName
        principals:
          description: Signed certificates with principal, e.g example_role1,example_role2
          type: string
          x-go-name: Principals
        rm-tag:
          description: List of the existent tags that will be removed from this item
          items:
            type: string
          type: array
          x-go-name: RemoveTags
        secure-access-bastion-api:
          type: string
          x-go-name: SecureAccessBastionAPI
        secure-access-bastion-ssh:
          type: string
          x-go-name: SecureAccessBastionSSH
        secure-access-enable:
          type: string
          x-go-name: SecureAccessEnabled
        secure-access-host:
          items:
            type: string
          type: array
          x-go-name: SecureAccessHost
        secure-access-ssh-creds-user:
          type: string
          x-go-name: SecureAccessSSHUser
        secure-access-use-internal-bastion:
          type: boolean
          x-go-name: SecureAccessUseInternalBastion
        signer-key-name:
          description: A key to sign the certificate with
          type: string
          x-go-name: SignerKeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: he requested Time To Live for the certificate, in seconds
          format: int64
          type: integer
          x-go-name: TTL
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - allowed-users
      - name
      - signer-key-name
      - ttl
      title: updateSSHCertIssuer is a command that updates a new SSH certificate issuer.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSSHCertIssuerOutput:
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSSHTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        host:
          type: string
          x-go-name: HostName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        port:
          type: string
          x-go-name: HostPort
        private-key:
          type: string
          x-go-name: PrivateKey
        private-key-password:
          type: string
          x-go-name: PrivateKeyPassword
        ssh-password:
          type: string
          x-go-name: SshPassword
        ssh-username:
          type: string
          x-go-name: SshUser
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
      required:
      - name
      title: updateSSHTarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSSHTargetDetails:
      properties:
        host:
          type: string
          x-go-name: HostName
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        port:
          type: string
          x-go-name: HostPort
        private-key:
          type: string
          x-go-name: PrivateKey
        private-key-password:
          type: string
          x-go-name: PrivateKeyPassword
        protection_key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        ssh-password:
          type: string
          x-go-name: SshPassword
        ssh-username:
          type: string
          x-go-name: SshUser
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateSSHTargetDetails is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSSHTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSalesforceTarget:
      properties:
        app-private-key-data:
          description: Base64 encoded PEM of the connected app private key (relevant
            for JWT auth only)
          type: string
          x-go-name: AppPrivateKeyData
        auth-flow:
          description: type of the auth flow ('jwt' / 'user-password')
          type: string
          x-go-name: AuthFlowType
        ca-cert-data:
          description: Base64 encoded PEM cert to use when uploading a new key to
            Salesforce
          type: string
          x-go-name: CACertData
        ca-cert-name:
          description: name of the certificate in Salesforce tenant to use when uploading
            new key
          type: string
          x-go-name: CACertName
        client-id:
          description: Client ID of the oauth2 app to use for connecting to Salesforce
          type: string
          x-go-name: ClientId
        client-secret:
          description: Client secret of the oauth2 app to use for connecting to Salesforce
            (required for password flow)
          type: string
          x-go-name: ClientSecret
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        email:
          description: The email of the user attached to the oauth2 app used for connecting
            to Salesforce
          type: string
          x-go-name: Email
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        password:
          description: The password of the user attached to the oauth2 app used for
            connecting to Salesforce (required for user-password flow)
          type: string
          x-go-name: Password
        security-token:
          description: The security token of the user attached to the oauth2 app used
            for connecting to Salesforce  (required for user-password flow)
          type: string
          x-go-name: SecurityToken
        tenant-url:
          description: Url of the Salesforce tenant
          type: string
          x-go-name: TenantUrl
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
      required:
      - auth-flow
      - client-id
      - email
      - name
      - tenant-url
      title: updateSalesforceTarget is a command that updates a new target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSalesforceTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSecretVal:
      properties:
        accessibility:
          default: regular
          description: for personal password manager
          type: string
          x-go-name: ItemAccessibilityString
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        multiline:
          description: The provided value is a multiline value (separated by '\n')
          type: boolean
          x-go-name: MultilineValue
        name:
          description: Secret name
          type: string
          x-go-name: SecretName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        password-manager-custom-field:
          additionalProperties:
            type: string
          description: For Password Management use, additional fields
          type: object
          x-go-name: CustomFields
        password-manager-inject-url:
          description: For Password Management use, reflect the website context
          items:
            type: string
          type: array
          x-go-name: Websites
        password-manager-password:
          description: For Password Management use, additional fields
          type: string
          x-go-name: Password
        password-manager-username:
          description: For Password Management use
          type: string
          x-go-name: Username
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        value:
          description: The new secret value
          type: string
          x-go-name: Value
      required:
      - name
      - value
      title: updateSecretVal is a command that updates static secret value.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateTarget:
      properties:
        description:
          default: default_comment
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-comment:
          default: default_comment
          description: Deprecated - use description
          type: string
          x-go-name: NewComment
        new-name:
          description: New Target name
          type: string
          x-go-name: NewName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateTarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateTargetDetails:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
      title: updateTargetDetails is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateTargetDetailsOutput:
      properties:
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateTargetOutput:
      properties:
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateWebTarget:
      properties:
        comment:
          description: Deprecated - use description
          type: string
          x-go-name: Comment
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-name:
          description: New target name
          type: string
          x-go-name: NewTargetName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        update-version:
          description: Deprecated
          type: boolean
          x-go-name: CreateNewVersion
        url:
          description: The url
          type: string
          x-go-name: URL
      required:
      - name
      title: updateWebTarget is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateWebTargetDetails:
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        keep-prev-version:
          type: string
          x-go-name: KeepPrevVersion
        name:
          description: Target name
          type: string
          x-go-name: TargetName
        new-version:
          description: Deprecated
          type: boolean
          x-go-name: NewVersion
        protection_key:
          description: |-
            The name of a key that used to encrypt the target secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        url:
          type: string
          x-go-name: URL
      required:
      - name
      title: updateWebTargetDetails is a command that updates an existing target.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateWebTargetOutput:
      properties:
        target_id:
          format: int64
          type: integer
          x-go-name: TargetID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uploadPKCS12:
      properties:
        customer-frg-id:
          description: |-
            The customer fragment ID that will be used to split the key (if empty,
            the key will be created independently of a customer fragment)
          type: string
          x-go-name: CustomerFragmentID
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        in:
          description: PKCS#12 input file (private key and certificate only)
          type: string
          x-go-name: PKCS12File
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: Name of key to be created
          type: string
          x-go-name: KeyName
        passphrase:
          description: Passphrase to unlock the pkcs#12 bundle
          type: string
          x-go-name: Passphrase
        split-level:
          default: 2
          description: The number of fragments that the item will be split into
          format: int64
          type: integer
          x-go-name: SplitLevel
        tag:
          description: List of the tags attached to this key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - in
      - name
      - passphrase
      title: uploadPKCS12 is a command that uploads a PKCS#12 key and certificates.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uploadPKCS12Output:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uploadRSA:
      properties:
        alg:
          description: 'Key type. options: [RSA1024, RSA2048, RSA3072, RSA4096]'
          type: string
          x-go-name: Alg
        cert-file-data:
          description: Certificate in a PEM format.
          type: string
          x-go-name: CertFileData
        customer-frg-id:
          description: |-
            The customer fragment ID that will be used to split the key (if empty,
            the key will be created independently of a customer fragment)
          type: string
          x-go-name: CustomerFragmentID
        delete_protection:
          description: Protection from accidental deletion of this item
          type: string
          x-go-name: ItemProtected
        description:
          description: Description of the object
          type: string
          x-go-name: Description
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        metadata:
          description: Deprecated - use description
          type: string
          x-go-name: Metadata
        name:
          description: Name of key to be created
          type: string
          x-go-name: KeyName
        overwrite:
          description: When the overwrite flag is set, this command will only update
            an existing key. [true, false]
          type: string
          x-go-name: Overwrite
        rsa-file-data:
          description: RSA private key data, base64 encoded
          type: string
          x-go-name: RSAFileData
        split-level:
          default: 2
          description: The number of fragments that the item will be split into
          format: int64
          type: integer
          x-go-name: SplitLevel
        tag:
          description: List of the tags attached to this key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - alg
      - name
      title: uploadRSA is a command that uploads RSA key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uploadRSAOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    validateToken:
      description: validate-token is a command that validaties token
      properties:
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        token:
          description: Token
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    validateTokenOutput:
      properties:
        expiration:
          type: string
          x-go-name: ExpirationTime
        is_valid:
          type: boolean
          x-go-name: IsValid
        reason:
          type: string
          x-go-name: Reason
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyGPG:
      properties:
        display-id:
          description: The display id of the key to use in the encryption process
          type: string
          x-go-name: DisplayId
        item-id:
          description: The item id of the key to use in the encryption process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the key to use in the encryption process
          type: string
          x-go-name: KeyName
        passphrase:
          description: Passphrase that was used to generate the key
          type: string
          x-go-name: Passphrase
        signature:
          description: The signature to be verified in base64 format
          type: string
          x-go-name: Signature
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      - signature
      title: verifyGPG is a command that verifies a GPG signature based on RSA key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyGPGOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyJWTOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyJWTWithClassicKey:
      properties:
        display-id:
          description: The name of the key to use in the verify JWT process
          type: string
          x-go-name: DisplayId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        jwt:
          description: JWT
          type: string
          x-go-name: JWT
        required-claims:
          description: RequiredClaims
          type: string
          x-go-name: RequiredClaims
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: classic key version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - display-id
      - jwt
      - required-claims
      - version
      title: verifyJWTWithClassicKey is a command that verifies JWT by using an Classic
        key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyPKCS1:
      properties:
        display-id:
          description: The display id of the key to use in the verification process
          type: string
          x-go-name: DisplayId
        item-id:
          description: The item id of the key to use in the verification process
          format: int64
          type: integer
          x-go-name: ItemId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        key-name:
          description: The name of the RSA key to use in the verification process
          type: string
          x-go-name: KeyName
        message:
          description: The message to be verified
          type: string
          x-go-name: Message
        signature:
          description: The message's signature
          type: string
          x-go-name: Signature
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      - message
      - signature
      title: verifyPKCS1 is a command that verifies an RSA PKCS#1 v1.5 signature.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyPKCS1Output:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyPKICertOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyPKICertWithClassicKey:
      properties:
        display-id:
          description: The name of the key to use in the verify PKICert process
          type: string
          x-go-name: DisplayId
        json:
          description: Set output format to JSON
          type: boolean
          x-go-name: Json
        pki-cert:
          description: PkiCert
          type: string
          x-go-name: PkiCert
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: classic key version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - display-id
      - pki-cert
      - version
      title: verifyPKICertWithClassicKey is a command that verifys PKICert by using
        an Classic key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
