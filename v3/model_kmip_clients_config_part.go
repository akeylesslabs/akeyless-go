/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// KMIPClientsConfigPart struct for KMIPClientsConfigPart
type KMIPClientsConfigPart struct {
	Clients *map[string]KMIPClient `json:"clients,omitempty"`
	Environments *[]string `json:"environments,omitempty"`
}

// NewKMIPClientsConfigPart instantiates a new KMIPClientsConfigPart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKMIPClientsConfigPart() *KMIPClientsConfigPart {
	this := KMIPClientsConfigPart{}
	return &this
}

// NewKMIPClientsConfigPartWithDefaults instantiates a new KMIPClientsConfigPart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKMIPClientsConfigPartWithDefaults() *KMIPClientsConfigPart {
	this := KMIPClientsConfigPart{}
	return &this
}

// GetClients returns the Clients field value if set, zero value otherwise.
func (o *KMIPClientsConfigPart) GetClients() map[string]KMIPClient {
	if o == nil || o.Clients == nil {
		var ret map[string]KMIPClient
		return ret
	}
	return *o.Clients
}

// GetClientsOk returns a tuple with the Clients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KMIPClientsConfigPart) GetClientsOk() (*map[string]KMIPClient, bool) {
	if o == nil || o.Clients == nil {
		return nil, false
	}
	return o.Clients, true
}

// HasClients returns a boolean if a field has been set.
func (o *KMIPClientsConfigPart) HasClients() bool {
	if o != nil && o.Clients != nil {
		return true
	}

	return false
}

// SetClients gets a reference to the given map[string]KMIPClient and assigns it to the Clients field.
func (o *KMIPClientsConfigPart) SetClients(v map[string]KMIPClient) {
	o.Clients = &v
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *KMIPClientsConfigPart) GetEnvironments() []string {
	if o == nil || o.Environments == nil {
		var ret []string
		return ret
	}
	return *o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KMIPClientsConfigPart) GetEnvironmentsOk() (*[]string, bool) {
	if o == nil || o.Environments == nil {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *KMIPClientsConfigPart) HasEnvironments() bool {
	if o != nil && o.Environments != nil {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given []string and assigns it to the Environments field.
func (o *KMIPClientsConfigPart) SetEnvironments(v []string) {
	o.Environments = &v
}

func (o KMIPClientsConfigPart) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Clients != nil {
		toSerialize["clients"] = o.Clients
	}
	if o.Environments != nil {
		toSerialize["environments"] = o.Environments
	}
	return json.Marshal(toSerialize)
}

type NullableKMIPClientsConfigPart struct {
	value *KMIPClientsConfigPart
	isSet bool
}

func (v NullableKMIPClientsConfigPart) Get() *KMIPClientsConfigPart {
	return v.value
}

func (v *NullableKMIPClientsConfigPart) Set(val *KMIPClientsConfigPart) {
	v.value = val
	v.isSet = true
}

func (v NullableKMIPClientsConfigPart) IsSet() bool {
	return v.isSet
}

func (v *NullableKMIPClientsConfigPart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKMIPClientsConfigPart(val *KMIPClientsConfigPart) *NullableKMIPClientsConfigPart {
	return &NullableKMIPClientsConfigPart{value: val, isSet: true}
}

func (v NullableKMIPClientsConfigPart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKMIPClientsConfigPart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


