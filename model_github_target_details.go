/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GithubTargetDetails struct for GithubTargetDetails
type GithubTargetDetails struct {
	GithubAppId *int64 `json:"github_app_id,omitempty"`
	GithubAppPrivateKey *string `json:"github_app_private_key,omitempty"`
	GithubBaseUrl *string `json:"github_base_url,omitempty"`
}

// NewGithubTargetDetails instantiates a new GithubTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubTargetDetails() *GithubTargetDetails {
	this := GithubTargetDetails{}
	return &this
}

// NewGithubTargetDetailsWithDefaults instantiates a new GithubTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubTargetDetailsWithDefaults() *GithubTargetDetails {
	this := GithubTargetDetails{}
	return &this
}

// GetGithubAppId returns the GithubAppId field value if set, zero value otherwise.
func (o *GithubTargetDetails) GetGithubAppId() int64 {
	if o == nil || o.GithubAppId == nil {
		var ret int64
		return ret
	}
	return *o.GithubAppId
}

// GetGithubAppIdOk returns a tuple with the GithubAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubTargetDetails) GetGithubAppIdOk() (*int64, bool) {
	if o == nil || o.GithubAppId == nil {
		return nil, false
	}
	return o.GithubAppId, true
}

// HasGithubAppId returns a boolean if a field has been set.
func (o *GithubTargetDetails) HasGithubAppId() bool {
	if o != nil && o.GithubAppId != nil {
		return true
	}

	return false
}

// SetGithubAppId gets a reference to the given int64 and assigns it to the GithubAppId field.
func (o *GithubTargetDetails) SetGithubAppId(v int64) {
	o.GithubAppId = &v
}

// GetGithubAppPrivateKey returns the GithubAppPrivateKey field value if set, zero value otherwise.
func (o *GithubTargetDetails) GetGithubAppPrivateKey() string {
	if o == nil || o.GithubAppPrivateKey == nil {
		var ret string
		return ret
	}
	return *o.GithubAppPrivateKey
}

// GetGithubAppPrivateKeyOk returns a tuple with the GithubAppPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubTargetDetails) GetGithubAppPrivateKeyOk() (*string, bool) {
	if o == nil || o.GithubAppPrivateKey == nil {
		return nil, false
	}
	return o.GithubAppPrivateKey, true
}

// HasGithubAppPrivateKey returns a boolean if a field has been set.
func (o *GithubTargetDetails) HasGithubAppPrivateKey() bool {
	if o != nil && o.GithubAppPrivateKey != nil {
		return true
	}

	return false
}

// SetGithubAppPrivateKey gets a reference to the given string and assigns it to the GithubAppPrivateKey field.
func (o *GithubTargetDetails) SetGithubAppPrivateKey(v string) {
	o.GithubAppPrivateKey = &v
}

// GetGithubBaseUrl returns the GithubBaseUrl field value if set, zero value otherwise.
func (o *GithubTargetDetails) GetGithubBaseUrl() string {
	if o == nil || o.GithubBaseUrl == nil {
		var ret string
		return ret
	}
	return *o.GithubBaseUrl
}

// GetGithubBaseUrlOk returns a tuple with the GithubBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubTargetDetails) GetGithubBaseUrlOk() (*string, bool) {
	if o == nil || o.GithubBaseUrl == nil {
		return nil, false
	}
	return o.GithubBaseUrl, true
}

// HasGithubBaseUrl returns a boolean if a field has been set.
func (o *GithubTargetDetails) HasGithubBaseUrl() bool {
	if o != nil && o.GithubBaseUrl != nil {
		return true
	}

	return false
}

// SetGithubBaseUrl gets a reference to the given string and assigns it to the GithubBaseUrl field.
func (o *GithubTargetDetails) SetGithubBaseUrl(v string) {
	o.GithubBaseUrl = &v
}

func (o GithubTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GithubAppId != nil {
		toSerialize["github_app_id"] = o.GithubAppId
	}
	if o.GithubAppPrivateKey != nil {
		toSerialize["github_app_private_key"] = o.GithubAppPrivateKey
	}
	if o.GithubBaseUrl != nil {
		toSerialize["github_base_url"] = o.GithubBaseUrl
	}
	return json.Marshal(toSerialize)
}

type NullableGithubTargetDetails struct {
	value *GithubTargetDetails
	isSet bool
}

func (v NullableGithubTargetDetails) Get() *GithubTargetDetails {
	return v.value
}

func (v *NullableGithubTargetDetails) Set(val *GithubTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubTargetDetails(val *GithubTargetDetails) *NullableGithubTargetDetails {
	return &NullableGithubTargetDetails{value: val, isSet: true}
}

func (v NullableGithubTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


