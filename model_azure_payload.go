/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// AzurePayload struct for AzurePayload
type AzurePayload struct {
	Client *string `json:"client,omitempty"`
	Name *string `json:"name,omitempty"`
	Secret *string `json:"secret,omitempty"`
	Tenant *string `json:"tenant,omitempty"`
}

// NewAzurePayload instantiates a new AzurePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzurePayload() *AzurePayload {
	this := AzurePayload{}
	return &this
}

// NewAzurePayloadWithDefaults instantiates a new AzurePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzurePayloadWithDefaults() *AzurePayload {
	this := AzurePayload{}
	return &this
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *AzurePayload) GetClient() string {
	if o == nil || o.Client == nil {
		var ret string
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePayload) GetClientOk() (*string, bool) {
	if o == nil || o.Client == nil {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *AzurePayload) HasClient() bool {
	if o != nil && o.Client != nil {
		return true
	}

	return false
}

// SetClient gets a reference to the given string and assigns it to the Client field.
func (o *AzurePayload) SetClient(v string) {
	o.Client = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AzurePayload) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePayload) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AzurePayload) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AzurePayload) SetName(v string) {
	o.Name = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *AzurePayload) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePayload) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *AzurePayload) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *AzurePayload) SetSecret(v string) {
	o.Secret = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *AzurePayload) GetTenant() string {
	if o == nil || o.Tenant == nil {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePayload) GetTenantOk() (*string, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *AzurePayload) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *AzurePayload) SetTenant(v string) {
	o.Tenant = &v
}

func (o AzurePayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Client != nil {
		toSerialize["client"] = o.Client
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	return json.Marshal(toSerialize)
}

type NullableAzurePayload struct {
	value *AzurePayload
	isSet bool
}

func (v NullableAzurePayload) Get() *AzurePayload {
	return v.value
}

func (v *NullableAzurePayload) Set(val *AzurePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableAzurePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableAzurePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzurePayload(val *AzurePayload) *NullableAzurePayload {
	return &NullableAzurePayload{value: val, isSet: true}
}

func (v NullableAzurePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzurePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


