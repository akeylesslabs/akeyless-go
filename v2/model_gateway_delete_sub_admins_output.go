/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GatewayDeleteSubAdminsOutput struct for GatewayDeleteSubAdminsOutput
type GatewayDeleteSubAdminsOutput struct {
	SubAdmins *[]string `json:"sub-admins,omitempty"`
}

// NewGatewayDeleteSubAdminsOutput instantiates a new GatewayDeleteSubAdminsOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayDeleteSubAdminsOutput() *GatewayDeleteSubAdminsOutput {
	this := GatewayDeleteSubAdminsOutput{}
	return &this
}

// NewGatewayDeleteSubAdminsOutputWithDefaults instantiates a new GatewayDeleteSubAdminsOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayDeleteSubAdminsOutputWithDefaults() *GatewayDeleteSubAdminsOutput {
	this := GatewayDeleteSubAdminsOutput{}
	return &this
}

// GetSubAdmins returns the SubAdmins field value if set, zero value otherwise.
func (o *GatewayDeleteSubAdminsOutput) GetSubAdmins() []string {
	if o == nil || o.SubAdmins == nil {
		var ret []string
		return ret
	}
	return *o.SubAdmins
}

// GetSubAdminsOk returns a tuple with the SubAdmins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayDeleteSubAdminsOutput) GetSubAdminsOk() (*[]string, bool) {
	if o == nil || o.SubAdmins == nil {
		return nil, false
	}
	return o.SubAdmins, true
}

// HasSubAdmins returns a boolean if a field has been set.
func (o *GatewayDeleteSubAdminsOutput) HasSubAdmins() bool {
	if o != nil && o.SubAdmins != nil {
		return true
	}

	return false
}

// SetSubAdmins gets a reference to the given []string and assigns it to the SubAdmins field.
func (o *GatewayDeleteSubAdminsOutput) SetSubAdmins(v []string) {
	o.SubAdmins = &v
}

func (o GatewayDeleteSubAdminsOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubAdmins != nil {
		toSerialize["sub-admins"] = o.SubAdmins
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayDeleteSubAdminsOutput struct {
	value *GatewayDeleteSubAdminsOutput
	isSet bool
}

func (v NullableGatewayDeleteSubAdminsOutput) Get() *GatewayDeleteSubAdminsOutput {
	return v.value
}

func (v *NullableGatewayDeleteSubAdminsOutput) Set(val *GatewayDeleteSubAdminsOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayDeleteSubAdminsOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayDeleteSubAdminsOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayDeleteSubAdminsOutput(val *GatewayDeleteSubAdminsOutput) *NullableGatewayDeleteSubAdminsOutput {
	return &NullableGatewayDeleteSubAdminsOutput{value: val, isSet: true}
}

func (v NullableGatewayDeleteSubAdminsOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayDeleteSubAdminsOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


