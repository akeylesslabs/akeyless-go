/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// ItemTargetAssociation ItemTargetAssociation includes details of an association between an item and a target.
type ItemTargetAssociation struct {
	AssocId *string `json:"assoc_id,omitempty"`
	Attributes *map[string]string `json:"attributes,omitempty"`
	TargetId *int64 `json:"target_id,omitempty"`
	TargetName *string `json:"target_name,omitempty"`
	TargetType *string `json:"target_type,omitempty"`
}

// NewItemTargetAssociation instantiates a new ItemTargetAssociation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemTargetAssociation() *ItemTargetAssociation {
	this := ItemTargetAssociation{}
	return &this
}

// NewItemTargetAssociationWithDefaults instantiates a new ItemTargetAssociation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemTargetAssociationWithDefaults() *ItemTargetAssociation {
	this := ItemTargetAssociation{}
	return &this
}

// GetAssocId returns the AssocId field value if set, zero value otherwise.
func (o *ItemTargetAssociation) GetAssocId() string {
	if o == nil || o.AssocId == nil {
		var ret string
		return ret
	}
	return *o.AssocId
}

// GetAssocIdOk returns a tuple with the AssocId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTargetAssociation) GetAssocIdOk() (*string, bool) {
	if o == nil || o.AssocId == nil {
		return nil, false
	}
	return o.AssocId, true
}

// HasAssocId returns a boolean if a field has been set.
func (o *ItemTargetAssociation) HasAssocId() bool {
	if o != nil && o.AssocId != nil {
		return true
	}

	return false
}

// SetAssocId gets a reference to the given string and assigns it to the AssocId field.
func (o *ItemTargetAssociation) SetAssocId(v string) {
	o.AssocId = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ItemTargetAssociation) GetAttributes() map[string]string {
	if o == nil || o.Attributes == nil {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTargetAssociation) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ItemTargetAssociation) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *ItemTargetAssociation) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *ItemTargetAssociation) GetTargetId() int64 {
	if o == nil || o.TargetId == nil {
		var ret int64
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTargetAssociation) GetTargetIdOk() (*int64, bool) {
	if o == nil || o.TargetId == nil {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *ItemTargetAssociation) HasTargetId() bool {
	if o != nil && o.TargetId != nil {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given int64 and assigns it to the TargetId field.
func (o *ItemTargetAssociation) SetTargetId(v int64) {
	o.TargetId = &v
}

// GetTargetName returns the TargetName field value if set, zero value otherwise.
func (o *ItemTargetAssociation) GetTargetName() string {
	if o == nil || o.TargetName == nil {
		var ret string
		return ret
	}
	return *o.TargetName
}

// GetTargetNameOk returns a tuple with the TargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTargetAssociation) GetTargetNameOk() (*string, bool) {
	if o == nil || o.TargetName == nil {
		return nil, false
	}
	return o.TargetName, true
}

// HasTargetName returns a boolean if a field has been set.
func (o *ItemTargetAssociation) HasTargetName() bool {
	if o != nil && o.TargetName != nil {
		return true
	}

	return false
}

// SetTargetName gets a reference to the given string and assigns it to the TargetName field.
func (o *ItemTargetAssociation) SetTargetName(v string) {
	o.TargetName = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *ItemTargetAssociation) GetTargetType() string {
	if o == nil || o.TargetType == nil {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTargetAssociation) GetTargetTypeOk() (*string, bool) {
	if o == nil || o.TargetType == nil {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *ItemTargetAssociation) HasTargetType() bool {
	if o != nil && o.TargetType != nil {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *ItemTargetAssociation) SetTargetType(v string) {
	o.TargetType = &v
}

func (o ItemTargetAssociation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssocId != nil {
		toSerialize["assoc_id"] = o.AssocId
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.TargetId != nil {
		toSerialize["target_id"] = o.TargetId
	}
	if o.TargetName != nil {
		toSerialize["target_name"] = o.TargetName
	}
	if o.TargetType != nil {
		toSerialize["target_type"] = o.TargetType
	}
	return json.Marshal(toSerialize)
}

type NullableItemTargetAssociation struct {
	value *ItemTargetAssociation
	isSet bool
}

func (v NullableItemTargetAssociation) Get() *ItemTargetAssociation {
	return v.value
}

func (v *NullableItemTargetAssociation) Set(val *ItemTargetAssociation) {
	v.value = val
	v.isSet = true
}

func (v NullableItemTargetAssociation) IsSet() bool {
	return v.isSet
}

func (v *NullableItemTargetAssociation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemTargetAssociation(val *ItemTargetAssociation) *NullableItemTargetAssociation {
	return &NullableItemTargetAssociation{value: val, isSet: true}
}

func (v NullableItemTargetAssociation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemTargetAssociation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


