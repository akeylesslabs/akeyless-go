/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// CreateOidcAppOutput struct for CreateOidcAppOutput
type CreateOidcAppOutput struct {
	ClientId *string `json:"client_id,omitempty"`
	ClientSecret *string `json:"client_secret,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewCreateOidcAppOutput instantiates a new CreateOidcAppOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOidcAppOutput() *CreateOidcAppOutput {
	this := CreateOidcAppOutput{}
	return &this
}

// NewCreateOidcAppOutputWithDefaults instantiates a new CreateOidcAppOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOidcAppOutputWithDefaults() *CreateOidcAppOutput {
	this := CreateOidcAppOutput{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *CreateOidcAppOutput) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOidcAppOutput) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *CreateOidcAppOutput) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *CreateOidcAppOutput) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *CreateOidcAppOutput) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOidcAppOutput) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *CreateOidcAppOutput) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *CreateOidcAppOutput) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOidcAppOutput) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOidcAppOutput) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOidcAppOutput) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOidcAppOutput) SetName(v string) {
	o.Name = &v
}

func (o CreateOidcAppOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOidcAppOutput struct {
	value *CreateOidcAppOutput
	isSet bool
}

func (v NullableCreateOidcAppOutput) Get() *CreateOidcAppOutput {
	return v.value
}

func (v *NullableCreateOidcAppOutput) Set(val *CreateOidcAppOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOidcAppOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOidcAppOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOidcAppOutput(val *CreateOidcAppOutput) *NullableCreateOidcAppOutput {
	return &NullableCreateOidcAppOutput{value: val, isSet: true}
}

func (v NullableCreateOidcAppOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOidcAppOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


