/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// EsmListSecretsOutput struct for EsmListSecretsOutput
type EsmListSecretsOutput struct {
	SecretsList *[]SecretInfo `json:"secrets_list,omitempty"`
}

// NewEsmListSecretsOutput instantiates a new EsmListSecretsOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsmListSecretsOutput() *EsmListSecretsOutput {
	this := EsmListSecretsOutput{}
	return &this
}

// NewEsmListSecretsOutputWithDefaults instantiates a new EsmListSecretsOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsmListSecretsOutputWithDefaults() *EsmListSecretsOutput {
	this := EsmListSecretsOutput{}
	return &this
}

// GetSecretsList returns the SecretsList field value if set, zero value otherwise.
func (o *EsmListSecretsOutput) GetSecretsList() []SecretInfo {
	if o == nil || o.SecretsList == nil {
		var ret []SecretInfo
		return ret
	}
	return *o.SecretsList
}

// GetSecretsListOk returns a tuple with the SecretsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsmListSecretsOutput) GetSecretsListOk() (*[]SecretInfo, bool) {
	if o == nil || o.SecretsList == nil {
		return nil, false
	}
	return o.SecretsList, true
}

// HasSecretsList returns a boolean if a field has been set.
func (o *EsmListSecretsOutput) HasSecretsList() bool {
	if o != nil && o.SecretsList != nil {
		return true
	}

	return false
}

// SetSecretsList gets a reference to the given []SecretInfo and assigns it to the SecretsList field.
func (o *EsmListSecretsOutput) SetSecretsList(v []SecretInfo) {
	o.SecretsList = &v
}

func (o EsmListSecretsOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretsList != nil {
		toSerialize["secrets_list"] = o.SecretsList
	}
	return json.Marshal(toSerialize)
}

type NullableEsmListSecretsOutput struct {
	value *EsmListSecretsOutput
	isSet bool
}

func (v NullableEsmListSecretsOutput) Get() *EsmListSecretsOutput {
	return v.value
}

func (v *NullableEsmListSecretsOutput) Set(val *EsmListSecretsOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableEsmListSecretsOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableEsmListSecretsOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsmListSecretsOutput(val *EsmListSecretsOutput) *NullableEsmListSecretsOutput {
	return &NullableEsmListSecretsOutput{value: val, isSet: true}
}

func (v NullableEsmListSecretsOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsmListSecretsOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


