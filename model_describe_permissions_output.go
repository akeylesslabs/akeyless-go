/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// DescribePermissionsOutput struct for DescribePermissionsOutput
type DescribePermissionsOutput struct {
	ClientPermissions []string `json:"client_permissions,omitempty"`
}

// NewDescribePermissionsOutput instantiates a new DescribePermissionsOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribePermissionsOutput() *DescribePermissionsOutput {
	this := DescribePermissionsOutput{}
	return &this
}

// NewDescribePermissionsOutputWithDefaults instantiates a new DescribePermissionsOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribePermissionsOutputWithDefaults() *DescribePermissionsOutput {
	this := DescribePermissionsOutput{}
	return &this
}

// GetClientPermissions returns the ClientPermissions field value if set, zero value otherwise.
func (o *DescribePermissionsOutput) GetClientPermissions() []string {
	if o == nil || o.ClientPermissions == nil {
		var ret []string
		return ret
	}
	return o.ClientPermissions
}

// GetClientPermissionsOk returns a tuple with the ClientPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribePermissionsOutput) GetClientPermissionsOk() ([]string, bool) {
	if o == nil || o.ClientPermissions == nil {
		return nil, false
	}
	return o.ClientPermissions, true
}

// HasClientPermissions returns a boolean if a field has been set.
func (o *DescribePermissionsOutput) HasClientPermissions() bool {
	if o != nil && o.ClientPermissions != nil {
		return true
	}

	return false
}

// SetClientPermissions gets a reference to the given []string and assigns it to the ClientPermissions field.
func (o *DescribePermissionsOutput) SetClientPermissions(v []string) {
	o.ClientPermissions = v
}

func (o DescribePermissionsOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientPermissions != nil {
		toSerialize["client_permissions"] = o.ClientPermissions
	}
	return json.Marshal(toSerialize)
}

type NullableDescribePermissionsOutput struct {
	value *DescribePermissionsOutput
	isSet bool
}

func (v NullableDescribePermissionsOutput) Get() *DescribePermissionsOutput {
	return v.value
}

func (v *NullableDescribePermissionsOutput) Set(val *DescribePermissionsOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribePermissionsOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribePermissionsOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribePermissionsOutput(val *DescribePermissionsOutput) *NullableDescribePermissionsOutput {
	return &NullableDescribePermissionsOutput{value: val, isSet: true}
}

func (v NullableDescribePermissionsOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribePermissionsOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


