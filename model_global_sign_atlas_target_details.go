/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GlobalSignAtlasTargetDetails GlobalSignAtlasTargetDetails
type GlobalSignAtlasTargetDetails struct {
	ApiKey *string `json:"api_key,omitempty"`
	ApiSecret *string `json:"api_secret,omitempty"`
	MtlsCert *string `json:"mtls_cert,omitempty"`
	MtlsKey *string `json:"mtls_key,omitempty"`
	// A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
	Timeout *int64 `json:"timeout,omitempty"`
}

// NewGlobalSignAtlasTargetDetails instantiates a new GlobalSignAtlasTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalSignAtlasTargetDetails() *GlobalSignAtlasTargetDetails {
	this := GlobalSignAtlasTargetDetails{}
	return &this
}

// NewGlobalSignAtlasTargetDetailsWithDefaults instantiates a new GlobalSignAtlasTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalSignAtlasTargetDetailsWithDefaults() *GlobalSignAtlasTargetDetails {
	this := GlobalSignAtlasTargetDetails{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *GlobalSignAtlasTargetDetails) GetApiKey() string {
	if o == nil || o.ApiKey == nil {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSignAtlasTargetDetails) GetApiKeyOk() (*string, bool) {
	if o == nil || o.ApiKey == nil {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *GlobalSignAtlasTargetDetails) HasApiKey() bool {
	if o != nil && o.ApiKey != nil {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *GlobalSignAtlasTargetDetails) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetApiSecret returns the ApiSecret field value if set, zero value otherwise.
func (o *GlobalSignAtlasTargetDetails) GetApiSecret() string {
	if o == nil || o.ApiSecret == nil {
		var ret string
		return ret
	}
	return *o.ApiSecret
}

// GetApiSecretOk returns a tuple with the ApiSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSignAtlasTargetDetails) GetApiSecretOk() (*string, bool) {
	if o == nil || o.ApiSecret == nil {
		return nil, false
	}
	return o.ApiSecret, true
}

// HasApiSecret returns a boolean if a field has been set.
func (o *GlobalSignAtlasTargetDetails) HasApiSecret() bool {
	if o != nil && o.ApiSecret != nil {
		return true
	}

	return false
}

// SetApiSecret gets a reference to the given string and assigns it to the ApiSecret field.
func (o *GlobalSignAtlasTargetDetails) SetApiSecret(v string) {
	o.ApiSecret = &v
}

// GetMtlsCert returns the MtlsCert field value if set, zero value otherwise.
func (o *GlobalSignAtlasTargetDetails) GetMtlsCert() string {
	if o == nil || o.MtlsCert == nil {
		var ret string
		return ret
	}
	return *o.MtlsCert
}

// GetMtlsCertOk returns a tuple with the MtlsCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSignAtlasTargetDetails) GetMtlsCertOk() (*string, bool) {
	if o == nil || o.MtlsCert == nil {
		return nil, false
	}
	return o.MtlsCert, true
}

// HasMtlsCert returns a boolean if a field has been set.
func (o *GlobalSignAtlasTargetDetails) HasMtlsCert() bool {
	if o != nil && o.MtlsCert != nil {
		return true
	}

	return false
}

// SetMtlsCert gets a reference to the given string and assigns it to the MtlsCert field.
func (o *GlobalSignAtlasTargetDetails) SetMtlsCert(v string) {
	o.MtlsCert = &v
}

// GetMtlsKey returns the MtlsKey field value if set, zero value otherwise.
func (o *GlobalSignAtlasTargetDetails) GetMtlsKey() string {
	if o == nil || o.MtlsKey == nil {
		var ret string
		return ret
	}
	return *o.MtlsKey
}

// GetMtlsKeyOk returns a tuple with the MtlsKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSignAtlasTargetDetails) GetMtlsKeyOk() (*string, bool) {
	if o == nil || o.MtlsKey == nil {
		return nil, false
	}
	return o.MtlsKey, true
}

// HasMtlsKey returns a boolean if a field has been set.
func (o *GlobalSignAtlasTargetDetails) HasMtlsKey() bool {
	if o != nil && o.MtlsKey != nil {
		return true
	}

	return false
}

// SetMtlsKey gets a reference to the given string and assigns it to the MtlsKey field.
func (o *GlobalSignAtlasTargetDetails) SetMtlsKey(v string) {
	o.MtlsKey = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *GlobalSignAtlasTargetDetails) GetTimeout() int64 {
	if o == nil || o.Timeout == nil {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSignAtlasTargetDetails) GetTimeoutOk() (*int64, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *GlobalSignAtlasTargetDetails) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *GlobalSignAtlasTargetDetails) SetTimeout(v int64) {
	o.Timeout = &v
}

func (o GlobalSignAtlasTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiKey != nil {
		toSerialize["api_key"] = o.ApiKey
	}
	if o.ApiSecret != nil {
		toSerialize["api_secret"] = o.ApiSecret
	}
	if o.MtlsCert != nil {
		toSerialize["mtls_cert"] = o.MtlsCert
	}
	if o.MtlsKey != nil {
		toSerialize["mtls_key"] = o.MtlsKey
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	return json.Marshal(toSerialize)
}

type NullableGlobalSignAtlasTargetDetails struct {
	value *GlobalSignAtlasTargetDetails
	isSet bool
}

func (v NullableGlobalSignAtlasTargetDetails) Get() *GlobalSignAtlasTargetDetails {
	return v.value
}

func (v *NullableGlobalSignAtlasTargetDetails) Set(val *GlobalSignAtlasTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalSignAtlasTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalSignAtlasTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalSignAtlasTargetDetails(val *GlobalSignAtlasTargetDetails) *NullableGlobalSignAtlasTargetDetails {
	return &NullableGlobalSignAtlasTargetDetails{value: val, isSet: true}
}

func (v NullableGlobalSignAtlasTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalSignAtlasTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


