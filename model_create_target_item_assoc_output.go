/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// checks if the CreateTargetItemAssocOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTargetItemAssocOutput{}

// CreateTargetItemAssocOutput CreateTargetItemAssocOutput defines output of CreateTargetItemAssoc operation.
type CreateTargetItemAssocOutput struct {
	AssocId *string `json:"assoc_id,omitempty"`
}

// NewCreateTargetItemAssocOutput instantiates a new CreateTargetItemAssocOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTargetItemAssocOutput() *CreateTargetItemAssocOutput {
	this := CreateTargetItemAssocOutput{}
	return &this
}

// NewCreateTargetItemAssocOutputWithDefaults instantiates a new CreateTargetItemAssocOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTargetItemAssocOutputWithDefaults() *CreateTargetItemAssocOutput {
	this := CreateTargetItemAssocOutput{}
	return &this
}

// GetAssocId returns the AssocId field value if set, zero value otherwise.
func (o *CreateTargetItemAssocOutput) GetAssocId() string {
	if o == nil || IsNil(o.AssocId) {
		var ret string
		return ret
	}
	return *o.AssocId
}

// GetAssocIdOk returns a tuple with the AssocId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTargetItemAssocOutput) GetAssocIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssocId) {
		return nil, false
	}
	return o.AssocId, true
}

// HasAssocId returns a boolean if a field has been set.
func (o *CreateTargetItemAssocOutput) HasAssocId() bool {
	if o != nil && !IsNil(o.AssocId) {
		return true
	}

	return false
}

// SetAssocId gets a reference to the given string and assigns it to the AssocId field.
func (o *CreateTargetItemAssocOutput) SetAssocId(v string) {
	o.AssocId = &v
}

func (o CreateTargetItemAssocOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTargetItemAssocOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssocId) {
		toSerialize["assoc_id"] = o.AssocId
	}
	return toSerialize, nil
}

type NullableCreateTargetItemAssocOutput struct {
	value *CreateTargetItemAssocOutput
	isSet bool
}

func (v NullableCreateTargetItemAssocOutput) Get() *CreateTargetItemAssocOutput {
	return v.value
}

func (v *NullableCreateTargetItemAssocOutput) Set(val *CreateTargetItemAssocOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTargetItemAssocOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTargetItemAssocOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTargetItemAssocOutput(val *CreateTargetItemAssocOutput) *NullableCreateTargetItemAssocOutput {
	return &NullableCreateTargetItemAssocOutput{value: val, isSet: true}
}

func (v NullableCreateTargetItemAssocOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTargetItemAssocOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


