/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// SplunkLogForwardingConfig struct for SplunkLogForwardingConfig
type SplunkLogForwardingConfig struct {
	SplunkEnableTls *bool `json:"splunk_enable_tls,omitempty"`
	SplunkIndex *string `json:"splunk_index,omitempty"`
	SplunkSource *string `json:"splunk_source,omitempty"`
	SplunkSourcetype *string `json:"splunk_sourcetype,omitempty"`
	SplunkTlsCertificate *string `json:"splunk_tls_certificate,omitempty"`
	SplunkToken *string `json:"splunk_token,omitempty"`
	SplunkUrl *string `json:"splunk_url,omitempty"`
}

// NewSplunkLogForwardingConfig instantiates a new SplunkLogForwardingConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSplunkLogForwardingConfig() *SplunkLogForwardingConfig {
	this := SplunkLogForwardingConfig{}
	return &this
}

// NewSplunkLogForwardingConfigWithDefaults instantiates a new SplunkLogForwardingConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSplunkLogForwardingConfigWithDefaults() *SplunkLogForwardingConfig {
	this := SplunkLogForwardingConfig{}
	return &this
}

// GetSplunkEnableTls returns the SplunkEnableTls field value if set, zero value otherwise.
func (o *SplunkLogForwardingConfig) GetSplunkEnableTls() bool {
	if o == nil || o.SplunkEnableTls == nil {
		var ret bool
		return ret
	}
	return *o.SplunkEnableTls
}

// GetSplunkEnableTlsOk returns a tuple with the SplunkEnableTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplunkLogForwardingConfig) GetSplunkEnableTlsOk() (*bool, bool) {
	if o == nil || o.SplunkEnableTls == nil {
		return nil, false
	}
	return o.SplunkEnableTls, true
}

// HasSplunkEnableTls returns a boolean if a field has been set.
func (o *SplunkLogForwardingConfig) HasSplunkEnableTls() bool {
	if o != nil && o.SplunkEnableTls != nil {
		return true
	}

	return false
}

// SetSplunkEnableTls gets a reference to the given bool and assigns it to the SplunkEnableTls field.
func (o *SplunkLogForwardingConfig) SetSplunkEnableTls(v bool) {
	o.SplunkEnableTls = &v
}

// GetSplunkIndex returns the SplunkIndex field value if set, zero value otherwise.
func (o *SplunkLogForwardingConfig) GetSplunkIndex() string {
	if o == nil || o.SplunkIndex == nil {
		var ret string
		return ret
	}
	return *o.SplunkIndex
}

// GetSplunkIndexOk returns a tuple with the SplunkIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplunkLogForwardingConfig) GetSplunkIndexOk() (*string, bool) {
	if o == nil || o.SplunkIndex == nil {
		return nil, false
	}
	return o.SplunkIndex, true
}

// HasSplunkIndex returns a boolean if a field has been set.
func (o *SplunkLogForwardingConfig) HasSplunkIndex() bool {
	if o != nil && o.SplunkIndex != nil {
		return true
	}

	return false
}

// SetSplunkIndex gets a reference to the given string and assigns it to the SplunkIndex field.
func (o *SplunkLogForwardingConfig) SetSplunkIndex(v string) {
	o.SplunkIndex = &v
}

// GetSplunkSource returns the SplunkSource field value if set, zero value otherwise.
func (o *SplunkLogForwardingConfig) GetSplunkSource() string {
	if o == nil || o.SplunkSource == nil {
		var ret string
		return ret
	}
	return *o.SplunkSource
}

// GetSplunkSourceOk returns a tuple with the SplunkSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplunkLogForwardingConfig) GetSplunkSourceOk() (*string, bool) {
	if o == nil || o.SplunkSource == nil {
		return nil, false
	}
	return o.SplunkSource, true
}

// HasSplunkSource returns a boolean if a field has been set.
func (o *SplunkLogForwardingConfig) HasSplunkSource() bool {
	if o != nil && o.SplunkSource != nil {
		return true
	}

	return false
}

// SetSplunkSource gets a reference to the given string and assigns it to the SplunkSource field.
func (o *SplunkLogForwardingConfig) SetSplunkSource(v string) {
	o.SplunkSource = &v
}

// GetSplunkSourcetype returns the SplunkSourcetype field value if set, zero value otherwise.
func (o *SplunkLogForwardingConfig) GetSplunkSourcetype() string {
	if o == nil || o.SplunkSourcetype == nil {
		var ret string
		return ret
	}
	return *o.SplunkSourcetype
}

// GetSplunkSourcetypeOk returns a tuple with the SplunkSourcetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplunkLogForwardingConfig) GetSplunkSourcetypeOk() (*string, bool) {
	if o == nil || o.SplunkSourcetype == nil {
		return nil, false
	}
	return o.SplunkSourcetype, true
}

// HasSplunkSourcetype returns a boolean if a field has been set.
func (o *SplunkLogForwardingConfig) HasSplunkSourcetype() bool {
	if o != nil && o.SplunkSourcetype != nil {
		return true
	}

	return false
}

// SetSplunkSourcetype gets a reference to the given string and assigns it to the SplunkSourcetype field.
func (o *SplunkLogForwardingConfig) SetSplunkSourcetype(v string) {
	o.SplunkSourcetype = &v
}

// GetSplunkTlsCertificate returns the SplunkTlsCertificate field value if set, zero value otherwise.
func (o *SplunkLogForwardingConfig) GetSplunkTlsCertificate() string {
	if o == nil || o.SplunkTlsCertificate == nil {
		var ret string
		return ret
	}
	return *o.SplunkTlsCertificate
}

// GetSplunkTlsCertificateOk returns a tuple with the SplunkTlsCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplunkLogForwardingConfig) GetSplunkTlsCertificateOk() (*string, bool) {
	if o == nil || o.SplunkTlsCertificate == nil {
		return nil, false
	}
	return o.SplunkTlsCertificate, true
}

// HasSplunkTlsCertificate returns a boolean if a field has been set.
func (o *SplunkLogForwardingConfig) HasSplunkTlsCertificate() bool {
	if o != nil && o.SplunkTlsCertificate != nil {
		return true
	}

	return false
}

// SetSplunkTlsCertificate gets a reference to the given string and assigns it to the SplunkTlsCertificate field.
func (o *SplunkLogForwardingConfig) SetSplunkTlsCertificate(v string) {
	o.SplunkTlsCertificate = &v
}

// GetSplunkToken returns the SplunkToken field value if set, zero value otherwise.
func (o *SplunkLogForwardingConfig) GetSplunkToken() string {
	if o == nil || o.SplunkToken == nil {
		var ret string
		return ret
	}
	return *o.SplunkToken
}

// GetSplunkTokenOk returns a tuple with the SplunkToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplunkLogForwardingConfig) GetSplunkTokenOk() (*string, bool) {
	if o == nil || o.SplunkToken == nil {
		return nil, false
	}
	return o.SplunkToken, true
}

// HasSplunkToken returns a boolean if a field has been set.
func (o *SplunkLogForwardingConfig) HasSplunkToken() bool {
	if o != nil && o.SplunkToken != nil {
		return true
	}

	return false
}

// SetSplunkToken gets a reference to the given string and assigns it to the SplunkToken field.
func (o *SplunkLogForwardingConfig) SetSplunkToken(v string) {
	o.SplunkToken = &v
}

// GetSplunkUrl returns the SplunkUrl field value if set, zero value otherwise.
func (o *SplunkLogForwardingConfig) GetSplunkUrl() string {
	if o == nil || o.SplunkUrl == nil {
		var ret string
		return ret
	}
	return *o.SplunkUrl
}

// GetSplunkUrlOk returns a tuple with the SplunkUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplunkLogForwardingConfig) GetSplunkUrlOk() (*string, bool) {
	if o == nil || o.SplunkUrl == nil {
		return nil, false
	}
	return o.SplunkUrl, true
}

// HasSplunkUrl returns a boolean if a field has been set.
func (o *SplunkLogForwardingConfig) HasSplunkUrl() bool {
	if o != nil && o.SplunkUrl != nil {
		return true
	}

	return false
}

// SetSplunkUrl gets a reference to the given string and assigns it to the SplunkUrl field.
func (o *SplunkLogForwardingConfig) SetSplunkUrl(v string) {
	o.SplunkUrl = &v
}

func (o SplunkLogForwardingConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SplunkEnableTls != nil {
		toSerialize["splunk_enable_tls"] = o.SplunkEnableTls
	}
	if o.SplunkIndex != nil {
		toSerialize["splunk_index"] = o.SplunkIndex
	}
	if o.SplunkSource != nil {
		toSerialize["splunk_source"] = o.SplunkSource
	}
	if o.SplunkSourcetype != nil {
		toSerialize["splunk_sourcetype"] = o.SplunkSourcetype
	}
	if o.SplunkTlsCertificate != nil {
		toSerialize["splunk_tls_certificate"] = o.SplunkTlsCertificate
	}
	if o.SplunkToken != nil {
		toSerialize["splunk_token"] = o.SplunkToken
	}
	if o.SplunkUrl != nil {
		toSerialize["splunk_url"] = o.SplunkUrl
	}
	return json.Marshal(toSerialize)
}

type NullableSplunkLogForwardingConfig struct {
	value *SplunkLogForwardingConfig
	isSet bool
}

func (v NullableSplunkLogForwardingConfig) Get() *SplunkLogForwardingConfig {
	return v.value
}

func (v *NullableSplunkLogForwardingConfig) Set(val *SplunkLogForwardingConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSplunkLogForwardingConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSplunkLogForwardingConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSplunkLogForwardingConfig(val *SplunkLogForwardingConfig) *NullableSplunkLogForwardingConfig {
	return &NullableSplunkLogForwardingConfig{value: val, isSet: true}
}

func (v NullableSplunkLogForwardingConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSplunkLogForwardingConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


