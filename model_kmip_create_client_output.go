/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// KmipCreateClientOutput struct for KmipCreateClientOutput
type KmipCreateClientOutput struct {
	Certificate *string `json:"certificate,omitempty"`
	Id *string `json:"id,omitempty"`
	Key *string `json:"key,omitempty"`
}

// NewKmipCreateClientOutput instantiates a new KmipCreateClientOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKmipCreateClientOutput() *KmipCreateClientOutput {
	this := KmipCreateClientOutput{}
	return &this
}

// NewKmipCreateClientOutputWithDefaults instantiates a new KmipCreateClientOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKmipCreateClientOutputWithDefaults() *KmipCreateClientOutput {
	this := KmipCreateClientOutput{}
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *KmipCreateClientOutput) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmipCreateClientOutput) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *KmipCreateClientOutput) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *KmipCreateClientOutput) SetCertificate(v string) {
	o.Certificate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KmipCreateClientOutput) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmipCreateClientOutput) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KmipCreateClientOutput) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KmipCreateClientOutput) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *KmipCreateClientOutput) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmipCreateClientOutput) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *KmipCreateClientOutput) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *KmipCreateClientOutput) SetKey(v string) {
	o.Key = &v
}

func (o KmipCreateClientOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableKmipCreateClientOutput struct {
	value *KmipCreateClientOutput
	isSet bool
}

func (v NullableKmipCreateClientOutput) Get() *KmipCreateClientOutput {
	return v.value
}

func (v *NullableKmipCreateClientOutput) Set(val *KmipCreateClientOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableKmipCreateClientOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableKmipCreateClientOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKmipCreateClientOutput(val *KmipCreateClientOutput) *NullableKmipCreateClientOutput {
	return &NullableKmipCreateClientOutput{value: val, isSet: true}
}

func (v NullableKmipCreateClientOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKmipCreateClientOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


