/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GatewayCreateProducerRdp gatewayCreateProducerRdp is a command that creates rdp producer
type GatewayCreateProducerRdp struct {
	// Fixed user
	FixedUserOnly *string `json:"fixed-user-only,omitempty"`
	// Gateway url
	GatewayUrl *string `json:"gateway-url,omitempty"`
	// Producer name
	Name string `json:"name"`
	// Dynamic producer encryption key
	ProducerEncryptionKeyName *string `json:"producer-encryption-key-name,omitempty"`
	// RDP Admin Name
	RdpAdminName string `json:"rdp-admin-name"`
	// RDP Admin password
	RdpAdminPwd string `json:"rdp-admin-pwd"`
	// Hostname
	RdpHostName string `json:"rdp-host-name"`
	// Port
	RdpHostPort *string `json:"rdp-host-port,omitempty"`
	// Groups
	RdpUserGroups string `json:"rdp-user-groups"`
	// Authentication token (see `/auth` and `/configure`)
	Token *string `json:"token,omitempty"`
	// The universal identity token, Required only for universal_identity authentication
	UidToken *string `json:"uid-token,omitempty"`
	// User TTL
	UserTtl *string `json:"user-ttl,omitempty"`
}

// NewGatewayCreateProducerRdp instantiates a new GatewayCreateProducerRdp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayCreateProducerRdp(name string, rdpAdminName string, rdpAdminPwd string, rdpHostName string, rdpUserGroups string, ) *GatewayCreateProducerRdp {
	this := GatewayCreateProducerRdp{}
	var fixedUserOnly string = "false"
	this.FixedUserOnly = &fixedUserOnly
	var gatewayUrl string = "http://localhost:8000"
	this.GatewayUrl = &gatewayUrl
	this.Name = name
	this.RdpAdminName = rdpAdminName
	this.RdpAdminPwd = rdpAdminPwd
	this.RdpHostName = rdpHostName
	var rdpHostPort string = "22"
	this.RdpHostPort = &rdpHostPort
	this.RdpUserGroups = rdpUserGroups
	var userTtl string = "60m"
	this.UserTtl = &userTtl
	return &this
}

// NewGatewayCreateProducerRdpWithDefaults instantiates a new GatewayCreateProducerRdp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayCreateProducerRdpWithDefaults() *GatewayCreateProducerRdp {
	this := GatewayCreateProducerRdp{}
	var fixedUserOnly string = "false"
	this.FixedUserOnly = &fixedUserOnly
	var gatewayUrl string = "http://localhost:8000"
	this.GatewayUrl = &gatewayUrl
	var rdpHostPort string = "22"
	this.RdpHostPort = &rdpHostPort
	var userTtl string = "60m"
	this.UserTtl = &userTtl
	return &this
}

// GetFixedUserOnly returns the FixedUserOnly field value if set, zero value otherwise.
func (o *GatewayCreateProducerRdp) GetFixedUserOnly() string {
	if o == nil || o.FixedUserOnly == nil {
		var ret string
		return ret
	}
	return *o.FixedUserOnly
}

// GetFixedUserOnlyOk returns a tuple with the FixedUserOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetFixedUserOnlyOk() (*string, bool) {
	if o == nil || o.FixedUserOnly == nil {
		return nil, false
	}
	return o.FixedUserOnly, true
}

// HasFixedUserOnly returns a boolean if a field has been set.
func (o *GatewayCreateProducerRdp) HasFixedUserOnly() bool {
	if o != nil && o.FixedUserOnly != nil {
		return true
	}

	return false
}

// SetFixedUserOnly gets a reference to the given string and assigns it to the FixedUserOnly field.
func (o *GatewayCreateProducerRdp) SetFixedUserOnly(v string) {
	o.FixedUserOnly = &v
}

// GetGatewayUrl returns the GatewayUrl field value if set, zero value otherwise.
func (o *GatewayCreateProducerRdp) GetGatewayUrl() string {
	if o == nil || o.GatewayUrl == nil {
		var ret string
		return ret
	}
	return *o.GatewayUrl
}

// GetGatewayUrlOk returns a tuple with the GatewayUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetGatewayUrlOk() (*string, bool) {
	if o == nil || o.GatewayUrl == nil {
		return nil, false
	}
	return o.GatewayUrl, true
}

// HasGatewayUrl returns a boolean if a field has been set.
func (o *GatewayCreateProducerRdp) HasGatewayUrl() bool {
	if o != nil && o.GatewayUrl != nil {
		return true
	}

	return false
}

// SetGatewayUrl gets a reference to the given string and assigns it to the GatewayUrl field.
func (o *GatewayCreateProducerRdp) SetGatewayUrl(v string) {
	o.GatewayUrl = &v
}

// GetName returns the Name field value
func (o *GatewayCreateProducerRdp) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GatewayCreateProducerRdp) SetName(v string) {
	o.Name = v
}

// GetProducerEncryptionKeyName returns the ProducerEncryptionKeyName field value if set, zero value otherwise.
func (o *GatewayCreateProducerRdp) GetProducerEncryptionKeyName() string {
	if o == nil || o.ProducerEncryptionKeyName == nil {
		var ret string
		return ret
	}
	return *o.ProducerEncryptionKeyName
}

// GetProducerEncryptionKeyNameOk returns a tuple with the ProducerEncryptionKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetProducerEncryptionKeyNameOk() (*string, bool) {
	if o == nil || o.ProducerEncryptionKeyName == nil {
		return nil, false
	}
	return o.ProducerEncryptionKeyName, true
}

// HasProducerEncryptionKeyName returns a boolean if a field has been set.
func (o *GatewayCreateProducerRdp) HasProducerEncryptionKeyName() bool {
	if o != nil && o.ProducerEncryptionKeyName != nil {
		return true
	}

	return false
}

// SetProducerEncryptionKeyName gets a reference to the given string and assigns it to the ProducerEncryptionKeyName field.
func (o *GatewayCreateProducerRdp) SetProducerEncryptionKeyName(v string) {
	o.ProducerEncryptionKeyName = &v
}

// GetRdpAdminName returns the RdpAdminName field value
func (o *GatewayCreateProducerRdp) GetRdpAdminName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RdpAdminName
}

// GetRdpAdminNameOk returns a tuple with the RdpAdminName field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetRdpAdminNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RdpAdminName, true
}

// SetRdpAdminName sets field value
func (o *GatewayCreateProducerRdp) SetRdpAdminName(v string) {
	o.RdpAdminName = v
}

// GetRdpAdminPwd returns the RdpAdminPwd field value
func (o *GatewayCreateProducerRdp) GetRdpAdminPwd() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RdpAdminPwd
}

// GetRdpAdminPwdOk returns a tuple with the RdpAdminPwd field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetRdpAdminPwdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RdpAdminPwd, true
}

// SetRdpAdminPwd sets field value
func (o *GatewayCreateProducerRdp) SetRdpAdminPwd(v string) {
	o.RdpAdminPwd = v
}

// GetRdpHostName returns the RdpHostName field value
func (o *GatewayCreateProducerRdp) GetRdpHostName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RdpHostName
}

// GetRdpHostNameOk returns a tuple with the RdpHostName field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetRdpHostNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RdpHostName, true
}

// SetRdpHostName sets field value
func (o *GatewayCreateProducerRdp) SetRdpHostName(v string) {
	o.RdpHostName = v
}

// GetRdpHostPort returns the RdpHostPort field value if set, zero value otherwise.
func (o *GatewayCreateProducerRdp) GetRdpHostPort() string {
	if o == nil || o.RdpHostPort == nil {
		var ret string
		return ret
	}
	return *o.RdpHostPort
}

// GetRdpHostPortOk returns a tuple with the RdpHostPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetRdpHostPortOk() (*string, bool) {
	if o == nil || o.RdpHostPort == nil {
		return nil, false
	}
	return o.RdpHostPort, true
}

// HasRdpHostPort returns a boolean if a field has been set.
func (o *GatewayCreateProducerRdp) HasRdpHostPort() bool {
	if o != nil && o.RdpHostPort != nil {
		return true
	}

	return false
}

// SetRdpHostPort gets a reference to the given string and assigns it to the RdpHostPort field.
func (o *GatewayCreateProducerRdp) SetRdpHostPort(v string) {
	o.RdpHostPort = &v
}

// GetRdpUserGroups returns the RdpUserGroups field value
func (o *GatewayCreateProducerRdp) GetRdpUserGroups() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RdpUserGroups
}

// GetRdpUserGroupsOk returns a tuple with the RdpUserGroups field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetRdpUserGroupsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RdpUserGroups, true
}

// SetRdpUserGroups sets field value
func (o *GatewayCreateProducerRdp) SetRdpUserGroups(v string) {
	o.RdpUserGroups = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GatewayCreateProducerRdp) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GatewayCreateProducerRdp) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *GatewayCreateProducerRdp) SetToken(v string) {
	o.Token = &v
}

// GetUidToken returns the UidToken field value if set, zero value otherwise.
func (o *GatewayCreateProducerRdp) GetUidToken() string {
	if o == nil || o.UidToken == nil {
		var ret string
		return ret
	}
	return *o.UidToken
}

// GetUidTokenOk returns a tuple with the UidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetUidTokenOk() (*string, bool) {
	if o == nil || o.UidToken == nil {
		return nil, false
	}
	return o.UidToken, true
}

// HasUidToken returns a boolean if a field has been set.
func (o *GatewayCreateProducerRdp) HasUidToken() bool {
	if o != nil && o.UidToken != nil {
		return true
	}

	return false
}

// SetUidToken gets a reference to the given string and assigns it to the UidToken field.
func (o *GatewayCreateProducerRdp) SetUidToken(v string) {
	o.UidToken = &v
}

// GetUserTtl returns the UserTtl field value if set, zero value otherwise.
func (o *GatewayCreateProducerRdp) GetUserTtl() string {
	if o == nil || o.UserTtl == nil {
		var ret string
		return ret
	}
	return *o.UserTtl
}

// GetUserTtlOk returns a tuple with the UserTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateProducerRdp) GetUserTtlOk() (*string, bool) {
	if o == nil || o.UserTtl == nil {
		return nil, false
	}
	return o.UserTtl, true
}

// HasUserTtl returns a boolean if a field has been set.
func (o *GatewayCreateProducerRdp) HasUserTtl() bool {
	if o != nil && o.UserTtl != nil {
		return true
	}

	return false
}

// SetUserTtl gets a reference to the given string and assigns it to the UserTtl field.
func (o *GatewayCreateProducerRdp) SetUserTtl(v string) {
	o.UserTtl = &v
}

func (o GatewayCreateProducerRdp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FixedUserOnly != nil {
		toSerialize["fixed-user-only"] = o.FixedUserOnly
	}
	if o.GatewayUrl != nil {
		toSerialize["gateway-url"] = o.GatewayUrl
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.ProducerEncryptionKeyName != nil {
		toSerialize["producer-encryption-key-name"] = o.ProducerEncryptionKeyName
	}
	if true {
		toSerialize["rdp-admin-name"] = o.RdpAdminName
	}
	if true {
		toSerialize["rdp-admin-pwd"] = o.RdpAdminPwd
	}
	if true {
		toSerialize["rdp-host-name"] = o.RdpHostName
	}
	if o.RdpHostPort != nil {
		toSerialize["rdp-host-port"] = o.RdpHostPort
	}
	if true {
		toSerialize["rdp-user-groups"] = o.RdpUserGroups
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.UidToken != nil {
		toSerialize["uid-token"] = o.UidToken
	}
	if o.UserTtl != nil {
		toSerialize["user-ttl"] = o.UserTtl
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayCreateProducerRdp struct {
	value *GatewayCreateProducerRdp
	isSet bool
}

func (v NullableGatewayCreateProducerRdp) Get() *GatewayCreateProducerRdp {
	return v.value
}

func (v *NullableGatewayCreateProducerRdp) Set(val *GatewayCreateProducerRdp) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayCreateProducerRdp) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayCreateProducerRdp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayCreateProducerRdp(val *GatewayCreateProducerRdp) *NullableGatewayCreateProducerRdp {
	return &NullableGatewayCreateProducerRdp{value: val, isSet: true}
}

func (v NullableGatewayCreateProducerRdp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayCreateProducerRdp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


