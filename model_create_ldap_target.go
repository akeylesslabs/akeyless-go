/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// CreateLdapTarget struct for CreateLdapTarget
type CreateLdapTarget struct {
	// Access ID
	AccessId string `json:"access-id"`
	// Bind DN
	BindDn *string `json:"bind-dn,omitempty"`
	// Bind DN Password
	BindDnPassword *string `json:"bind-dn-password,omitempty"`
	// Comment about the target
	Comment *string `json:"comment,omitempty"`
	// EnableAnonymousSearch
	EnableAnonymSearch *bool `json:"enable-anonym-search,omitempty"`
	// Group attribute
	GroupAttribute *string `json:"group-attribute,omitempty"`
	// Group DN
	GroupDn *string `json:"group-dn,omitempty"`
	// Group attribute
	GroupFilter *string `json:"group-filter,omitempty"`
	// The name of a key that used to encrypt the target secret value (if empty, the account default protectionKey key will be used)
	Key *string `json:"key,omitempty"`
	// CA Certificate File Content
	LdapCaCert *string `json:"ldap-ca-cert,omitempty"`
	// LDAP Server URL
	LdapUrl string `json:"ldap-url"`
	// Target name
	Name string `json:"name"`
	// Required only when the authentication process requires a username and password
	Password *string `json:"password,omitempty"`
	// Base64-encoded ldap private key text
	PrivateKey *string `json:"private-key,omitempty"`
	// Authentication token (see `/auth` and `/configure`)
	Token *string `json:"token,omitempty"`
	// Token expiration
	TokenExpiration *string `json:"token-expiration,omitempty"`
	// The universal identity token, Required only for universal_identity authentication
	UidToken *string `json:"uid-token,omitempty"`
	// User Attribute
	UserAttribute *string `json:"user-attribute,omitempty"`
	// User DN
	UserDn string `json:"user-dn"`
	// Required only when the authentication process requires a username and password
	Username *string `json:"username,omitempty"`
}

// NewCreateLdapTarget instantiates a new CreateLdapTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLdapTarget(accessId string, ldapUrl string, name string, userDn string, ) *CreateLdapTarget {
	this := CreateLdapTarget{}
	this.AccessId = accessId
	this.LdapUrl = ldapUrl
	this.Name = name
	this.UserDn = userDn
	return &this
}

// NewCreateLdapTargetWithDefaults instantiates a new CreateLdapTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLdapTargetWithDefaults() *CreateLdapTarget {
	this := CreateLdapTarget{}
	return &this
}

// GetAccessId returns the AccessId field value
func (o *CreateLdapTarget) GetAccessId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccessId
}

// GetAccessIdOk returns a tuple with the AccessId field value
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetAccessIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessId, true
}

// SetAccessId sets field value
func (o *CreateLdapTarget) SetAccessId(v string) {
	o.AccessId = v
}

// GetBindDn returns the BindDn field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetBindDn() string {
	if o == nil || o.BindDn == nil {
		var ret string
		return ret
	}
	return *o.BindDn
}

// GetBindDnOk returns a tuple with the BindDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetBindDnOk() (*string, bool) {
	if o == nil || o.BindDn == nil {
		return nil, false
	}
	return o.BindDn, true
}

// HasBindDn returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasBindDn() bool {
	if o != nil && o.BindDn != nil {
		return true
	}

	return false
}

// SetBindDn gets a reference to the given string and assigns it to the BindDn field.
func (o *CreateLdapTarget) SetBindDn(v string) {
	o.BindDn = &v
}

// GetBindDnPassword returns the BindDnPassword field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetBindDnPassword() string {
	if o == nil || o.BindDnPassword == nil {
		var ret string
		return ret
	}
	return *o.BindDnPassword
}

// GetBindDnPasswordOk returns a tuple with the BindDnPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetBindDnPasswordOk() (*string, bool) {
	if o == nil || o.BindDnPassword == nil {
		return nil, false
	}
	return o.BindDnPassword, true
}

// HasBindDnPassword returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasBindDnPassword() bool {
	if o != nil && o.BindDnPassword != nil {
		return true
	}

	return false
}

// SetBindDnPassword gets a reference to the given string and assigns it to the BindDnPassword field.
func (o *CreateLdapTarget) SetBindDnPassword(v string) {
	o.BindDnPassword = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *CreateLdapTarget) SetComment(v string) {
	o.Comment = &v
}

// GetEnableAnonymSearch returns the EnableAnonymSearch field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetEnableAnonymSearch() bool {
	if o == nil || o.EnableAnonymSearch == nil {
		var ret bool
		return ret
	}
	return *o.EnableAnonymSearch
}

// GetEnableAnonymSearchOk returns a tuple with the EnableAnonymSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetEnableAnonymSearchOk() (*bool, bool) {
	if o == nil || o.EnableAnonymSearch == nil {
		return nil, false
	}
	return o.EnableAnonymSearch, true
}

// HasEnableAnonymSearch returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasEnableAnonymSearch() bool {
	if o != nil && o.EnableAnonymSearch != nil {
		return true
	}

	return false
}

// SetEnableAnonymSearch gets a reference to the given bool and assigns it to the EnableAnonymSearch field.
func (o *CreateLdapTarget) SetEnableAnonymSearch(v bool) {
	o.EnableAnonymSearch = &v
}

// GetGroupAttribute returns the GroupAttribute field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetGroupAttribute() string {
	if o == nil || o.GroupAttribute == nil {
		var ret string
		return ret
	}
	return *o.GroupAttribute
}

// GetGroupAttributeOk returns a tuple with the GroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetGroupAttributeOk() (*string, bool) {
	if o == nil || o.GroupAttribute == nil {
		return nil, false
	}
	return o.GroupAttribute, true
}

// HasGroupAttribute returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasGroupAttribute() bool {
	if o != nil && o.GroupAttribute != nil {
		return true
	}

	return false
}

// SetGroupAttribute gets a reference to the given string and assigns it to the GroupAttribute field.
func (o *CreateLdapTarget) SetGroupAttribute(v string) {
	o.GroupAttribute = &v
}

// GetGroupDn returns the GroupDn field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetGroupDn() string {
	if o == nil || o.GroupDn == nil {
		var ret string
		return ret
	}
	return *o.GroupDn
}

// GetGroupDnOk returns a tuple with the GroupDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetGroupDnOk() (*string, bool) {
	if o == nil || o.GroupDn == nil {
		return nil, false
	}
	return o.GroupDn, true
}

// HasGroupDn returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasGroupDn() bool {
	if o != nil && o.GroupDn != nil {
		return true
	}

	return false
}

// SetGroupDn gets a reference to the given string and assigns it to the GroupDn field.
func (o *CreateLdapTarget) SetGroupDn(v string) {
	o.GroupDn = &v
}

// GetGroupFilter returns the GroupFilter field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetGroupFilter() string {
	if o == nil || o.GroupFilter == nil {
		var ret string
		return ret
	}
	return *o.GroupFilter
}

// GetGroupFilterOk returns a tuple with the GroupFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetGroupFilterOk() (*string, bool) {
	if o == nil || o.GroupFilter == nil {
		return nil, false
	}
	return o.GroupFilter, true
}

// HasGroupFilter returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasGroupFilter() bool {
	if o != nil && o.GroupFilter != nil {
		return true
	}

	return false
}

// SetGroupFilter gets a reference to the given string and assigns it to the GroupFilter field.
func (o *CreateLdapTarget) SetGroupFilter(v string) {
	o.GroupFilter = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CreateLdapTarget) SetKey(v string) {
	o.Key = &v
}

// GetLdapCaCert returns the LdapCaCert field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetLdapCaCert() string {
	if o == nil || o.LdapCaCert == nil {
		var ret string
		return ret
	}
	return *o.LdapCaCert
}

// GetLdapCaCertOk returns a tuple with the LdapCaCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetLdapCaCertOk() (*string, bool) {
	if o == nil || o.LdapCaCert == nil {
		return nil, false
	}
	return o.LdapCaCert, true
}

// HasLdapCaCert returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasLdapCaCert() bool {
	if o != nil && o.LdapCaCert != nil {
		return true
	}

	return false
}

// SetLdapCaCert gets a reference to the given string and assigns it to the LdapCaCert field.
func (o *CreateLdapTarget) SetLdapCaCert(v string) {
	o.LdapCaCert = &v
}

// GetLdapUrl returns the LdapUrl field value
func (o *CreateLdapTarget) GetLdapUrl() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LdapUrl
}

// GetLdapUrlOk returns a tuple with the LdapUrl field value
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetLdapUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LdapUrl, true
}

// SetLdapUrl sets field value
func (o *CreateLdapTarget) SetLdapUrl(v string) {
	o.LdapUrl = v
}

// GetName returns the Name field value
func (o *CreateLdapTarget) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateLdapTarget) SetName(v string) {
	o.Name = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateLdapTarget) SetPassword(v string) {
	o.Password = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *CreateLdapTarget) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CreateLdapTarget) SetToken(v string) {
	o.Token = &v
}

// GetTokenExpiration returns the TokenExpiration field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetTokenExpiration() string {
	if o == nil || o.TokenExpiration == nil {
		var ret string
		return ret
	}
	return *o.TokenExpiration
}

// GetTokenExpirationOk returns a tuple with the TokenExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetTokenExpirationOk() (*string, bool) {
	if o == nil || o.TokenExpiration == nil {
		return nil, false
	}
	return o.TokenExpiration, true
}

// HasTokenExpiration returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasTokenExpiration() bool {
	if o != nil && o.TokenExpiration != nil {
		return true
	}

	return false
}

// SetTokenExpiration gets a reference to the given string and assigns it to the TokenExpiration field.
func (o *CreateLdapTarget) SetTokenExpiration(v string) {
	o.TokenExpiration = &v
}

// GetUidToken returns the UidToken field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetUidToken() string {
	if o == nil || o.UidToken == nil {
		var ret string
		return ret
	}
	return *o.UidToken
}

// GetUidTokenOk returns a tuple with the UidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetUidTokenOk() (*string, bool) {
	if o == nil || o.UidToken == nil {
		return nil, false
	}
	return o.UidToken, true
}

// HasUidToken returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasUidToken() bool {
	if o != nil && o.UidToken != nil {
		return true
	}

	return false
}

// SetUidToken gets a reference to the given string and assigns it to the UidToken field.
func (o *CreateLdapTarget) SetUidToken(v string) {
	o.UidToken = &v
}

// GetUserAttribute returns the UserAttribute field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetUserAttribute() string {
	if o == nil || o.UserAttribute == nil {
		var ret string
		return ret
	}
	return *o.UserAttribute
}

// GetUserAttributeOk returns a tuple with the UserAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetUserAttributeOk() (*string, bool) {
	if o == nil || o.UserAttribute == nil {
		return nil, false
	}
	return o.UserAttribute, true
}

// HasUserAttribute returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasUserAttribute() bool {
	if o != nil && o.UserAttribute != nil {
		return true
	}

	return false
}

// SetUserAttribute gets a reference to the given string and assigns it to the UserAttribute field.
func (o *CreateLdapTarget) SetUserAttribute(v string) {
	o.UserAttribute = &v
}

// GetUserDn returns the UserDn field value
func (o *CreateLdapTarget) GetUserDn() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UserDn
}

// GetUserDnOk returns a tuple with the UserDn field value
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetUserDnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserDn, true
}

// SetUserDn sets field value
func (o *CreateLdapTarget) SetUserDn(v string) {
	o.UserDn = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CreateLdapTarget) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLdapTarget) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateLdapTarget) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CreateLdapTarget) SetUsername(v string) {
	o.Username = &v
}

func (o CreateLdapTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access-id"] = o.AccessId
	}
	if o.BindDn != nil {
		toSerialize["bind-dn"] = o.BindDn
	}
	if o.BindDnPassword != nil {
		toSerialize["bind-dn-password"] = o.BindDnPassword
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.EnableAnonymSearch != nil {
		toSerialize["enable-anonym-search"] = o.EnableAnonymSearch
	}
	if o.GroupAttribute != nil {
		toSerialize["group-attribute"] = o.GroupAttribute
	}
	if o.GroupDn != nil {
		toSerialize["group-dn"] = o.GroupDn
	}
	if o.GroupFilter != nil {
		toSerialize["group-filter"] = o.GroupFilter
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.LdapCaCert != nil {
		toSerialize["ldap-ca-cert"] = o.LdapCaCert
	}
	if true {
		toSerialize["ldap-url"] = o.LdapUrl
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.PrivateKey != nil {
		toSerialize["private-key"] = o.PrivateKey
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.TokenExpiration != nil {
		toSerialize["token-expiration"] = o.TokenExpiration
	}
	if o.UidToken != nil {
		toSerialize["uid-token"] = o.UidToken
	}
	if o.UserAttribute != nil {
		toSerialize["user-attribute"] = o.UserAttribute
	}
	if true {
		toSerialize["user-dn"] = o.UserDn
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLdapTarget struct {
	value *CreateLdapTarget
	isSet bool
}

func (v NullableCreateLdapTarget) Get() *CreateLdapTarget {
	return v.value
}

func (v *NullableCreateLdapTarget) Set(val *CreateLdapTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLdapTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLdapTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLdapTarget(val *CreateLdapTarget) *NullableCreateLdapTarget {
	return &NullableCreateLdapTarget{value: val, isSet: true}
}

func (v NullableCreateLdapTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLdapTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


