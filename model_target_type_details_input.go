/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// TargetTypeDetailsInput struct for TargetTypeDetailsInput
type TargetTypeDetailsInput struct {
	ArtifactoryAdminApikey *string `json:"artifactory_admin_apikey,omitempty"`
	ArtifactoryAdminUsername *string `json:"artifactory_admin_username,omitempty"`
	ArtifactoryBaseUrl *string `json:"artifactory_base_url,omitempty"`
	AwsAccessKeyId *string `json:"aws_access_key_id,omitempty"`
	AwsRegion *string `json:"aws_region,omitempty"`
	AwsSecretAccessKey *string `json:"aws_secret_access_key,omitempty"`
	AwsSessionToken *string `json:"aws_session_token,omitempty"`
	AzureClientId *string `json:"azure_client_id,omitempty"`
	AzureClientSecret *string `json:"azure_client_secret,omitempty"`
	AzureTenantId *string `json:"azure_tenant_id,omitempty"`
	ChefServerHostName *string `json:"chef_server_host_name,omitempty"`
	ChefServerKey *string `json:"chef_server_key,omitempty"`
	ChefServerPort *string `json:"chef_server_port,omitempty"`
	ChefServerUrl *string `json:"chef_server_url,omitempty"`
	ChefServerUsername *string `json:"chef_server_username,omitempty"`
	ChefSkipSsl *bool `json:"chef_skip_ssl,omitempty"`
	DbHostName *string `json:"db_host_name,omitempty"`
	DbName *string `json:"db_name,omitempty"`
	DbPort *string `json:"db_port,omitempty"`
	DbPwd *string `json:"db_pwd,omitempty"`
	// (Optional) DBServerCertificates defines the set of root certificate authorities that clients use when verifying server certificates. If DBServerCertificates is empty, TLS uses the host's root CA set.
	DbServerCertificates *string `json:"db_server_certificates,omitempty"`
	// (Optional) ServerName is used to verify the hostname on the returned certificates unless InsecureSkipVerify is given. It is also included in the client's handshake to support virtual hosting unless it is an IP address.
	DbServerName *string `json:"db_server_name,omitempty"`
	DbUserName *string `json:"db_user_name,omitempty"`
	EksAccessKeyId *string `json:"eks_access_key_id,omitempty"`
	EksAssumeRole *string `json:"eks_assume_role,omitempty"`
	EksClusterCaCertificate *string `json:"eks_cluster_ca_certificate,omitempty"`
	EksClusterEndpoint *string `json:"eks_cluster_endpoint,omitempty"`
	EksClusterName *string `json:"eks_cluster_name,omitempty"`
	EksRegion *string `json:"eks_region,omitempty"`
	EksSecretAccessKey *string `json:"eks_secret_access_key,omitempty"`
	GcpServiceAccountEmail *string `json:"gcp_service_account_email,omitempty"`
	GcpServiceAccountKey *[]int32 `json:"gcp_service_account_key,omitempty"`
	GkeClusterCaCertificate *string `json:"gke_cluster_ca_certificate,omitempty"`
	GkeClusterEndpoint *string `json:"gke_cluster_endpoint,omitempty"`
	// GKEProjectID            string `json:\"gke_project_id\"`
	GkeClusterName *string `json:"gke_cluster_name,omitempty"`
	GkeServiceAccountKey *string `json:"gke_service_account_key,omitempty"`
	// GKEClusterComputeZone   string `json:\"gke_cluster_compute_zone\"`
	GkeServiceAccountName *string `json:"gke_service_account_name,omitempty"`
	Host *string `json:"host,omitempty"`
	MongodbAtlas *bool `json:"mongodb_atlas,omitempty"`
	MongodbAtlasApiPrivateKey *string `json:"mongodb_atlas_api_private_key,omitempty"`
	MongodbAtlasApiPublicKey *string `json:"mongodb_atlas_api_public_key,omitempty"`
	// mongodb atlas fields
	MongodbAtlasProjectId *string `json:"mongodb_atlas_project_id,omitempty"`
	// common fields
	MongodbDbName *string `json:"mongodb_db_name,omitempty"`
	MongodbDefaultAuthDb *string `json:"mongodb_default_auth_db,omitempty"`
	MongodbHostPort *string `json:"mongodb_host_port,omitempty"`
	MongodbPassword *string `json:"mongodb_password,omitempty"`
	// mongodb fields
	MongodbUriConnection *string `json:"mongodb_uri_connection,omitempty"`
	MongodbUriOptions *string `json:"mongodb_uri_options,omitempty"`
	MongodbUsername *string `json:"mongodb_username,omitempty"`
	Password *string `json:"password,omitempty"`
	Port *string `json:"port,omitempty"`
	PrivateKey *string `json:"private_key,omitempty"`
	PrivateKeyPassword *string `json:"private_key_password,omitempty"`
	RabbitmqServerPassword *string `json:"rabbitmq_server_password,omitempty"`
	RabbitmqServerUri *string `json:"rabbitmq_server_uri,omitempty"`
	RabbitmqServerUser *string `json:"rabbitmq_server_user,omitempty"`
	SfAccount *string `json:"sf_account,omitempty"`
	Url *string `json:"url,omitempty"`
	Username *string `json:"username,omitempty"`
	VenafiApiKey *string `json:"venafi_api_key,omitempty"`
	VenafiBaseUrl *string `json:"venafi_base_url,omitempty"`
	VenafiTppPassword *string `json:"venafi_tpp_password,omitempty"`
	VenafiTppUsername *string `json:"venafi_tpp_username,omitempty"`
	VenafiUseTpp *bool `json:"venafi_use_tpp,omitempty"`
	VenafiZone *string `json:"venafi_zone,omitempty"`
}

// NewTargetTypeDetailsInput instantiates a new TargetTypeDetailsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetTypeDetailsInput() *TargetTypeDetailsInput {
	this := TargetTypeDetailsInput{}
	return &this
}

// NewTargetTypeDetailsInputWithDefaults instantiates a new TargetTypeDetailsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetTypeDetailsInputWithDefaults() *TargetTypeDetailsInput {
	this := TargetTypeDetailsInput{}
	return &this
}

// GetArtifactoryAdminApikey returns the ArtifactoryAdminApikey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetArtifactoryAdminApikey() string {
	if o == nil || o.ArtifactoryAdminApikey == nil {
		var ret string
		return ret
	}
	return *o.ArtifactoryAdminApikey
}

// GetArtifactoryAdminApikeyOk returns a tuple with the ArtifactoryAdminApikey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetArtifactoryAdminApikeyOk() (*string, bool) {
	if o == nil || o.ArtifactoryAdminApikey == nil {
		return nil, false
	}
	return o.ArtifactoryAdminApikey, true
}

// HasArtifactoryAdminApikey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasArtifactoryAdminApikey() bool {
	if o != nil && o.ArtifactoryAdminApikey != nil {
		return true
	}

	return false
}

// SetArtifactoryAdminApikey gets a reference to the given string and assigns it to the ArtifactoryAdminApikey field.
func (o *TargetTypeDetailsInput) SetArtifactoryAdminApikey(v string) {
	o.ArtifactoryAdminApikey = &v
}

// GetArtifactoryAdminUsername returns the ArtifactoryAdminUsername field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetArtifactoryAdminUsername() string {
	if o == nil || o.ArtifactoryAdminUsername == nil {
		var ret string
		return ret
	}
	return *o.ArtifactoryAdminUsername
}

// GetArtifactoryAdminUsernameOk returns a tuple with the ArtifactoryAdminUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetArtifactoryAdminUsernameOk() (*string, bool) {
	if o == nil || o.ArtifactoryAdminUsername == nil {
		return nil, false
	}
	return o.ArtifactoryAdminUsername, true
}

// HasArtifactoryAdminUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasArtifactoryAdminUsername() bool {
	if o != nil && o.ArtifactoryAdminUsername != nil {
		return true
	}

	return false
}

// SetArtifactoryAdminUsername gets a reference to the given string and assigns it to the ArtifactoryAdminUsername field.
func (o *TargetTypeDetailsInput) SetArtifactoryAdminUsername(v string) {
	o.ArtifactoryAdminUsername = &v
}

// GetArtifactoryBaseUrl returns the ArtifactoryBaseUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetArtifactoryBaseUrl() string {
	if o == nil || o.ArtifactoryBaseUrl == nil {
		var ret string
		return ret
	}
	return *o.ArtifactoryBaseUrl
}

// GetArtifactoryBaseUrlOk returns a tuple with the ArtifactoryBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetArtifactoryBaseUrlOk() (*string, bool) {
	if o == nil || o.ArtifactoryBaseUrl == nil {
		return nil, false
	}
	return o.ArtifactoryBaseUrl, true
}

// HasArtifactoryBaseUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasArtifactoryBaseUrl() bool {
	if o != nil && o.ArtifactoryBaseUrl != nil {
		return true
	}

	return false
}

// SetArtifactoryBaseUrl gets a reference to the given string and assigns it to the ArtifactoryBaseUrl field.
func (o *TargetTypeDetailsInput) SetArtifactoryBaseUrl(v string) {
	o.ArtifactoryBaseUrl = &v
}

// GetAwsAccessKeyId returns the AwsAccessKeyId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAwsAccessKeyId() string {
	if o == nil || o.AwsAccessKeyId == nil {
		var ret string
		return ret
	}
	return *o.AwsAccessKeyId
}

// GetAwsAccessKeyIdOk returns a tuple with the AwsAccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAwsAccessKeyIdOk() (*string, bool) {
	if o == nil || o.AwsAccessKeyId == nil {
		return nil, false
	}
	return o.AwsAccessKeyId, true
}

// HasAwsAccessKeyId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAwsAccessKeyId() bool {
	if o != nil && o.AwsAccessKeyId != nil {
		return true
	}

	return false
}

// SetAwsAccessKeyId gets a reference to the given string and assigns it to the AwsAccessKeyId field.
func (o *TargetTypeDetailsInput) SetAwsAccessKeyId(v string) {
	o.AwsAccessKeyId = &v
}

// GetAwsRegion returns the AwsRegion field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAwsRegion() string {
	if o == nil || o.AwsRegion == nil {
		var ret string
		return ret
	}
	return *o.AwsRegion
}

// GetAwsRegionOk returns a tuple with the AwsRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAwsRegionOk() (*string, bool) {
	if o == nil || o.AwsRegion == nil {
		return nil, false
	}
	return o.AwsRegion, true
}

// HasAwsRegion returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAwsRegion() bool {
	if o != nil && o.AwsRegion != nil {
		return true
	}

	return false
}

// SetAwsRegion gets a reference to the given string and assigns it to the AwsRegion field.
func (o *TargetTypeDetailsInput) SetAwsRegion(v string) {
	o.AwsRegion = &v
}

// GetAwsSecretAccessKey returns the AwsSecretAccessKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAwsSecretAccessKey() string {
	if o == nil || o.AwsSecretAccessKey == nil {
		var ret string
		return ret
	}
	return *o.AwsSecretAccessKey
}

// GetAwsSecretAccessKeyOk returns a tuple with the AwsSecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAwsSecretAccessKeyOk() (*string, bool) {
	if o == nil || o.AwsSecretAccessKey == nil {
		return nil, false
	}
	return o.AwsSecretAccessKey, true
}

// HasAwsSecretAccessKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAwsSecretAccessKey() bool {
	if o != nil && o.AwsSecretAccessKey != nil {
		return true
	}

	return false
}

// SetAwsSecretAccessKey gets a reference to the given string and assigns it to the AwsSecretAccessKey field.
func (o *TargetTypeDetailsInput) SetAwsSecretAccessKey(v string) {
	o.AwsSecretAccessKey = &v
}

// GetAwsSessionToken returns the AwsSessionToken field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAwsSessionToken() string {
	if o == nil || o.AwsSessionToken == nil {
		var ret string
		return ret
	}
	return *o.AwsSessionToken
}

// GetAwsSessionTokenOk returns a tuple with the AwsSessionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAwsSessionTokenOk() (*string, bool) {
	if o == nil || o.AwsSessionToken == nil {
		return nil, false
	}
	return o.AwsSessionToken, true
}

// HasAwsSessionToken returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAwsSessionToken() bool {
	if o != nil && o.AwsSessionToken != nil {
		return true
	}

	return false
}

// SetAwsSessionToken gets a reference to the given string and assigns it to the AwsSessionToken field.
func (o *TargetTypeDetailsInput) SetAwsSessionToken(v string) {
	o.AwsSessionToken = &v
}

// GetAzureClientId returns the AzureClientId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAzureClientId() string {
	if o == nil || o.AzureClientId == nil {
		var ret string
		return ret
	}
	return *o.AzureClientId
}

// GetAzureClientIdOk returns a tuple with the AzureClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAzureClientIdOk() (*string, bool) {
	if o == nil || o.AzureClientId == nil {
		return nil, false
	}
	return o.AzureClientId, true
}

// HasAzureClientId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAzureClientId() bool {
	if o != nil && o.AzureClientId != nil {
		return true
	}

	return false
}

// SetAzureClientId gets a reference to the given string and assigns it to the AzureClientId field.
func (o *TargetTypeDetailsInput) SetAzureClientId(v string) {
	o.AzureClientId = &v
}

// GetAzureClientSecret returns the AzureClientSecret field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAzureClientSecret() string {
	if o == nil || o.AzureClientSecret == nil {
		var ret string
		return ret
	}
	return *o.AzureClientSecret
}

// GetAzureClientSecretOk returns a tuple with the AzureClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAzureClientSecretOk() (*string, bool) {
	if o == nil || o.AzureClientSecret == nil {
		return nil, false
	}
	return o.AzureClientSecret, true
}

// HasAzureClientSecret returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAzureClientSecret() bool {
	if o != nil && o.AzureClientSecret != nil {
		return true
	}

	return false
}

// SetAzureClientSecret gets a reference to the given string and assigns it to the AzureClientSecret field.
func (o *TargetTypeDetailsInput) SetAzureClientSecret(v string) {
	o.AzureClientSecret = &v
}

// GetAzureTenantId returns the AzureTenantId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAzureTenantId() string {
	if o == nil || o.AzureTenantId == nil {
		var ret string
		return ret
	}
	return *o.AzureTenantId
}

// GetAzureTenantIdOk returns a tuple with the AzureTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAzureTenantIdOk() (*string, bool) {
	if o == nil || o.AzureTenantId == nil {
		return nil, false
	}
	return o.AzureTenantId, true
}

// HasAzureTenantId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAzureTenantId() bool {
	if o != nil && o.AzureTenantId != nil {
		return true
	}

	return false
}

// SetAzureTenantId gets a reference to the given string and assigns it to the AzureTenantId field.
func (o *TargetTypeDetailsInput) SetAzureTenantId(v string) {
	o.AzureTenantId = &v
}

// GetChefServerHostName returns the ChefServerHostName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerHostName() string {
	if o == nil || o.ChefServerHostName == nil {
		var ret string
		return ret
	}
	return *o.ChefServerHostName
}

// GetChefServerHostNameOk returns a tuple with the ChefServerHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerHostNameOk() (*string, bool) {
	if o == nil || o.ChefServerHostName == nil {
		return nil, false
	}
	return o.ChefServerHostName, true
}

// HasChefServerHostName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerHostName() bool {
	if o != nil && o.ChefServerHostName != nil {
		return true
	}

	return false
}

// SetChefServerHostName gets a reference to the given string and assigns it to the ChefServerHostName field.
func (o *TargetTypeDetailsInput) SetChefServerHostName(v string) {
	o.ChefServerHostName = &v
}

// GetChefServerKey returns the ChefServerKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerKey() string {
	if o == nil || o.ChefServerKey == nil {
		var ret string
		return ret
	}
	return *o.ChefServerKey
}

// GetChefServerKeyOk returns a tuple with the ChefServerKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerKeyOk() (*string, bool) {
	if o == nil || o.ChefServerKey == nil {
		return nil, false
	}
	return o.ChefServerKey, true
}

// HasChefServerKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerKey() bool {
	if o != nil && o.ChefServerKey != nil {
		return true
	}

	return false
}

// SetChefServerKey gets a reference to the given string and assigns it to the ChefServerKey field.
func (o *TargetTypeDetailsInput) SetChefServerKey(v string) {
	o.ChefServerKey = &v
}

// GetChefServerPort returns the ChefServerPort field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerPort() string {
	if o == nil || o.ChefServerPort == nil {
		var ret string
		return ret
	}
	return *o.ChefServerPort
}

// GetChefServerPortOk returns a tuple with the ChefServerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerPortOk() (*string, bool) {
	if o == nil || o.ChefServerPort == nil {
		return nil, false
	}
	return o.ChefServerPort, true
}

// HasChefServerPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerPort() bool {
	if o != nil && o.ChefServerPort != nil {
		return true
	}

	return false
}

// SetChefServerPort gets a reference to the given string and assigns it to the ChefServerPort field.
func (o *TargetTypeDetailsInput) SetChefServerPort(v string) {
	o.ChefServerPort = &v
}

// GetChefServerUrl returns the ChefServerUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerUrl() string {
	if o == nil || o.ChefServerUrl == nil {
		var ret string
		return ret
	}
	return *o.ChefServerUrl
}

// GetChefServerUrlOk returns a tuple with the ChefServerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerUrlOk() (*string, bool) {
	if o == nil || o.ChefServerUrl == nil {
		return nil, false
	}
	return o.ChefServerUrl, true
}

// HasChefServerUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerUrl() bool {
	if o != nil && o.ChefServerUrl != nil {
		return true
	}

	return false
}

// SetChefServerUrl gets a reference to the given string and assigns it to the ChefServerUrl field.
func (o *TargetTypeDetailsInput) SetChefServerUrl(v string) {
	o.ChefServerUrl = &v
}

// GetChefServerUsername returns the ChefServerUsername field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerUsername() string {
	if o == nil || o.ChefServerUsername == nil {
		var ret string
		return ret
	}
	return *o.ChefServerUsername
}

// GetChefServerUsernameOk returns a tuple with the ChefServerUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerUsernameOk() (*string, bool) {
	if o == nil || o.ChefServerUsername == nil {
		return nil, false
	}
	return o.ChefServerUsername, true
}

// HasChefServerUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerUsername() bool {
	if o != nil && o.ChefServerUsername != nil {
		return true
	}

	return false
}

// SetChefServerUsername gets a reference to the given string and assigns it to the ChefServerUsername field.
func (o *TargetTypeDetailsInput) SetChefServerUsername(v string) {
	o.ChefServerUsername = &v
}

// GetChefSkipSsl returns the ChefSkipSsl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefSkipSsl() bool {
	if o == nil || o.ChefSkipSsl == nil {
		var ret bool
		return ret
	}
	return *o.ChefSkipSsl
}

// GetChefSkipSslOk returns a tuple with the ChefSkipSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefSkipSslOk() (*bool, bool) {
	if o == nil || o.ChefSkipSsl == nil {
		return nil, false
	}
	return o.ChefSkipSsl, true
}

// HasChefSkipSsl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefSkipSsl() bool {
	if o != nil && o.ChefSkipSsl != nil {
		return true
	}

	return false
}

// SetChefSkipSsl gets a reference to the given bool and assigns it to the ChefSkipSsl field.
func (o *TargetTypeDetailsInput) SetChefSkipSsl(v bool) {
	o.ChefSkipSsl = &v
}

// GetDbHostName returns the DbHostName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbHostName() string {
	if o == nil || o.DbHostName == nil {
		var ret string
		return ret
	}
	return *o.DbHostName
}

// GetDbHostNameOk returns a tuple with the DbHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbHostNameOk() (*string, bool) {
	if o == nil || o.DbHostName == nil {
		return nil, false
	}
	return o.DbHostName, true
}

// HasDbHostName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbHostName() bool {
	if o != nil && o.DbHostName != nil {
		return true
	}

	return false
}

// SetDbHostName gets a reference to the given string and assigns it to the DbHostName field.
func (o *TargetTypeDetailsInput) SetDbHostName(v string) {
	o.DbHostName = &v
}

// GetDbName returns the DbName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbName() string {
	if o == nil || o.DbName == nil {
		var ret string
		return ret
	}
	return *o.DbName
}

// GetDbNameOk returns a tuple with the DbName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbNameOk() (*string, bool) {
	if o == nil || o.DbName == nil {
		return nil, false
	}
	return o.DbName, true
}

// HasDbName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbName() bool {
	if o != nil && o.DbName != nil {
		return true
	}

	return false
}

// SetDbName gets a reference to the given string and assigns it to the DbName field.
func (o *TargetTypeDetailsInput) SetDbName(v string) {
	o.DbName = &v
}

// GetDbPort returns the DbPort field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbPort() string {
	if o == nil || o.DbPort == nil {
		var ret string
		return ret
	}
	return *o.DbPort
}

// GetDbPortOk returns a tuple with the DbPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbPortOk() (*string, bool) {
	if o == nil || o.DbPort == nil {
		return nil, false
	}
	return o.DbPort, true
}

// HasDbPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbPort() bool {
	if o != nil && o.DbPort != nil {
		return true
	}

	return false
}

// SetDbPort gets a reference to the given string and assigns it to the DbPort field.
func (o *TargetTypeDetailsInput) SetDbPort(v string) {
	o.DbPort = &v
}

// GetDbPwd returns the DbPwd field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbPwd() string {
	if o == nil || o.DbPwd == nil {
		var ret string
		return ret
	}
	return *o.DbPwd
}

// GetDbPwdOk returns a tuple with the DbPwd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbPwdOk() (*string, bool) {
	if o == nil || o.DbPwd == nil {
		return nil, false
	}
	return o.DbPwd, true
}

// HasDbPwd returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbPwd() bool {
	if o != nil && o.DbPwd != nil {
		return true
	}

	return false
}

// SetDbPwd gets a reference to the given string and assigns it to the DbPwd field.
func (o *TargetTypeDetailsInput) SetDbPwd(v string) {
	o.DbPwd = &v
}

// GetDbServerCertificates returns the DbServerCertificates field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbServerCertificates() string {
	if o == nil || o.DbServerCertificates == nil {
		var ret string
		return ret
	}
	return *o.DbServerCertificates
}

// GetDbServerCertificatesOk returns a tuple with the DbServerCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbServerCertificatesOk() (*string, bool) {
	if o == nil || o.DbServerCertificates == nil {
		return nil, false
	}
	return o.DbServerCertificates, true
}

// HasDbServerCertificates returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbServerCertificates() bool {
	if o != nil && o.DbServerCertificates != nil {
		return true
	}

	return false
}

// SetDbServerCertificates gets a reference to the given string and assigns it to the DbServerCertificates field.
func (o *TargetTypeDetailsInput) SetDbServerCertificates(v string) {
	o.DbServerCertificates = &v
}

// GetDbServerName returns the DbServerName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbServerName() string {
	if o == nil || o.DbServerName == nil {
		var ret string
		return ret
	}
	return *o.DbServerName
}

// GetDbServerNameOk returns a tuple with the DbServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbServerNameOk() (*string, bool) {
	if o == nil || o.DbServerName == nil {
		return nil, false
	}
	return o.DbServerName, true
}

// HasDbServerName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbServerName() bool {
	if o != nil && o.DbServerName != nil {
		return true
	}

	return false
}

// SetDbServerName gets a reference to the given string and assigns it to the DbServerName field.
func (o *TargetTypeDetailsInput) SetDbServerName(v string) {
	o.DbServerName = &v
}

// GetDbUserName returns the DbUserName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbUserName() string {
	if o == nil || o.DbUserName == nil {
		var ret string
		return ret
	}
	return *o.DbUserName
}

// GetDbUserNameOk returns a tuple with the DbUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbUserNameOk() (*string, bool) {
	if o == nil || o.DbUserName == nil {
		return nil, false
	}
	return o.DbUserName, true
}

// HasDbUserName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbUserName() bool {
	if o != nil && o.DbUserName != nil {
		return true
	}

	return false
}

// SetDbUserName gets a reference to the given string and assigns it to the DbUserName field.
func (o *TargetTypeDetailsInput) SetDbUserName(v string) {
	o.DbUserName = &v
}

// GetEksAccessKeyId returns the EksAccessKeyId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksAccessKeyId() string {
	if o == nil || o.EksAccessKeyId == nil {
		var ret string
		return ret
	}
	return *o.EksAccessKeyId
}

// GetEksAccessKeyIdOk returns a tuple with the EksAccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksAccessKeyIdOk() (*string, bool) {
	if o == nil || o.EksAccessKeyId == nil {
		return nil, false
	}
	return o.EksAccessKeyId, true
}

// HasEksAccessKeyId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksAccessKeyId() bool {
	if o != nil && o.EksAccessKeyId != nil {
		return true
	}

	return false
}

// SetEksAccessKeyId gets a reference to the given string and assigns it to the EksAccessKeyId field.
func (o *TargetTypeDetailsInput) SetEksAccessKeyId(v string) {
	o.EksAccessKeyId = &v
}

// GetEksAssumeRole returns the EksAssumeRole field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksAssumeRole() string {
	if o == nil || o.EksAssumeRole == nil {
		var ret string
		return ret
	}
	return *o.EksAssumeRole
}

// GetEksAssumeRoleOk returns a tuple with the EksAssumeRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksAssumeRoleOk() (*string, bool) {
	if o == nil || o.EksAssumeRole == nil {
		return nil, false
	}
	return o.EksAssumeRole, true
}

// HasEksAssumeRole returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksAssumeRole() bool {
	if o != nil && o.EksAssumeRole != nil {
		return true
	}

	return false
}

// SetEksAssumeRole gets a reference to the given string and assigns it to the EksAssumeRole field.
func (o *TargetTypeDetailsInput) SetEksAssumeRole(v string) {
	o.EksAssumeRole = &v
}

// GetEksClusterCaCertificate returns the EksClusterCaCertificate field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksClusterCaCertificate() string {
	if o == nil || o.EksClusterCaCertificate == nil {
		var ret string
		return ret
	}
	return *o.EksClusterCaCertificate
}

// GetEksClusterCaCertificateOk returns a tuple with the EksClusterCaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksClusterCaCertificateOk() (*string, bool) {
	if o == nil || o.EksClusterCaCertificate == nil {
		return nil, false
	}
	return o.EksClusterCaCertificate, true
}

// HasEksClusterCaCertificate returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksClusterCaCertificate() bool {
	if o != nil && o.EksClusterCaCertificate != nil {
		return true
	}

	return false
}

// SetEksClusterCaCertificate gets a reference to the given string and assigns it to the EksClusterCaCertificate field.
func (o *TargetTypeDetailsInput) SetEksClusterCaCertificate(v string) {
	o.EksClusterCaCertificate = &v
}

// GetEksClusterEndpoint returns the EksClusterEndpoint field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksClusterEndpoint() string {
	if o == nil || o.EksClusterEndpoint == nil {
		var ret string
		return ret
	}
	return *o.EksClusterEndpoint
}

// GetEksClusterEndpointOk returns a tuple with the EksClusterEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksClusterEndpointOk() (*string, bool) {
	if o == nil || o.EksClusterEndpoint == nil {
		return nil, false
	}
	return o.EksClusterEndpoint, true
}

// HasEksClusterEndpoint returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksClusterEndpoint() bool {
	if o != nil && o.EksClusterEndpoint != nil {
		return true
	}

	return false
}

// SetEksClusterEndpoint gets a reference to the given string and assigns it to the EksClusterEndpoint field.
func (o *TargetTypeDetailsInput) SetEksClusterEndpoint(v string) {
	o.EksClusterEndpoint = &v
}

// GetEksClusterName returns the EksClusterName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksClusterName() string {
	if o == nil || o.EksClusterName == nil {
		var ret string
		return ret
	}
	return *o.EksClusterName
}

// GetEksClusterNameOk returns a tuple with the EksClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksClusterNameOk() (*string, bool) {
	if o == nil || o.EksClusterName == nil {
		return nil, false
	}
	return o.EksClusterName, true
}

// HasEksClusterName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksClusterName() bool {
	if o != nil && o.EksClusterName != nil {
		return true
	}

	return false
}

// SetEksClusterName gets a reference to the given string and assigns it to the EksClusterName field.
func (o *TargetTypeDetailsInput) SetEksClusterName(v string) {
	o.EksClusterName = &v
}

// GetEksRegion returns the EksRegion field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksRegion() string {
	if o == nil || o.EksRegion == nil {
		var ret string
		return ret
	}
	return *o.EksRegion
}

// GetEksRegionOk returns a tuple with the EksRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksRegionOk() (*string, bool) {
	if o == nil || o.EksRegion == nil {
		return nil, false
	}
	return o.EksRegion, true
}

// HasEksRegion returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksRegion() bool {
	if o != nil && o.EksRegion != nil {
		return true
	}

	return false
}

// SetEksRegion gets a reference to the given string and assigns it to the EksRegion field.
func (o *TargetTypeDetailsInput) SetEksRegion(v string) {
	o.EksRegion = &v
}

// GetEksSecretAccessKey returns the EksSecretAccessKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksSecretAccessKey() string {
	if o == nil || o.EksSecretAccessKey == nil {
		var ret string
		return ret
	}
	return *o.EksSecretAccessKey
}

// GetEksSecretAccessKeyOk returns a tuple with the EksSecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksSecretAccessKeyOk() (*string, bool) {
	if o == nil || o.EksSecretAccessKey == nil {
		return nil, false
	}
	return o.EksSecretAccessKey, true
}

// HasEksSecretAccessKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksSecretAccessKey() bool {
	if o != nil && o.EksSecretAccessKey != nil {
		return true
	}

	return false
}

// SetEksSecretAccessKey gets a reference to the given string and assigns it to the EksSecretAccessKey field.
func (o *TargetTypeDetailsInput) SetEksSecretAccessKey(v string) {
	o.EksSecretAccessKey = &v
}

// GetGcpServiceAccountEmail returns the GcpServiceAccountEmail field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountEmail() string {
	if o == nil || o.GcpServiceAccountEmail == nil {
		var ret string
		return ret
	}
	return *o.GcpServiceAccountEmail
}

// GetGcpServiceAccountEmailOk returns a tuple with the GcpServiceAccountEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountEmailOk() (*string, bool) {
	if o == nil || o.GcpServiceAccountEmail == nil {
		return nil, false
	}
	return o.GcpServiceAccountEmail, true
}

// HasGcpServiceAccountEmail returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGcpServiceAccountEmail() bool {
	if o != nil && o.GcpServiceAccountEmail != nil {
		return true
	}

	return false
}

// SetGcpServiceAccountEmail gets a reference to the given string and assigns it to the GcpServiceAccountEmail field.
func (o *TargetTypeDetailsInput) SetGcpServiceAccountEmail(v string) {
	o.GcpServiceAccountEmail = &v
}

// GetGcpServiceAccountKey returns the GcpServiceAccountKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountKey() []int32 {
	if o == nil || o.GcpServiceAccountKey == nil {
		var ret []int32
		return ret
	}
	return *o.GcpServiceAccountKey
}

// GetGcpServiceAccountKeyOk returns a tuple with the GcpServiceAccountKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountKeyOk() (*[]int32, bool) {
	if o == nil || o.GcpServiceAccountKey == nil {
		return nil, false
	}
	return o.GcpServiceAccountKey, true
}

// HasGcpServiceAccountKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGcpServiceAccountKey() bool {
	if o != nil && o.GcpServiceAccountKey != nil {
		return true
	}

	return false
}

// SetGcpServiceAccountKey gets a reference to the given []int32 and assigns it to the GcpServiceAccountKey field.
func (o *TargetTypeDetailsInput) SetGcpServiceAccountKey(v []int32) {
	o.GcpServiceAccountKey = &v
}

// GetGkeClusterCaCertificate returns the GkeClusterCaCertificate field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeClusterCaCertificate() string {
	if o == nil || o.GkeClusterCaCertificate == nil {
		var ret string
		return ret
	}
	return *o.GkeClusterCaCertificate
}

// GetGkeClusterCaCertificateOk returns a tuple with the GkeClusterCaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeClusterCaCertificateOk() (*string, bool) {
	if o == nil || o.GkeClusterCaCertificate == nil {
		return nil, false
	}
	return o.GkeClusterCaCertificate, true
}

// HasGkeClusterCaCertificate returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeClusterCaCertificate() bool {
	if o != nil && o.GkeClusterCaCertificate != nil {
		return true
	}

	return false
}

// SetGkeClusterCaCertificate gets a reference to the given string and assigns it to the GkeClusterCaCertificate field.
func (o *TargetTypeDetailsInput) SetGkeClusterCaCertificate(v string) {
	o.GkeClusterCaCertificate = &v
}

// GetGkeClusterEndpoint returns the GkeClusterEndpoint field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeClusterEndpoint() string {
	if o == nil || o.GkeClusterEndpoint == nil {
		var ret string
		return ret
	}
	return *o.GkeClusterEndpoint
}

// GetGkeClusterEndpointOk returns a tuple with the GkeClusterEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeClusterEndpointOk() (*string, bool) {
	if o == nil || o.GkeClusterEndpoint == nil {
		return nil, false
	}
	return o.GkeClusterEndpoint, true
}

// HasGkeClusterEndpoint returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeClusterEndpoint() bool {
	if o != nil && o.GkeClusterEndpoint != nil {
		return true
	}

	return false
}

// SetGkeClusterEndpoint gets a reference to the given string and assigns it to the GkeClusterEndpoint field.
func (o *TargetTypeDetailsInput) SetGkeClusterEndpoint(v string) {
	o.GkeClusterEndpoint = &v
}

// GetGkeClusterName returns the GkeClusterName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeClusterName() string {
	if o == nil || o.GkeClusterName == nil {
		var ret string
		return ret
	}
	return *o.GkeClusterName
}

// GetGkeClusterNameOk returns a tuple with the GkeClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeClusterNameOk() (*string, bool) {
	if o == nil || o.GkeClusterName == nil {
		return nil, false
	}
	return o.GkeClusterName, true
}

// HasGkeClusterName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeClusterName() bool {
	if o != nil && o.GkeClusterName != nil {
		return true
	}

	return false
}

// SetGkeClusterName gets a reference to the given string and assigns it to the GkeClusterName field.
func (o *TargetTypeDetailsInput) SetGkeClusterName(v string) {
	o.GkeClusterName = &v
}

// GetGkeServiceAccountKey returns the GkeServiceAccountKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeServiceAccountKey() string {
	if o == nil || o.GkeServiceAccountKey == nil {
		var ret string
		return ret
	}
	return *o.GkeServiceAccountKey
}

// GetGkeServiceAccountKeyOk returns a tuple with the GkeServiceAccountKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeServiceAccountKeyOk() (*string, bool) {
	if o == nil || o.GkeServiceAccountKey == nil {
		return nil, false
	}
	return o.GkeServiceAccountKey, true
}

// HasGkeServiceAccountKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeServiceAccountKey() bool {
	if o != nil && o.GkeServiceAccountKey != nil {
		return true
	}

	return false
}

// SetGkeServiceAccountKey gets a reference to the given string and assigns it to the GkeServiceAccountKey field.
func (o *TargetTypeDetailsInput) SetGkeServiceAccountKey(v string) {
	o.GkeServiceAccountKey = &v
}

// GetGkeServiceAccountName returns the GkeServiceAccountName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeServiceAccountName() string {
	if o == nil || o.GkeServiceAccountName == nil {
		var ret string
		return ret
	}
	return *o.GkeServiceAccountName
}

// GetGkeServiceAccountNameOk returns a tuple with the GkeServiceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeServiceAccountNameOk() (*string, bool) {
	if o == nil || o.GkeServiceAccountName == nil {
		return nil, false
	}
	return o.GkeServiceAccountName, true
}

// HasGkeServiceAccountName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeServiceAccountName() bool {
	if o != nil && o.GkeServiceAccountName != nil {
		return true
	}

	return false
}

// SetGkeServiceAccountName gets a reference to the given string and assigns it to the GkeServiceAccountName field.
func (o *TargetTypeDetailsInput) SetGkeServiceAccountName(v string) {
	o.GkeServiceAccountName = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *TargetTypeDetailsInput) SetHost(v string) {
	o.Host = &v
}

// GetMongodbAtlas returns the MongodbAtlas field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbAtlas() bool {
	if o == nil || o.MongodbAtlas == nil {
		var ret bool
		return ret
	}
	return *o.MongodbAtlas
}

// GetMongodbAtlasOk returns a tuple with the MongodbAtlas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbAtlasOk() (*bool, bool) {
	if o == nil || o.MongodbAtlas == nil {
		return nil, false
	}
	return o.MongodbAtlas, true
}

// HasMongodbAtlas returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbAtlas() bool {
	if o != nil && o.MongodbAtlas != nil {
		return true
	}

	return false
}

// SetMongodbAtlas gets a reference to the given bool and assigns it to the MongodbAtlas field.
func (o *TargetTypeDetailsInput) SetMongodbAtlas(v bool) {
	o.MongodbAtlas = &v
}

// GetMongodbAtlasApiPrivateKey returns the MongodbAtlasApiPrivateKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbAtlasApiPrivateKey() string {
	if o == nil || o.MongodbAtlasApiPrivateKey == nil {
		var ret string
		return ret
	}
	return *o.MongodbAtlasApiPrivateKey
}

// GetMongodbAtlasApiPrivateKeyOk returns a tuple with the MongodbAtlasApiPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbAtlasApiPrivateKeyOk() (*string, bool) {
	if o == nil || o.MongodbAtlasApiPrivateKey == nil {
		return nil, false
	}
	return o.MongodbAtlasApiPrivateKey, true
}

// HasMongodbAtlasApiPrivateKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbAtlasApiPrivateKey() bool {
	if o != nil && o.MongodbAtlasApiPrivateKey != nil {
		return true
	}

	return false
}

// SetMongodbAtlasApiPrivateKey gets a reference to the given string and assigns it to the MongodbAtlasApiPrivateKey field.
func (o *TargetTypeDetailsInput) SetMongodbAtlasApiPrivateKey(v string) {
	o.MongodbAtlasApiPrivateKey = &v
}

// GetMongodbAtlasApiPublicKey returns the MongodbAtlasApiPublicKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbAtlasApiPublicKey() string {
	if o == nil || o.MongodbAtlasApiPublicKey == nil {
		var ret string
		return ret
	}
	return *o.MongodbAtlasApiPublicKey
}

// GetMongodbAtlasApiPublicKeyOk returns a tuple with the MongodbAtlasApiPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbAtlasApiPublicKeyOk() (*string, bool) {
	if o == nil || o.MongodbAtlasApiPublicKey == nil {
		return nil, false
	}
	return o.MongodbAtlasApiPublicKey, true
}

// HasMongodbAtlasApiPublicKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbAtlasApiPublicKey() bool {
	if o != nil && o.MongodbAtlasApiPublicKey != nil {
		return true
	}

	return false
}

// SetMongodbAtlasApiPublicKey gets a reference to the given string and assigns it to the MongodbAtlasApiPublicKey field.
func (o *TargetTypeDetailsInput) SetMongodbAtlasApiPublicKey(v string) {
	o.MongodbAtlasApiPublicKey = &v
}

// GetMongodbAtlasProjectId returns the MongodbAtlasProjectId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbAtlasProjectId() string {
	if o == nil || o.MongodbAtlasProjectId == nil {
		var ret string
		return ret
	}
	return *o.MongodbAtlasProjectId
}

// GetMongodbAtlasProjectIdOk returns a tuple with the MongodbAtlasProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbAtlasProjectIdOk() (*string, bool) {
	if o == nil || o.MongodbAtlasProjectId == nil {
		return nil, false
	}
	return o.MongodbAtlasProjectId, true
}

// HasMongodbAtlasProjectId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbAtlasProjectId() bool {
	if o != nil && o.MongodbAtlasProjectId != nil {
		return true
	}

	return false
}

// SetMongodbAtlasProjectId gets a reference to the given string and assigns it to the MongodbAtlasProjectId field.
func (o *TargetTypeDetailsInput) SetMongodbAtlasProjectId(v string) {
	o.MongodbAtlasProjectId = &v
}

// GetMongodbDbName returns the MongodbDbName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbDbName() string {
	if o == nil || o.MongodbDbName == nil {
		var ret string
		return ret
	}
	return *o.MongodbDbName
}

// GetMongodbDbNameOk returns a tuple with the MongodbDbName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbDbNameOk() (*string, bool) {
	if o == nil || o.MongodbDbName == nil {
		return nil, false
	}
	return o.MongodbDbName, true
}

// HasMongodbDbName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbDbName() bool {
	if o != nil && o.MongodbDbName != nil {
		return true
	}

	return false
}

// SetMongodbDbName gets a reference to the given string and assigns it to the MongodbDbName field.
func (o *TargetTypeDetailsInput) SetMongodbDbName(v string) {
	o.MongodbDbName = &v
}

// GetMongodbDefaultAuthDb returns the MongodbDefaultAuthDb field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbDefaultAuthDb() string {
	if o == nil || o.MongodbDefaultAuthDb == nil {
		var ret string
		return ret
	}
	return *o.MongodbDefaultAuthDb
}

// GetMongodbDefaultAuthDbOk returns a tuple with the MongodbDefaultAuthDb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbDefaultAuthDbOk() (*string, bool) {
	if o == nil || o.MongodbDefaultAuthDb == nil {
		return nil, false
	}
	return o.MongodbDefaultAuthDb, true
}

// HasMongodbDefaultAuthDb returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbDefaultAuthDb() bool {
	if o != nil && o.MongodbDefaultAuthDb != nil {
		return true
	}

	return false
}

// SetMongodbDefaultAuthDb gets a reference to the given string and assigns it to the MongodbDefaultAuthDb field.
func (o *TargetTypeDetailsInput) SetMongodbDefaultAuthDb(v string) {
	o.MongodbDefaultAuthDb = &v
}

// GetMongodbHostPort returns the MongodbHostPort field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbHostPort() string {
	if o == nil || o.MongodbHostPort == nil {
		var ret string
		return ret
	}
	return *o.MongodbHostPort
}

// GetMongodbHostPortOk returns a tuple with the MongodbHostPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbHostPortOk() (*string, bool) {
	if o == nil || o.MongodbHostPort == nil {
		return nil, false
	}
	return o.MongodbHostPort, true
}

// HasMongodbHostPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbHostPort() bool {
	if o != nil && o.MongodbHostPort != nil {
		return true
	}

	return false
}

// SetMongodbHostPort gets a reference to the given string and assigns it to the MongodbHostPort field.
func (o *TargetTypeDetailsInput) SetMongodbHostPort(v string) {
	o.MongodbHostPort = &v
}

// GetMongodbPassword returns the MongodbPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbPassword() string {
	if o == nil || o.MongodbPassword == nil {
		var ret string
		return ret
	}
	return *o.MongodbPassword
}

// GetMongodbPasswordOk returns a tuple with the MongodbPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbPasswordOk() (*string, bool) {
	if o == nil || o.MongodbPassword == nil {
		return nil, false
	}
	return o.MongodbPassword, true
}

// HasMongodbPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbPassword() bool {
	if o != nil && o.MongodbPassword != nil {
		return true
	}

	return false
}

// SetMongodbPassword gets a reference to the given string and assigns it to the MongodbPassword field.
func (o *TargetTypeDetailsInput) SetMongodbPassword(v string) {
	o.MongodbPassword = &v
}

// GetMongodbUriConnection returns the MongodbUriConnection field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbUriConnection() string {
	if o == nil || o.MongodbUriConnection == nil {
		var ret string
		return ret
	}
	return *o.MongodbUriConnection
}

// GetMongodbUriConnectionOk returns a tuple with the MongodbUriConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbUriConnectionOk() (*string, bool) {
	if o == nil || o.MongodbUriConnection == nil {
		return nil, false
	}
	return o.MongodbUriConnection, true
}

// HasMongodbUriConnection returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbUriConnection() bool {
	if o != nil && o.MongodbUriConnection != nil {
		return true
	}

	return false
}

// SetMongodbUriConnection gets a reference to the given string and assigns it to the MongodbUriConnection field.
func (o *TargetTypeDetailsInput) SetMongodbUriConnection(v string) {
	o.MongodbUriConnection = &v
}

// GetMongodbUriOptions returns the MongodbUriOptions field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbUriOptions() string {
	if o == nil || o.MongodbUriOptions == nil {
		var ret string
		return ret
	}
	return *o.MongodbUriOptions
}

// GetMongodbUriOptionsOk returns a tuple with the MongodbUriOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbUriOptionsOk() (*string, bool) {
	if o == nil || o.MongodbUriOptions == nil {
		return nil, false
	}
	return o.MongodbUriOptions, true
}

// HasMongodbUriOptions returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbUriOptions() bool {
	if o != nil && o.MongodbUriOptions != nil {
		return true
	}

	return false
}

// SetMongodbUriOptions gets a reference to the given string and assigns it to the MongodbUriOptions field.
func (o *TargetTypeDetailsInput) SetMongodbUriOptions(v string) {
	o.MongodbUriOptions = &v
}

// GetMongodbUsername returns the MongodbUsername field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbUsername() string {
	if o == nil || o.MongodbUsername == nil {
		var ret string
		return ret
	}
	return *o.MongodbUsername
}

// GetMongodbUsernameOk returns a tuple with the MongodbUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbUsernameOk() (*string, bool) {
	if o == nil || o.MongodbUsername == nil {
		return nil, false
	}
	return o.MongodbUsername, true
}

// HasMongodbUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbUsername() bool {
	if o != nil && o.MongodbUsername != nil {
		return true
	}

	return false
}

// SetMongodbUsername gets a reference to the given string and assigns it to the MongodbUsername field.
func (o *TargetTypeDetailsInput) SetMongodbUsername(v string) {
	o.MongodbUsername = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *TargetTypeDetailsInput) SetPassword(v string) {
	o.Password = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPort() string {
	if o == nil || o.Port == nil {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPortOk() (*string, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *TargetTypeDetailsInput) SetPort(v string) {
	o.Port = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *TargetTypeDetailsInput) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetPrivateKeyPassword returns the PrivateKeyPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPrivateKeyPassword() string {
	if o == nil || o.PrivateKeyPassword == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyPassword
}

// GetPrivateKeyPasswordOk returns a tuple with the PrivateKeyPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPrivateKeyPasswordOk() (*string, bool) {
	if o == nil || o.PrivateKeyPassword == nil {
		return nil, false
	}
	return o.PrivateKeyPassword, true
}

// HasPrivateKeyPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPrivateKeyPassword() bool {
	if o != nil && o.PrivateKeyPassword != nil {
		return true
	}

	return false
}

// SetPrivateKeyPassword gets a reference to the given string and assigns it to the PrivateKeyPassword field.
func (o *TargetTypeDetailsInput) SetPrivateKeyPassword(v string) {
	o.PrivateKeyPassword = &v
}

// GetRabbitmqServerPassword returns the RabbitmqServerPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetRabbitmqServerPassword() string {
	if o == nil || o.RabbitmqServerPassword == nil {
		var ret string
		return ret
	}
	return *o.RabbitmqServerPassword
}

// GetRabbitmqServerPasswordOk returns a tuple with the RabbitmqServerPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetRabbitmqServerPasswordOk() (*string, bool) {
	if o == nil || o.RabbitmqServerPassword == nil {
		return nil, false
	}
	return o.RabbitmqServerPassword, true
}

// HasRabbitmqServerPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasRabbitmqServerPassword() bool {
	if o != nil && o.RabbitmqServerPassword != nil {
		return true
	}

	return false
}

// SetRabbitmqServerPassword gets a reference to the given string and assigns it to the RabbitmqServerPassword field.
func (o *TargetTypeDetailsInput) SetRabbitmqServerPassword(v string) {
	o.RabbitmqServerPassword = &v
}

// GetRabbitmqServerUri returns the RabbitmqServerUri field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetRabbitmqServerUri() string {
	if o == nil || o.RabbitmqServerUri == nil {
		var ret string
		return ret
	}
	return *o.RabbitmqServerUri
}

// GetRabbitmqServerUriOk returns a tuple with the RabbitmqServerUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetRabbitmqServerUriOk() (*string, bool) {
	if o == nil || o.RabbitmqServerUri == nil {
		return nil, false
	}
	return o.RabbitmqServerUri, true
}

// HasRabbitmqServerUri returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasRabbitmqServerUri() bool {
	if o != nil && o.RabbitmqServerUri != nil {
		return true
	}

	return false
}

// SetRabbitmqServerUri gets a reference to the given string and assigns it to the RabbitmqServerUri field.
func (o *TargetTypeDetailsInput) SetRabbitmqServerUri(v string) {
	o.RabbitmqServerUri = &v
}

// GetRabbitmqServerUser returns the RabbitmqServerUser field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetRabbitmqServerUser() string {
	if o == nil || o.RabbitmqServerUser == nil {
		var ret string
		return ret
	}
	return *o.RabbitmqServerUser
}

// GetRabbitmqServerUserOk returns a tuple with the RabbitmqServerUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetRabbitmqServerUserOk() (*string, bool) {
	if o == nil || o.RabbitmqServerUser == nil {
		return nil, false
	}
	return o.RabbitmqServerUser, true
}

// HasRabbitmqServerUser returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasRabbitmqServerUser() bool {
	if o != nil && o.RabbitmqServerUser != nil {
		return true
	}

	return false
}

// SetRabbitmqServerUser gets a reference to the given string and assigns it to the RabbitmqServerUser field.
func (o *TargetTypeDetailsInput) SetRabbitmqServerUser(v string) {
	o.RabbitmqServerUser = &v
}

// GetSfAccount returns the SfAccount field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetSfAccount() string {
	if o == nil || o.SfAccount == nil {
		var ret string
		return ret
	}
	return *o.SfAccount
}

// GetSfAccountOk returns a tuple with the SfAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetSfAccountOk() (*string, bool) {
	if o == nil || o.SfAccount == nil {
		return nil, false
	}
	return o.SfAccount, true
}

// HasSfAccount returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasSfAccount() bool {
	if o != nil && o.SfAccount != nil {
		return true
	}

	return false
}

// SetSfAccount gets a reference to the given string and assigns it to the SfAccount field.
func (o *TargetTypeDetailsInput) SetSfAccount(v string) {
	o.SfAccount = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TargetTypeDetailsInput) SetUrl(v string) {
	o.Url = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *TargetTypeDetailsInput) SetUsername(v string) {
	o.Username = &v
}

// GetVenafiApiKey returns the VenafiApiKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiApiKey() string {
	if o == nil || o.VenafiApiKey == nil {
		var ret string
		return ret
	}
	return *o.VenafiApiKey
}

// GetVenafiApiKeyOk returns a tuple with the VenafiApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiApiKeyOk() (*string, bool) {
	if o == nil || o.VenafiApiKey == nil {
		return nil, false
	}
	return o.VenafiApiKey, true
}

// HasVenafiApiKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiApiKey() bool {
	if o != nil && o.VenafiApiKey != nil {
		return true
	}

	return false
}

// SetVenafiApiKey gets a reference to the given string and assigns it to the VenafiApiKey field.
func (o *TargetTypeDetailsInput) SetVenafiApiKey(v string) {
	o.VenafiApiKey = &v
}

// GetVenafiBaseUrl returns the VenafiBaseUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiBaseUrl() string {
	if o == nil || o.VenafiBaseUrl == nil {
		var ret string
		return ret
	}
	return *o.VenafiBaseUrl
}

// GetVenafiBaseUrlOk returns a tuple with the VenafiBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiBaseUrlOk() (*string, bool) {
	if o == nil || o.VenafiBaseUrl == nil {
		return nil, false
	}
	return o.VenafiBaseUrl, true
}

// HasVenafiBaseUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiBaseUrl() bool {
	if o != nil && o.VenafiBaseUrl != nil {
		return true
	}

	return false
}

// SetVenafiBaseUrl gets a reference to the given string and assigns it to the VenafiBaseUrl field.
func (o *TargetTypeDetailsInput) SetVenafiBaseUrl(v string) {
	o.VenafiBaseUrl = &v
}

// GetVenafiTppPassword returns the VenafiTppPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiTppPassword() string {
	if o == nil || o.VenafiTppPassword == nil {
		var ret string
		return ret
	}
	return *o.VenafiTppPassword
}

// GetVenafiTppPasswordOk returns a tuple with the VenafiTppPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiTppPasswordOk() (*string, bool) {
	if o == nil || o.VenafiTppPassword == nil {
		return nil, false
	}
	return o.VenafiTppPassword, true
}

// HasVenafiTppPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiTppPassword() bool {
	if o != nil && o.VenafiTppPassword != nil {
		return true
	}

	return false
}

// SetVenafiTppPassword gets a reference to the given string and assigns it to the VenafiTppPassword field.
func (o *TargetTypeDetailsInput) SetVenafiTppPassword(v string) {
	o.VenafiTppPassword = &v
}

// GetVenafiTppUsername returns the VenafiTppUsername field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiTppUsername() string {
	if o == nil || o.VenafiTppUsername == nil {
		var ret string
		return ret
	}
	return *o.VenafiTppUsername
}

// GetVenafiTppUsernameOk returns a tuple with the VenafiTppUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiTppUsernameOk() (*string, bool) {
	if o == nil || o.VenafiTppUsername == nil {
		return nil, false
	}
	return o.VenafiTppUsername, true
}

// HasVenafiTppUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiTppUsername() bool {
	if o != nil && o.VenafiTppUsername != nil {
		return true
	}

	return false
}

// SetVenafiTppUsername gets a reference to the given string and assigns it to the VenafiTppUsername field.
func (o *TargetTypeDetailsInput) SetVenafiTppUsername(v string) {
	o.VenafiTppUsername = &v
}

// GetVenafiUseTpp returns the VenafiUseTpp field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiUseTpp() bool {
	if o == nil || o.VenafiUseTpp == nil {
		var ret bool
		return ret
	}
	return *o.VenafiUseTpp
}

// GetVenafiUseTppOk returns a tuple with the VenafiUseTpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiUseTppOk() (*bool, bool) {
	if o == nil || o.VenafiUseTpp == nil {
		return nil, false
	}
	return o.VenafiUseTpp, true
}

// HasVenafiUseTpp returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiUseTpp() bool {
	if o != nil && o.VenafiUseTpp != nil {
		return true
	}

	return false
}

// SetVenafiUseTpp gets a reference to the given bool and assigns it to the VenafiUseTpp field.
func (o *TargetTypeDetailsInput) SetVenafiUseTpp(v bool) {
	o.VenafiUseTpp = &v
}

// GetVenafiZone returns the VenafiZone field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiZone() string {
	if o == nil || o.VenafiZone == nil {
		var ret string
		return ret
	}
	return *o.VenafiZone
}

// GetVenafiZoneOk returns a tuple with the VenafiZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiZoneOk() (*string, bool) {
	if o == nil || o.VenafiZone == nil {
		return nil, false
	}
	return o.VenafiZone, true
}

// HasVenafiZone returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiZone() bool {
	if o != nil && o.VenafiZone != nil {
		return true
	}

	return false
}

// SetVenafiZone gets a reference to the given string and assigns it to the VenafiZone field.
func (o *TargetTypeDetailsInput) SetVenafiZone(v string) {
	o.VenafiZone = &v
}

func (o TargetTypeDetailsInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArtifactoryAdminApikey != nil {
		toSerialize["artifactory_admin_apikey"] = o.ArtifactoryAdminApikey
	}
	if o.ArtifactoryAdminUsername != nil {
		toSerialize["artifactory_admin_username"] = o.ArtifactoryAdminUsername
	}
	if o.ArtifactoryBaseUrl != nil {
		toSerialize["artifactory_base_url"] = o.ArtifactoryBaseUrl
	}
	if o.AwsAccessKeyId != nil {
		toSerialize["aws_access_key_id"] = o.AwsAccessKeyId
	}
	if o.AwsRegion != nil {
		toSerialize["aws_region"] = o.AwsRegion
	}
	if o.AwsSecretAccessKey != nil {
		toSerialize["aws_secret_access_key"] = o.AwsSecretAccessKey
	}
	if o.AwsSessionToken != nil {
		toSerialize["aws_session_token"] = o.AwsSessionToken
	}
	if o.AzureClientId != nil {
		toSerialize["azure_client_id"] = o.AzureClientId
	}
	if o.AzureClientSecret != nil {
		toSerialize["azure_client_secret"] = o.AzureClientSecret
	}
	if o.AzureTenantId != nil {
		toSerialize["azure_tenant_id"] = o.AzureTenantId
	}
	if o.ChefServerHostName != nil {
		toSerialize["chef_server_host_name"] = o.ChefServerHostName
	}
	if o.ChefServerKey != nil {
		toSerialize["chef_server_key"] = o.ChefServerKey
	}
	if o.ChefServerPort != nil {
		toSerialize["chef_server_port"] = o.ChefServerPort
	}
	if o.ChefServerUrl != nil {
		toSerialize["chef_server_url"] = o.ChefServerUrl
	}
	if o.ChefServerUsername != nil {
		toSerialize["chef_server_username"] = o.ChefServerUsername
	}
	if o.ChefSkipSsl != nil {
		toSerialize["chef_skip_ssl"] = o.ChefSkipSsl
	}
	if o.DbHostName != nil {
		toSerialize["db_host_name"] = o.DbHostName
	}
	if o.DbName != nil {
		toSerialize["db_name"] = o.DbName
	}
	if o.DbPort != nil {
		toSerialize["db_port"] = o.DbPort
	}
	if o.DbPwd != nil {
		toSerialize["db_pwd"] = o.DbPwd
	}
	if o.DbServerCertificates != nil {
		toSerialize["db_server_certificates"] = o.DbServerCertificates
	}
	if o.DbServerName != nil {
		toSerialize["db_server_name"] = o.DbServerName
	}
	if o.DbUserName != nil {
		toSerialize["db_user_name"] = o.DbUserName
	}
	if o.EksAccessKeyId != nil {
		toSerialize["eks_access_key_id"] = o.EksAccessKeyId
	}
	if o.EksAssumeRole != nil {
		toSerialize["eks_assume_role"] = o.EksAssumeRole
	}
	if o.EksClusterCaCertificate != nil {
		toSerialize["eks_cluster_ca_certificate"] = o.EksClusterCaCertificate
	}
	if o.EksClusterEndpoint != nil {
		toSerialize["eks_cluster_endpoint"] = o.EksClusterEndpoint
	}
	if o.EksClusterName != nil {
		toSerialize["eks_cluster_name"] = o.EksClusterName
	}
	if o.EksRegion != nil {
		toSerialize["eks_region"] = o.EksRegion
	}
	if o.EksSecretAccessKey != nil {
		toSerialize["eks_secret_access_key"] = o.EksSecretAccessKey
	}
	if o.GcpServiceAccountEmail != nil {
		toSerialize["gcp_service_account_email"] = o.GcpServiceAccountEmail
	}
	if o.GcpServiceAccountKey != nil {
		toSerialize["gcp_service_account_key"] = o.GcpServiceAccountKey
	}
	if o.GkeClusterCaCertificate != nil {
		toSerialize["gke_cluster_ca_certificate"] = o.GkeClusterCaCertificate
	}
	if o.GkeClusterEndpoint != nil {
		toSerialize["gke_cluster_endpoint"] = o.GkeClusterEndpoint
	}
	if o.GkeClusterName != nil {
		toSerialize["gke_cluster_name"] = o.GkeClusterName
	}
	if o.GkeServiceAccountKey != nil {
		toSerialize["gke_service_account_key"] = o.GkeServiceAccountKey
	}
	if o.GkeServiceAccountName != nil {
		toSerialize["gke_service_account_name"] = o.GkeServiceAccountName
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.MongodbAtlas != nil {
		toSerialize["mongodb_atlas"] = o.MongodbAtlas
	}
	if o.MongodbAtlasApiPrivateKey != nil {
		toSerialize["mongodb_atlas_api_private_key"] = o.MongodbAtlasApiPrivateKey
	}
	if o.MongodbAtlasApiPublicKey != nil {
		toSerialize["mongodb_atlas_api_public_key"] = o.MongodbAtlasApiPublicKey
	}
	if o.MongodbAtlasProjectId != nil {
		toSerialize["mongodb_atlas_project_id"] = o.MongodbAtlasProjectId
	}
	if o.MongodbDbName != nil {
		toSerialize["mongodb_db_name"] = o.MongodbDbName
	}
	if o.MongodbDefaultAuthDb != nil {
		toSerialize["mongodb_default_auth_db"] = o.MongodbDefaultAuthDb
	}
	if o.MongodbHostPort != nil {
		toSerialize["mongodb_host_port"] = o.MongodbHostPort
	}
	if o.MongodbPassword != nil {
		toSerialize["mongodb_password"] = o.MongodbPassword
	}
	if o.MongodbUriConnection != nil {
		toSerialize["mongodb_uri_connection"] = o.MongodbUriConnection
	}
	if o.MongodbUriOptions != nil {
		toSerialize["mongodb_uri_options"] = o.MongodbUriOptions
	}
	if o.MongodbUsername != nil {
		toSerialize["mongodb_username"] = o.MongodbUsername
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.PrivateKey != nil {
		toSerialize["private_key"] = o.PrivateKey
	}
	if o.PrivateKeyPassword != nil {
		toSerialize["private_key_password"] = o.PrivateKeyPassword
	}
	if o.RabbitmqServerPassword != nil {
		toSerialize["rabbitmq_server_password"] = o.RabbitmqServerPassword
	}
	if o.RabbitmqServerUri != nil {
		toSerialize["rabbitmq_server_uri"] = o.RabbitmqServerUri
	}
	if o.RabbitmqServerUser != nil {
		toSerialize["rabbitmq_server_user"] = o.RabbitmqServerUser
	}
	if o.SfAccount != nil {
		toSerialize["sf_account"] = o.SfAccount
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.VenafiApiKey != nil {
		toSerialize["venafi_api_key"] = o.VenafiApiKey
	}
	if o.VenafiBaseUrl != nil {
		toSerialize["venafi_base_url"] = o.VenafiBaseUrl
	}
	if o.VenafiTppPassword != nil {
		toSerialize["venafi_tpp_password"] = o.VenafiTppPassword
	}
	if o.VenafiTppUsername != nil {
		toSerialize["venafi_tpp_username"] = o.VenafiTppUsername
	}
	if o.VenafiUseTpp != nil {
		toSerialize["venafi_use_tpp"] = o.VenafiUseTpp
	}
	if o.VenafiZone != nil {
		toSerialize["venafi_zone"] = o.VenafiZone
	}
	return json.Marshal(toSerialize)
}

type NullableTargetTypeDetailsInput struct {
	value *TargetTypeDetailsInput
	isSet bool
}

func (v NullableTargetTypeDetailsInput) Get() *TargetTypeDetailsInput {
	return v.value
}

func (v *NullableTargetTypeDetailsInput) Set(val *TargetTypeDetailsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetTypeDetailsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetTypeDetailsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetTypeDetailsInput(val *TargetTypeDetailsInput) *NullableTargetTypeDetailsInput {
	return &NullableTargetTypeDetailsInput{value: val, isSet: true}
}

func (v NullableTargetTypeDetailsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetTypeDetailsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


