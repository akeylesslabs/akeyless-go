/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// checks if the TargetTypeDetailsInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetTypeDetailsInput{}

// TargetTypeDetailsInput struct for TargetTypeDetailsInput
type TargetTypeDetailsInput struct {
	AdministrativePort *string `json:"administrative_port,omitempty"`
	ApiKey *string `json:"api_key,omitempty"`
	// params needed for jwt auth AppPrivateKey is the rsa private key in PEM format
	AppPrivateKey []int32 `json:"app_private_key,omitempty"`
	ArtifactoryAdminApikey *string `json:"artifactory_admin_apikey,omitempty"`
	ArtifactoryAdminUsername *string `json:"artifactory_admin_username,omitempty"`
	ArtifactoryBaseUrl *string `json:"artifactory_base_url,omitempty"`
	AuthFlow *string `json:"auth_flow,omitempty"`
	AuthorizationPort *string `json:"authorization_port,omitempty"`
	AwsAccessKeyId *string `json:"aws_access_key_id,omitempty"`
	AwsRegion *string `json:"aws_region,omitempty"`
	AwsSecretAccessKey *string `json:"aws_secret_access_key,omitempty"`
	AwsSessionToken *string `json:"aws_session_token,omitempty"`
	AzureClientId *string `json:"azure_client_id,omitempty"`
	AzureClientSecret *string `json:"azure_client_secret,omitempty"`
	AzureResourceGroupName *string `json:"azure_resource_group_name,omitempty"`
	AzureResourceName *string `json:"azure_resource_name,omitempty"`
	AzureSubscriptionId *string `json:"azure_subscription_id,omitempty"`
	AzureTenantId *string `json:"azure_tenant_id,omitempty"`
	// CACertData is the rsa 4096 certificate data in PEM format
	CaCertData []int32 `json:"ca_cert_data,omitempty"`
	// CACertName is the name of the certificate in SalesForce tenant
	CaCertName *string `json:"ca_cert_name,omitempty"`
	Certificate *string `json:"certificate,omitempty"`
	ChefServerHostName *string `json:"chef_server_host_name,omitempty"`
	ChefServerKey *string `json:"chef_server_key,omitempty"`
	ChefServerPort *string `json:"chef_server_port,omitempty"`
	ChefServerUrl *string `json:"chef_server_url,omitempty"`
	ChefServerUsername *string `json:"chef_server_username,omitempty"`
	ChefSkipSsl *bool `json:"chef_skip_ssl,omitempty"`
	ClientId *string `json:"client_id,omitempty"`
	// params needed for password auth
	ClientSecret *string `json:"client_secret,omitempty"`
	DbHostName *string `json:"db_host_name,omitempty"`
	DbName *string `json:"db_name,omitempty"`
	DbPort *string `json:"db_port,omitempty"`
	// (Optional) Private Key in PEM format
	DbPrivateKey *string `json:"db_private_key,omitempty"`
	DbPrivateKeyPassphrase *string `json:"db_private_key_passphrase,omitempty"`
	DbPwd *string `json:"db_pwd,omitempty"`
	// (Optional) DBServerCertificates defines the set of root certificate authorities that clients use when verifying server certificates. If DBServerCertificates is empty, TLS uses the host's root CA set.
	DbServerCertificates *string `json:"db_server_certificates,omitempty"`
	// (Optional) ServerName is used to verify the hostname on the returned certificates unless InsecureSkipVerify is given. It is also included in the client's handshake to support virtual hosting unless it is an IP address.
	DbServerName *string `json:"db_server_name,omitempty"`
	DbUserName *string `json:"db_user_name,omitempty"`
	DomainName *string `json:"domain_name,omitempty"`
	EksAccessKeyId *string `json:"eks_access_key_id,omitempty"`
	EksClusterCaCertificate *string `json:"eks_cluster_ca_certificate,omitempty"`
	EksClusterEndpoint *string `json:"eks_cluster_endpoint,omitempty"`
	EksClusterName *string `json:"eks_cluster_name,omitempty"`
	EksRegion *string `json:"eks_region,omitempty"`
	EksSecretAccessKey *string `json:"eks_secret_access_key,omitempty"`
	Email *string `json:"email,omitempty"`
	// Contact Info - GlobalSign requires this to be sent with every certificate creation request
	FirstName *string `json:"first_name,omitempty"`
	// deprecated
	GcpServiceAccountEmail *string `json:"gcp_service_account_email,omitempty"`
	GcpServiceAccountKey *string `json:"gcp_service_account_key,omitempty"`
	GcpServiceAccountKeyBase64 *string `json:"gcp_service_account_key_base64,omitempty"`
	GithubAppId *int64 `json:"github_app_id,omitempty"`
	GithubAppPrivateKey *string `json:"github_app_private_key,omitempty"`
	GithubBaseUrl *string `json:"github_base_url,omitempty"`
	GkeClusterCaCertificate *string `json:"gke_cluster_ca_certificate,omitempty"`
	GkeClusterEndpoint *string `json:"gke_cluster_endpoint,omitempty"`
	GkeClusterName *string `json:"gke_cluster_name,omitempty"`
	GkeServiceAccountKey *string `json:"gke_service_account_key,omitempty"`
	GkeServiceAccountName *string `json:"gke_service_account_name,omitempty"`
	Host *string `json:"host,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Hosts *map[string]string `json:"hosts,omitempty"`
	ImapFqdn *string `json:"imap_fqdn,omitempty"`
	ImapPassword *string `json:"imap_password,omitempty"`
	ImapPort *string `json:"imap_port,omitempty"`
	ImapUser *string `json:"imap_user,omitempty"`
	ImplementationType *string `json:"implementation_type,omitempty"`
	K8sBearerToken *string `json:"k8s_bearer_token,omitempty"`
	K8sClusterCaCertificate *string `json:"k8s_cluster_ca_certificate,omitempty"`
	K8sClusterEndpoint *string `json:"k8s_cluster_endpoint,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	LdapAudience *string `json:"ldap_audience,omitempty"`
	LdapBindDn *string `json:"ldap_bind_dn,omitempty"`
	LdapBindPassword *string `json:"ldap_bind_password,omitempty"`
	LdapCertificate *string `json:"ldap_certificate,omitempty"`
	LdapTokenExpiration *string `json:"ldap_token_expiration,omitempty"`
	LdapUrl *string `json:"ldap_url,omitempty"`
	MongodbAtlasApiPrivateKey *string `json:"mongodb_atlas_api_private_key,omitempty"`
	MongodbAtlasApiPublicKey *string `json:"mongodb_atlas_api_public_key,omitempty"`
	// mongodb atlas fields
	MongodbAtlasProjectId *string `json:"mongodb_atlas_project_id,omitempty"`
	// common fields
	MongodbDbName *string `json:"mongodb_db_name,omitempty"`
	MongodbDefaultAuthDb *string `json:"mongodb_default_auth_db,omitempty"`
	MongodbHostPort *string `json:"mongodb_host_port,omitempty"`
	MongodbIsAtlas *bool `json:"mongodb_is_atlas,omitempty"`
	MongodbPassword *string `json:"mongodb_password,omitempty"`
	// mongodb fields
	MongodbUriConnection *string `json:"mongodb_uri_connection,omitempty"`
	MongodbUriOptions *string `json:"mongodb_uri_options,omitempty"`
	MongodbUsername *string `json:"mongodb_username,omitempty"`
	Password *string `json:"password,omitempty"`
	Payload *string `json:"payload,omitempty"`
	Phone *string `json:"phone,omitempty"`
	PingUrl *string `json:"ping_url,omitempty"`
	Port *string `json:"port,omitempty"`
	PrivateKey *string `json:"private_key,omitempty"`
	PrivateKeyPassword *string `json:"private_key_password,omitempty"`
	PrivilegedUser *string `json:"privileged_user,omitempty"`
	ProfileId *string `json:"profile_id,omitempty"`
	RabbitmqServerPassword *string `json:"rabbitmq_server_password,omitempty"`
	RabbitmqServerUri *string `json:"rabbitmq_server_uri,omitempty"`
	RabbitmqServerUser *string `json:"rabbitmq_server_user,omitempty"`
	SecurityToken *string `json:"security_token,omitempty"`
	SfAccount *string `json:"sf_account,omitempty"`
	// (Optional) SSLConnectionCertificate defines the certificate for SSL connection. Must be base64 certificate loaded by UI using file loader field
	SslConnectionCertificate *string `json:"ssl_connection_certificate,omitempty"`
	// (Optional) SSLConnectionMode defines if SSL mode will be used to connect to DB
	SslConnectionMode *bool `json:"ssl_connection_mode,omitempty"`
	TenantUrl *string `json:"tenant_url,omitempty"`
	// A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
	Timeout *int64 `json:"timeout,omitempty"`
	Url *string `json:"url,omitempty"`
	UseGwCloudIdentity *bool `json:"use_gw_cloud_identity,omitempty"`
	UseGwServiceAccount *bool `json:"use_gw_service_account,omitempty"`
	UseTls *bool `json:"use_tls,omitempty"`
	UserName *string `json:"user_name,omitempty"`
	UserPassword *string `json:"user_password,omitempty"`
	Username *string `json:"username,omitempty"`
	ValidationEmail *string `json:"validation_email,omitempty"`
	VenafiApiKey *string `json:"venafi_api_key,omitempty"`
	VenafiBaseUrl *string `json:"venafi_base_url,omitempty"`
	VenafiTppAccessToken *string `json:"venafi_tpp_access_token,omitempty"`
	VenafiTppClientId *string `json:"venafi_tpp_client_id,omitempty"`
	// Deprecated: VenafiAccessToken and VenafiRefreshToken should be used instead
	VenafiTppPassword *string `json:"venafi_tpp_password,omitempty"`
	VenafiTppRefreshToken *string `json:"venafi_tpp_refresh_token,omitempty"`
	// Deprecated: VenafiAccessToken and VenafiRefreshToken should be used instead
	VenafiTppUsername *string `json:"venafi_tpp_username,omitempty"`
	VenafiUseTpp *bool `json:"venafi_use_tpp,omitempty"`
	VenafiZone *string `json:"venafi_zone,omitempty"`
}

// NewTargetTypeDetailsInput instantiates a new TargetTypeDetailsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetTypeDetailsInput() *TargetTypeDetailsInput {
	this := TargetTypeDetailsInput{}
	return &this
}

// NewTargetTypeDetailsInputWithDefaults instantiates a new TargetTypeDetailsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetTypeDetailsInputWithDefaults() *TargetTypeDetailsInput {
	this := TargetTypeDetailsInput{}
	return &this
}

// GetAdministrativePort returns the AdministrativePort field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAdministrativePort() string {
	if o == nil || IsNil(o.AdministrativePort) {
		var ret string
		return ret
	}
	return *o.AdministrativePort
}

// GetAdministrativePortOk returns a tuple with the AdministrativePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAdministrativePortOk() (*string, bool) {
	if o == nil || IsNil(o.AdministrativePort) {
		return nil, false
	}
	return o.AdministrativePort, true
}

// HasAdministrativePort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAdministrativePort() bool {
	if o != nil && !IsNil(o.AdministrativePort) {
		return true
	}

	return false
}

// SetAdministrativePort gets a reference to the given string and assigns it to the AdministrativePort field.
func (o *TargetTypeDetailsInput) SetAdministrativePort(v string) {
	o.AdministrativePort = &v
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *TargetTypeDetailsInput) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetAppPrivateKey returns the AppPrivateKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAppPrivateKey() []int32 {
	if o == nil || IsNil(o.AppPrivateKey) {
		var ret []int32
		return ret
	}
	return o.AppPrivateKey
}

// GetAppPrivateKeyOk returns a tuple with the AppPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAppPrivateKeyOk() ([]int32, bool) {
	if o == nil || IsNil(o.AppPrivateKey) {
		return nil, false
	}
	return o.AppPrivateKey, true
}

// HasAppPrivateKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAppPrivateKey() bool {
	if o != nil && !IsNil(o.AppPrivateKey) {
		return true
	}

	return false
}

// SetAppPrivateKey gets a reference to the given []int32 and assigns it to the AppPrivateKey field.
func (o *TargetTypeDetailsInput) SetAppPrivateKey(v []int32) {
	o.AppPrivateKey = v
}

// GetArtifactoryAdminApikey returns the ArtifactoryAdminApikey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetArtifactoryAdminApikey() string {
	if o == nil || IsNil(o.ArtifactoryAdminApikey) {
		var ret string
		return ret
	}
	return *o.ArtifactoryAdminApikey
}

// GetArtifactoryAdminApikeyOk returns a tuple with the ArtifactoryAdminApikey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetArtifactoryAdminApikeyOk() (*string, bool) {
	if o == nil || IsNil(o.ArtifactoryAdminApikey) {
		return nil, false
	}
	return o.ArtifactoryAdminApikey, true
}

// HasArtifactoryAdminApikey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasArtifactoryAdminApikey() bool {
	if o != nil && !IsNil(o.ArtifactoryAdminApikey) {
		return true
	}

	return false
}

// SetArtifactoryAdminApikey gets a reference to the given string and assigns it to the ArtifactoryAdminApikey field.
func (o *TargetTypeDetailsInput) SetArtifactoryAdminApikey(v string) {
	o.ArtifactoryAdminApikey = &v
}

// GetArtifactoryAdminUsername returns the ArtifactoryAdminUsername field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetArtifactoryAdminUsername() string {
	if o == nil || IsNil(o.ArtifactoryAdminUsername) {
		var ret string
		return ret
	}
	return *o.ArtifactoryAdminUsername
}

// GetArtifactoryAdminUsernameOk returns a tuple with the ArtifactoryAdminUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetArtifactoryAdminUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ArtifactoryAdminUsername) {
		return nil, false
	}
	return o.ArtifactoryAdminUsername, true
}

// HasArtifactoryAdminUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasArtifactoryAdminUsername() bool {
	if o != nil && !IsNil(o.ArtifactoryAdminUsername) {
		return true
	}

	return false
}

// SetArtifactoryAdminUsername gets a reference to the given string and assigns it to the ArtifactoryAdminUsername field.
func (o *TargetTypeDetailsInput) SetArtifactoryAdminUsername(v string) {
	o.ArtifactoryAdminUsername = &v
}

// GetArtifactoryBaseUrl returns the ArtifactoryBaseUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetArtifactoryBaseUrl() string {
	if o == nil || IsNil(o.ArtifactoryBaseUrl) {
		var ret string
		return ret
	}
	return *o.ArtifactoryBaseUrl
}

// GetArtifactoryBaseUrlOk returns a tuple with the ArtifactoryBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetArtifactoryBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ArtifactoryBaseUrl) {
		return nil, false
	}
	return o.ArtifactoryBaseUrl, true
}

// HasArtifactoryBaseUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasArtifactoryBaseUrl() bool {
	if o != nil && !IsNil(o.ArtifactoryBaseUrl) {
		return true
	}

	return false
}

// SetArtifactoryBaseUrl gets a reference to the given string and assigns it to the ArtifactoryBaseUrl field.
func (o *TargetTypeDetailsInput) SetArtifactoryBaseUrl(v string) {
	o.ArtifactoryBaseUrl = &v
}

// GetAuthFlow returns the AuthFlow field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAuthFlow() string {
	if o == nil || IsNil(o.AuthFlow) {
		var ret string
		return ret
	}
	return *o.AuthFlow
}

// GetAuthFlowOk returns a tuple with the AuthFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAuthFlowOk() (*string, bool) {
	if o == nil || IsNil(o.AuthFlow) {
		return nil, false
	}
	return o.AuthFlow, true
}

// HasAuthFlow returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAuthFlow() bool {
	if o != nil && !IsNil(o.AuthFlow) {
		return true
	}

	return false
}

// SetAuthFlow gets a reference to the given string and assigns it to the AuthFlow field.
func (o *TargetTypeDetailsInput) SetAuthFlow(v string) {
	o.AuthFlow = &v
}

// GetAuthorizationPort returns the AuthorizationPort field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAuthorizationPort() string {
	if o == nil || IsNil(o.AuthorizationPort) {
		var ret string
		return ret
	}
	return *o.AuthorizationPort
}

// GetAuthorizationPortOk returns a tuple with the AuthorizationPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAuthorizationPortOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationPort) {
		return nil, false
	}
	return o.AuthorizationPort, true
}

// HasAuthorizationPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAuthorizationPort() bool {
	if o != nil && !IsNil(o.AuthorizationPort) {
		return true
	}

	return false
}

// SetAuthorizationPort gets a reference to the given string and assigns it to the AuthorizationPort field.
func (o *TargetTypeDetailsInput) SetAuthorizationPort(v string) {
	o.AuthorizationPort = &v
}

// GetAwsAccessKeyId returns the AwsAccessKeyId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAwsAccessKeyId() string {
	if o == nil || IsNil(o.AwsAccessKeyId) {
		var ret string
		return ret
	}
	return *o.AwsAccessKeyId
}

// GetAwsAccessKeyIdOk returns a tuple with the AwsAccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAwsAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAccessKeyId) {
		return nil, false
	}
	return o.AwsAccessKeyId, true
}

// HasAwsAccessKeyId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAwsAccessKeyId() bool {
	if o != nil && !IsNil(o.AwsAccessKeyId) {
		return true
	}

	return false
}

// SetAwsAccessKeyId gets a reference to the given string and assigns it to the AwsAccessKeyId field.
func (o *TargetTypeDetailsInput) SetAwsAccessKeyId(v string) {
	o.AwsAccessKeyId = &v
}

// GetAwsRegion returns the AwsRegion field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAwsRegion() string {
	if o == nil || IsNil(o.AwsRegion) {
		var ret string
		return ret
	}
	return *o.AwsRegion
}

// GetAwsRegionOk returns a tuple with the AwsRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAwsRegionOk() (*string, bool) {
	if o == nil || IsNil(o.AwsRegion) {
		return nil, false
	}
	return o.AwsRegion, true
}

// HasAwsRegion returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAwsRegion() bool {
	if o != nil && !IsNil(o.AwsRegion) {
		return true
	}

	return false
}

// SetAwsRegion gets a reference to the given string and assigns it to the AwsRegion field.
func (o *TargetTypeDetailsInput) SetAwsRegion(v string) {
	o.AwsRegion = &v
}

// GetAwsSecretAccessKey returns the AwsSecretAccessKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAwsSecretAccessKey() string {
	if o == nil || IsNil(o.AwsSecretAccessKey) {
		var ret string
		return ret
	}
	return *o.AwsSecretAccessKey
}

// GetAwsSecretAccessKeyOk returns a tuple with the AwsSecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAwsSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AwsSecretAccessKey) {
		return nil, false
	}
	return o.AwsSecretAccessKey, true
}

// HasAwsSecretAccessKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAwsSecretAccessKey() bool {
	if o != nil && !IsNil(o.AwsSecretAccessKey) {
		return true
	}

	return false
}

// SetAwsSecretAccessKey gets a reference to the given string and assigns it to the AwsSecretAccessKey field.
func (o *TargetTypeDetailsInput) SetAwsSecretAccessKey(v string) {
	o.AwsSecretAccessKey = &v
}

// GetAwsSessionToken returns the AwsSessionToken field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAwsSessionToken() string {
	if o == nil || IsNil(o.AwsSessionToken) {
		var ret string
		return ret
	}
	return *o.AwsSessionToken
}

// GetAwsSessionTokenOk returns a tuple with the AwsSessionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAwsSessionTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AwsSessionToken) {
		return nil, false
	}
	return o.AwsSessionToken, true
}

// HasAwsSessionToken returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAwsSessionToken() bool {
	if o != nil && !IsNil(o.AwsSessionToken) {
		return true
	}

	return false
}

// SetAwsSessionToken gets a reference to the given string and assigns it to the AwsSessionToken field.
func (o *TargetTypeDetailsInput) SetAwsSessionToken(v string) {
	o.AwsSessionToken = &v
}

// GetAzureClientId returns the AzureClientId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAzureClientId() string {
	if o == nil || IsNil(o.AzureClientId) {
		var ret string
		return ret
	}
	return *o.AzureClientId
}

// GetAzureClientIdOk returns a tuple with the AzureClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAzureClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureClientId) {
		return nil, false
	}
	return o.AzureClientId, true
}

// HasAzureClientId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAzureClientId() bool {
	if o != nil && !IsNil(o.AzureClientId) {
		return true
	}

	return false
}

// SetAzureClientId gets a reference to the given string and assigns it to the AzureClientId field.
func (o *TargetTypeDetailsInput) SetAzureClientId(v string) {
	o.AzureClientId = &v
}

// GetAzureClientSecret returns the AzureClientSecret field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAzureClientSecret() string {
	if o == nil || IsNil(o.AzureClientSecret) {
		var ret string
		return ret
	}
	return *o.AzureClientSecret
}

// GetAzureClientSecretOk returns a tuple with the AzureClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAzureClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.AzureClientSecret) {
		return nil, false
	}
	return o.AzureClientSecret, true
}

// HasAzureClientSecret returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAzureClientSecret() bool {
	if o != nil && !IsNil(o.AzureClientSecret) {
		return true
	}

	return false
}

// SetAzureClientSecret gets a reference to the given string and assigns it to the AzureClientSecret field.
func (o *TargetTypeDetailsInput) SetAzureClientSecret(v string) {
	o.AzureClientSecret = &v
}

// GetAzureResourceGroupName returns the AzureResourceGroupName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAzureResourceGroupName() string {
	if o == nil || IsNil(o.AzureResourceGroupName) {
		var ret string
		return ret
	}
	return *o.AzureResourceGroupName
}

// GetAzureResourceGroupNameOk returns a tuple with the AzureResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAzureResourceGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.AzureResourceGroupName) {
		return nil, false
	}
	return o.AzureResourceGroupName, true
}

// HasAzureResourceGroupName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAzureResourceGroupName() bool {
	if o != nil && !IsNil(o.AzureResourceGroupName) {
		return true
	}

	return false
}

// SetAzureResourceGroupName gets a reference to the given string and assigns it to the AzureResourceGroupName field.
func (o *TargetTypeDetailsInput) SetAzureResourceGroupName(v string) {
	o.AzureResourceGroupName = &v
}

// GetAzureResourceName returns the AzureResourceName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAzureResourceName() string {
	if o == nil || IsNil(o.AzureResourceName) {
		var ret string
		return ret
	}
	return *o.AzureResourceName
}

// GetAzureResourceNameOk returns a tuple with the AzureResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAzureResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.AzureResourceName) {
		return nil, false
	}
	return o.AzureResourceName, true
}

// HasAzureResourceName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAzureResourceName() bool {
	if o != nil && !IsNil(o.AzureResourceName) {
		return true
	}

	return false
}

// SetAzureResourceName gets a reference to the given string and assigns it to the AzureResourceName field.
func (o *TargetTypeDetailsInput) SetAzureResourceName(v string) {
	o.AzureResourceName = &v
}

// GetAzureSubscriptionId returns the AzureSubscriptionId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAzureSubscriptionId() string {
	if o == nil || IsNil(o.AzureSubscriptionId) {
		var ret string
		return ret
	}
	return *o.AzureSubscriptionId
}

// GetAzureSubscriptionIdOk returns a tuple with the AzureSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAzureSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureSubscriptionId) {
		return nil, false
	}
	return o.AzureSubscriptionId, true
}

// HasAzureSubscriptionId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAzureSubscriptionId() bool {
	if o != nil && !IsNil(o.AzureSubscriptionId) {
		return true
	}

	return false
}

// SetAzureSubscriptionId gets a reference to the given string and assigns it to the AzureSubscriptionId field.
func (o *TargetTypeDetailsInput) SetAzureSubscriptionId(v string) {
	o.AzureSubscriptionId = &v
}

// GetAzureTenantId returns the AzureTenantId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetAzureTenantId() string {
	if o == nil || IsNil(o.AzureTenantId) {
		var ret string
		return ret
	}
	return *o.AzureTenantId
}

// GetAzureTenantIdOk returns a tuple with the AzureTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetAzureTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureTenantId) {
		return nil, false
	}
	return o.AzureTenantId, true
}

// HasAzureTenantId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasAzureTenantId() bool {
	if o != nil && !IsNil(o.AzureTenantId) {
		return true
	}

	return false
}

// SetAzureTenantId gets a reference to the given string and assigns it to the AzureTenantId field.
func (o *TargetTypeDetailsInput) SetAzureTenantId(v string) {
	o.AzureTenantId = &v
}

// GetCaCertData returns the CaCertData field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetCaCertData() []int32 {
	if o == nil || IsNil(o.CaCertData) {
		var ret []int32
		return ret
	}
	return o.CaCertData
}

// GetCaCertDataOk returns a tuple with the CaCertData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetCaCertDataOk() ([]int32, bool) {
	if o == nil || IsNil(o.CaCertData) {
		return nil, false
	}
	return o.CaCertData, true
}

// HasCaCertData returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasCaCertData() bool {
	if o != nil && !IsNil(o.CaCertData) {
		return true
	}

	return false
}

// SetCaCertData gets a reference to the given []int32 and assigns it to the CaCertData field.
func (o *TargetTypeDetailsInput) SetCaCertData(v []int32) {
	o.CaCertData = v
}

// GetCaCertName returns the CaCertName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetCaCertName() string {
	if o == nil || IsNil(o.CaCertName) {
		var ret string
		return ret
	}
	return *o.CaCertName
}

// GetCaCertNameOk returns a tuple with the CaCertName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetCaCertNameOk() (*string, bool) {
	if o == nil || IsNil(o.CaCertName) {
		return nil, false
	}
	return o.CaCertName, true
}

// HasCaCertName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasCaCertName() bool {
	if o != nil && !IsNil(o.CaCertName) {
		return true
	}

	return false
}

// SetCaCertName gets a reference to the given string and assigns it to the CaCertName field.
func (o *TargetTypeDetailsInput) SetCaCertName(v string) {
	o.CaCertName = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetCertificate() string {
	if o == nil || IsNil(o.Certificate) {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *TargetTypeDetailsInput) SetCertificate(v string) {
	o.Certificate = &v
}

// GetChefServerHostName returns the ChefServerHostName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerHostName() string {
	if o == nil || IsNil(o.ChefServerHostName) {
		var ret string
		return ret
	}
	return *o.ChefServerHostName
}

// GetChefServerHostNameOk returns a tuple with the ChefServerHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChefServerHostName) {
		return nil, false
	}
	return o.ChefServerHostName, true
}

// HasChefServerHostName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerHostName() bool {
	if o != nil && !IsNil(o.ChefServerHostName) {
		return true
	}

	return false
}

// SetChefServerHostName gets a reference to the given string and assigns it to the ChefServerHostName field.
func (o *TargetTypeDetailsInput) SetChefServerHostName(v string) {
	o.ChefServerHostName = &v
}

// GetChefServerKey returns the ChefServerKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerKey() string {
	if o == nil || IsNil(o.ChefServerKey) {
		var ret string
		return ret
	}
	return *o.ChefServerKey
}

// GetChefServerKeyOk returns a tuple with the ChefServerKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ChefServerKey) {
		return nil, false
	}
	return o.ChefServerKey, true
}

// HasChefServerKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerKey() bool {
	if o != nil && !IsNil(o.ChefServerKey) {
		return true
	}

	return false
}

// SetChefServerKey gets a reference to the given string and assigns it to the ChefServerKey field.
func (o *TargetTypeDetailsInput) SetChefServerKey(v string) {
	o.ChefServerKey = &v
}

// GetChefServerPort returns the ChefServerPort field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerPort() string {
	if o == nil || IsNil(o.ChefServerPort) {
		var ret string
		return ret
	}
	return *o.ChefServerPort
}

// GetChefServerPortOk returns a tuple with the ChefServerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerPortOk() (*string, bool) {
	if o == nil || IsNil(o.ChefServerPort) {
		return nil, false
	}
	return o.ChefServerPort, true
}

// HasChefServerPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerPort() bool {
	if o != nil && !IsNil(o.ChefServerPort) {
		return true
	}

	return false
}

// SetChefServerPort gets a reference to the given string and assigns it to the ChefServerPort field.
func (o *TargetTypeDetailsInput) SetChefServerPort(v string) {
	o.ChefServerPort = &v
}

// GetChefServerUrl returns the ChefServerUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerUrl() string {
	if o == nil || IsNil(o.ChefServerUrl) {
		var ret string
		return ret
	}
	return *o.ChefServerUrl
}

// GetChefServerUrlOk returns a tuple with the ChefServerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ChefServerUrl) {
		return nil, false
	}
	return o.ChefServerUrl, true
}

// HasChefServerUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerUrl() bool {
	if o != nil && !IsNil(o.ChefServerUrl) {
		return true
	}

	return false
}

// SetChefServerUrl gets a reference to the given string and assigns it to the ChefServerUrl field.
func (o *TargetTypeDetailsInput) SetChefServerUrl(v string) {
	o.ChefServerUrl = &v
}

// GetChefServerUsername returns the ChefServerUsername field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefServerUsername() string {
	if o == nil || IsNil(o.ChefServerUsername) {
		var ret string
		return ret
	}
	return *o.ChefServerUsername
}

// GetChefServerUsernameOk returns a tuple with the ChefServerUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefServerUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ChefServerUsername) {
		return nil, false
	}
	return o.ChefServerUsername, true
}

// HasChefServerUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefServerUsername() bool {
	if o != nil && !IsNil(o.ChefServerUsername) {
		return true
	}

	return false
}

// SetChefServerUsername gets a reference to the given string and assigns it to the ChefServerUsername field.
func (o *TargetTypeDetailsInput) SetChefServerUsername(v string) {
	o.ChefServerUsername = &v
}

// GetChefSkipSsl returns the ChefSkipSsl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetChefSkipSsl() bool {
	if o == nil || IsNil(o.ChefSkipSsl) {
		var ret bool
		return ret
	}
	return *o.ChefSkipSsl
}

// GetChefSkipSslOk returns a tuple with the ChefSkipSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetChefSkipSslOk() (*bool, bool) {
	if o == nil || IsNil(o.ChefSkipSsl) {
		return nil, false
	}
	return o.ChefSkipSsl, true
}

// HasChefSkipSsl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasChefSkipSsl() bool {
	if o != nil && !IsNil(o.ChefSkipSsl) {
		return true
	}

	return false
}

// SetChefSkipSsl gets a reference to the given bool and assigns it to the ChefSkipSsl field.
func (o *TargetTypeDetailsInput) SetChefSkipSsl(v bool) {
	o.ChefSkipSsl = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *TargetTypeDetailsInput) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *TargetTypeDetailsInput) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetDbHostName returns the DbHostName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbHostName() string {
	if o == nil || IsNil(o.DbHostName) {
		var ret string
		return ret
	}
	return *o.DbHostName
}

// GetDbHostNameOk returns a tuple with the DbHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.DbHostName) {
		return nil, false
	}
	return o.DbHostName, true
}

// HasDbHostName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbHostName() bool {
	if o != nil && !IsNil(o.DbHostName) {
		return true
	}

	return false
}

// SetDbHostName gets a reference to the given string and assigns it to the DbHostName field.
func (o *TargetTypeDetailsInput) SetDbHostName(v string) {
	o.DbHostName = &v
}

// GetDbName returns the DbName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbName() string {
	if o == nil || IsNil(o.DbName) {
		var ret string
		return ret
	}
	return *o.DbName
}

// GetDbNameOk returns a tuple with the DbName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbNameOk() (*string, bool) {
	if o == nil || IsNil(o.DbName) {
		return nil, false
	}
	return o.DbName, true
}

// HasDbName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbName() bool {
	if o != nil && !IsNil(o.DbName) {
		return true
	}

	return false
}

// SetDbName gets a reference to the given string and assigns it to the DbName field.
func (o *TargetTypeDetailsInput) SetDbName(v string) {
	o.DbName = &v
}

// GetDbPort returns the DbPort field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbPort() string {
	if o == nil || IsNil(o.DbPort) {
		var ret string
		return ret
	}
	return *o.DbPort
}

// GetDbPortOk returns a tuple with the DbPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbPortOk() (*string, bool) {
	if o == nil || IsNil(o.DbPort) {
		return nil, false
	}
	return o.DbPort, true
}

// HasDbPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbPort() bool {
	if o != nil && !IsNil(o.DbPort) {
		return true
	}

	return false
}

// SetDbPort gets a reference to the given string and assigns it to the DbPort field.
func (o *TargetTypeDetailsInput) SetDbPort(v string) {
	o.DbPort = &v
}

// GetDbPrivateKey returns the DbPrivateKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbPrivateKey() string {
	if o == nil || IsNil(o.DbPrivateKey) {
		var ret string
		return ret
	}
	return *o.DbPrivateKey
}

// GetDbPrivateKeyOk returns a tuple with the DbPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.DbPrivateKey) {
		return nil, false
	}
	return o.DbPrivateKey, true
}

// HasDbPrivateKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbPrivateKey() bool {
	if o != nil && !IsNil(o.DbPrivateKey) {
		return true
	}

	return false
}

// SetDbPrivateKey gets a reference to the given string and assigns it to the DbPrivateKey field.
func (o *TargetTypeDetailsInput) SetDbPrivateKey(v string) {
	o.DbPrivateKey = &v
}

// GetDbPrivateKeyPassphrase returns the DbPrivateKeyPassphrase field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbPrivateKeyPassphrase() string {
	if o == nil || IsNil(o.DbPrivateKeyPassphrase) {
		var ret string
		return ret
	}
	return *o.DbPrivateKeyPassphrase
}

// GetDbPrivateKeyPassphraseOk returns a tuple with the DbPrivateKeyPassphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbPrivateKeyPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.DbPrivateKeyPassphrase) {
		return nil, false
	}
	return o.DbPrivateKeyPassphrase, true
}

// HasDbPrivateKeyPassphrase returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbPrivateKeyPassphrase() bool {
	if o != nil && !IsNil(o.DbPrivateKeyPassphrase) {
		return true
	}

	return false
}

// SetDbPrivateKeyPassphrase gets a reference to the given string and assigns it to the DbPrivateKeyPassphrase field.
func (o *TargetTypeDetailsInput) SetDbPrivateKeyPassphrase(v string) {
	o.DbPrivateKeyPassphrase = &v
}

// GetDbPwd returns the DbPwd field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbPwd() string {
	if o == nil || IsNil(o.DbPwd) {
		var ret string
		return ret
	}
	return *o.DbPwd
}

// GetDbPwdOk returns a tuple with the DbPwd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbPwdOk() (*string, bool) {
	if o == nil || IsNil(o.DbPwd) {
		return nil, false
	}
	return o.DbPwd, true
}

// HasDbPwd returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbPwd() bool {
	if o != nil && !IsNil(o.DbPwd) {
		return true
	}

	return false
}

// SetDbPwd gets a reference to the given string and assigns it to the DbPwd field.
func (o *TargetTypeDetailsInput) SetDbPwd(v string) {
	o.DbPwd = &v
}

// GetDbServerCertificates returns the DbServerCertificates field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbServerCertificates() string {
	if o == nil || IsNil(o.DbServerCertificates) {
		var ret string
		return ret
	}
	return *o.DbServerCertificates
}

// GetDbServerCertificatesOk returns a tuple with the DbServerCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbServerCertificatesOk() (*string, bool) {
	if o == nil || IsNil(o.DbServerCertificates) {
		return nil, false
	}
	return o.DbServerCertificates, true
}

// HasDbServerCertificates returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbServerCertificates() bool {
	if o != nil && !IsNil(o.DbServerCertificates) {
		return true
	}

	return false
}

// SetDbServerCertificates gets a reference to the given string and assigns it to the DbServerCertificates field.
func (o *TargetTypeDetailsInput) SetDbServerCertificates(v string) {
	o.DbServerCertificates = &v
}

// GetDbServerName returns the DbServerName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbServerName() string {
	if o == nil || IsNil(o.DbServerName) {
		var ret string
		return ret
	}
	return *o.DbServerName
}

// GetDbServerNameOk returns a tuple with the DbServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.DbServerName) {
		return nil, false
	}
	return o.DbServerName, true
}

// HasDbServerName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbServerName() bool {
	if o != nil && !IsNil(o.DbServerName) {
		return true
	}

	return false
}

// SetDbServerName gets a reference to the given string and assigns it to the DbServerName field.
func (o *TargetTypeDetailsInput) SetDbServerName(v string) {
	o.DbServerName = &v
}

// GetDbUserName returns the DbUserName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDbUserName() string {
	if o == nil || IsNil(o.DbUserName) {
		var ret string
		return ret
	}
	return *o.DbUserName
}

// GetDbUserNameOk returns a tuple with the DbUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDbUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.DbUserName) {
		return nil, false
	}
	return o.DbUserName, true
}

// HasDbUserName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDbUserName() bool {
	if o != nil && !IsNil(o.DbUserName) {
		return true
	}

	return false
}

// SetDbUserName gets a reference to the given string and assigns it to the DbUserName field.
func (o *TargetTypeDetailsInput) SetDbUserName(v string) {
	o.DbUserName = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasDomainName() bool {
	if o != nil && !IsNil(o.DomainName) {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *TargetTypeDetailsInput) SetDomainName(v string) {
	o.DomainName = &v
}

// GetEksAccessKeyId returns the EksAccessKeyId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksAccessKeyId() string {
	if o == nil || IsNil(o.EksAccessKeyId) {
		var ret string
		return ret
	}
	return *o.EksAccessKeyId
}

// GetEksAccessKeyIdOk returns a tuple with the EksAccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.EksAccessKeyId) {
		return nil, false
	}
	return o.EksAccessKeyId, true
}

// HasEksAccessKeyId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksAccessKeyId() bool {
	if o != nil && !IsNil(o.EksAccessKeyId) {
		return true
	}

	return false
}

// SetEksAccessKeyId gets a reference to the given string and assigns it to the EksAccessKeyId field.
func (o *TargetTypeDetailsInput) SetEksAccessKeyId(v string) {
	o.EksAccessKeyId = &v
}

// GetEksClusterCaCertificate returns the EksClusterCaCertificate field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksClusterCaCertificate() string {
	if o == nil || IsNil(o.EksClusterCaCertificate) {
		var ret string
		return ret
	}
	return *o.EksClusterCaCertificate
}

// GetEksClusterCaCertificateOk returns a tuple with the EksClusterCaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksClusterCaCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.EksClusterCaCertificate) {
		return nil, false
	}
	return o.EksClusterCaCertificate, true
}

// HasEksClusterCaCertificate returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksClusterCaCertificate() bool {
	if o != nil && !IsNil(o.EksClusterCaCertificate) {
		return true
	}

	return false
}

// SetEksClusterCaCertificate gets a reference to the given string and assigns it to the EksClusterCaCertificate field.
func (o *TargetTypeDetailsInput) SetEksClusterCaCertificate(v string) {
	o.EksClusterCaCertificate = &v
}

// GetEksClusterEndpoint returns the EksClusterEndpoint field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksClusterEndpoint() string {
	if o == nil || IsNil(o.EksClusterEndpoint) {
		var ret string
		return ret
	}
	return *o.EksClusterEndpoint
}

// GetEksClusterEndpointOk returns a tuple with the EksClusterEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksClusterEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.EksClusterEndpoint) {
		return nil, false
	}
	return o.EksClusterEndpoint, true
}

// HasEksClusterEndpoint returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksClusterEndpoint() bool {
	if o != nil && !IsNil(o.EksClusterEndpoint) {
		return true
	}

	return false
}

// SetEksClusterEndpoint gets a reference to the given string and assigns it to the EksClusterEndpoint field.
func (o *TargetTypeDetailsInput) SetEksClusterEndpoint(v string) {
	o.EksClusterEndpoint = &v
}

// GetEksClusterName returns the EksClusterName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksClusterName() string {
	if o == nil || IsNil(o.EksClusterName) {
		var ret string
		return ret
	}
	return *o.EksClusterName
}

// GetEksClusterNameOk returns a tuple with the EksClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.EksClusterName) {
		return nil, false
	}
	return o.EksClusterName, true
}

// HasEksClusterName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksClusterName() bool {
	if o != nil && !IsNil(o.EksClusterName) {
		return true
	}

	return false
}

// SetEksClusterName gets a reference to the given string and assigns it to the EksClusterName field.
func (o *TargetTypeDetailsInput) SetEksClusterName(v string) {
	o.EksClusterName = &v
}

// GetEksRegion returns the EksRegion field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksRegion() string {
	if o == nil || IsNil(o.EksRegion) {
		var ret string
		return ret
	}
	return *o.EksRegion
}

// GetEksRegionOk returns a tuple with the EksRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksRegionOk() (*string, bool) {
	if o == nil || IsNil(o.EksRegion) {
		return nil, false
	}
	return o.EksRegion, true
}

// HasEksRegion returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksRegion() bool {
	if o != nil && !IsNil(o.EksRegion) {
		return true
	}

	return false
}

// SetEksRegion gets a reference to the given string and assigns it to the EksRegion field.
func (o *TargetTypeDetailsInput) SetEksRegion(v string) {
	o.EksRegion = &v
}

// GetEksSecretAccessKey returns the EksSecretAccessKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEksSecretAccessKey() string {
	if o == nil || IsNil(o.EksSecretAccessKey) {
		var ret string
		return ret
	}
	return *o.EksSecretAccessKey
}

// GetEksSecretAccessKeyOk returns a tuple with the EksSecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEksSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.EksSecretAccessKey) {
		return nil, false
	}
	return o.EksSecretAccessKey, true
}

// HasEksSecretAccessKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEksSecretAccessKey() bool {
	if o != nil && !IsNil(o.EksSecretAccessKey) {
		return true
	}

	return false
}

// SetEksSecretAccessKey gets a reference to the given string and assigns it to the EksSecretAccessKey field.
func (o *TargetTypeDetailsInput) SetEksSecretAccessKey(v string) {
	o.EksSecretAccessKey = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *TargetTypeDetailsInput) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *TargetTypeDetailsInput) SetFirstName(v string) {
	o.FirstName = &v
}

// GetGcpServiceAccountEmail returns the GcpServiceAccountEmail field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountEmail() string {
	if o == nil || IsNil(o.GcpServiceAccountEmail) {
		var ret string
		return ret
	}
	return *o.GcpServiceAccountEmail
}

// GetGcpServiceAccountEmailOk returns a tuple with the GcpServiceAccountEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountEmailOk() (*string, bool) {
	if o == nil || IsNil(o.GcpServiceAccountEmail) {
		return nil, false
	}
	return o.GcpServiceAccountEmail, true
}

// HasGcpServiceAccountEmail returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGcpServiceAccountEmail() bool {
	if o != nil && !IsNil(o.GcpServiceAccountEmail) {
		return true
	}

	return false
}

// SetGcpServiceAccountEmail gets a reference to the given string and assigns it to the GcpServiceAccountEmail field.
func (o *TargetTypeDetailsInput) SetGcpServiceAccountEmail(v string) {
	o.GcpServiceAccountEmail = &v
}

// GetGcpServiceAccountKey returns the GcpServiceAccountKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountKey() string {
	if o == nil || IsNil(o.GcpServiceAccountKey) {
		var ret string
		return ret
	}
	return *o.GcpServiceAccountKey
}

// GetGcpServiceAccountKeyOk returns a tuple with the GcpServiceAccountKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountKeyOk() (*string, bool) {
	if o == nil || IsNil(o.GcpServiceAccountKey) {
		return nil, false
	}
	return o.GcpServiceAccountKey, true
}

// HasGcpServiceAccountKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGcpServiceAccountKey() bool {
	if o != nil && !IsNil(o.GcpServiceAccountKey) {
		return true
	}

	return false
}

// SetGcpServiceAccountKey gets a reference to the given string and assigns it to the GcpServiceAccountKey field.
func (o *TargetTypeDetailsInput) SetGcpServiceAccountKey(v string) {
	o.GcpServiceAccountKey = &v
}

// GetGcpServiceAccountKeyBase64 returns the GcpServiceAccountKeyBase64 field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountKeyBase64() string {
	if o == nil || IsNil(o.GcpServiceAccountKeyBase64) {
		var ret string
		return ret
	}
	return *o.GcpServiceAccountKeyBase64
}

// GetGcpServiceAccountKeyBase64Ok returns a tuple with the GcpServiceAccountKeyBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGcpServiceAccountKeyBase64Ok() (*string, bool) {
	if o == nil || IsNil(o.GcpServiceAccountKeyBase64) {
		return nil, false
	}
	return o.GcpServiceAccountKeyBase64, true
}

// HasGcpServiceAccountKeyBase64 returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGcpServiceAccountKeyBase64() bool {
	if o != nil && !IsNil(o.GcpServiceAccountKeyBase64) {
		return true
	}

	return false
}

// SetGcpServiceAccountKeyBase64 gets a reference to the given string and assigns it to the GcpServiceAccountKeyBase64 field.
func (o *TargetTypeDetailsInput) SetGcpServiceAccountKeyBase64(v string) {
	o.GcpServiceAccountKeyBase64 = &v
}

// GetGithubAppId returns the GithubAppId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGithubAppId() int64 {
	if o == nil || IsNil(o.GithubAppId) {
		var ret int64
		return ret
	}
	return *o.GithubAppId
}

// GetGithubAppIdOk returns a tuple with the GithubAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGithubAppIdOk() (*int64, bool) {
	if o == nil || IsNil(o.GithubAppId) {
		return nil, false
	}
	return o.GithubAppId, true
}

// HasGithubAppId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGithubAppId() bool {
	if o != nil && !IsNil(o.GithubAppId) {
		return true
	}

	return false
}

// SetGithubAppId gets a reference to the given int64 and assigns it to the GithubAppId field.
func (o *TargetTypeDetailsInput) SetGithubAppId(v int64) {
	o.GithubAppId = &v
}

// GetGithubAppPrivateKey returns the GithubAppPrivateKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGithubAppPrivateKey() string {
	if o == nil || IsNil(o.GithubAppPrivateKey) {
		var ret string
		return ret
	}
	return *o.GithubAppPrivateKey
}

// GetGithubAppPrivateKeyOk returns a tuple with the GithubAppPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGithubAppPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.GithubAppPrivateKey) {
		return nil, false
	}
	return o.GithubAppPrivateKey, true
}

// HasGithubAppPrivateKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGithubAppPrivateKey() bool {
	if o != nil && !IsNil(o.GithubAppPrivateKey) {
		return true
	}

	return false
}

// SetGithubAppPrivateKey gets a reference to the given string and assigns it to the GithubAppPrivateKey field.
func (o *TargetTypeDetailsInput) SetGithubAppPrivateKey(v string) {
	o.GithubAppPrivateKey = &v
}

// GetGithubBaseUrl returns the GithubBaseUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGithubBaseUrl() string {
	if o == nil || IsNil(o.GithubBaseUrl) {
		var ret string
		return ret
	}
	return *o.GithubBaseUrl
}

// GetGithubBaseUrlOk returns a tuple with the GithubBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGithubBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.GithubBaseUrl) {
		return nil, false
	}
	return o.GithubBaseUrl, true
}

// HasGithubBaseUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGithubBaseUrl() bool {
	if o != nil && !IsNil(o.GithubBaseUrl) {
		return true
	}

	return false
}

// SetGithubBaseUrl gets a reference to the given string and assigns it to the GithubBaseUrl field.
func (o *TargetTypeDetailsInput) SetGithubBaseUrl(v string) {
	o.GithubBaseUrl = &v
}

// GetGkeClusterCaCertificate returns the GkeClusterCaCertificate field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeClusterCaCertificate() string {
	if o == nil || IsNil(o.GkeClusterCaCertificate) {
		var ret string
		return ret
	}
	return *o.GkeClusterCaCertificate
}

// GetGkeClusterCaCertificateOk returns a tuple with the GkeClusterCaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeClusterCaCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.GkeClusterCaCertificate) {
		return nil, false
	}
	return o.GkeClusterCaCertificate, true
}

// HasGkeClusterCaCertificate returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeClusterCaCertificate() bool {
	if o != nil && !IsNil(o.GkeClusterCaCertificate) {
		return true
	}

	return false
}

// SetGkeClusterCaCertificate gets a reference to the given string and assigns it to the GkeClusterCaCertificate field.
func (o *TargetTypeDetailsInput) SetGkeClusterCaCertificate(v string) {
	o.GkeClusterCaCertificate = &v
}

// GetGkeClusterEndpoint returns the GkeClusterEndpoint field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeClusterEndpoint() string {
	if o == nil || IsNil(o.GkeClusterEndpoint) {
		var ret string
		return ret
	}
	return *o.GkeClusterEndpoint
}

// GetGkeClusterEndpointOk returns a tuple with the GkeClusterEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeClusterEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.GkeClusterEndpoint) {
		return nil, false
	}
	return o.GkeClusterEndpoint, true
}

// HasGkeClusterEndpoint returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeClusterEndpoint() bool {
	if o != nil && !IsNil(o.GkeClusterEndpoint) {
		return true
	}

	return false
}

// SetGkeClusterEndpoint gets a reference to the given string and assigns it to the GkeClusterEndpoint field.
func (o *TargetTypeDetailsInput) SetGkeClusterEndpoint(v string) {
	o.GkeClusterEndpoint = &v
}

// GetGkeClusterName returns the GkeClusterName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeClusterName() string {
	if o == nil || IsNil(o.GkeClusterName) {
		var ret string
		return ret
	}
	return *o.GkeClusterName
}

// GetGkeClusterNameOk returns a tuple with the GkeClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.GkeClusterName) {
		return nil, false
	}
	return o.GkeClusterName, true
}

// HasGkeClusterName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeClusterName() bool {
	if o != nil && !IsNil(o.GkeClusterName) {
		return true
	}

	return false
}

// SetGkeClusterName gets a reference to the given string and assigns it to the GkeClusterName field.
func (o *TargetTypeDetailsInput) SetGkeClusterName(v string) {
	o.GkeClusterName = &v
}

// GetGkeServiceAccountKey returns the GkeServiceAccountKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeServiceAccountKey() string {
	if o == nil || IsNil(o.GkeServiceAccountKey) {
		var ret string
		return ret
	}
	return *o.GkeServiceAccountKey
}

// GetGkeServiceAccountKeyOk returns a tuple with the GkeServiceAccountKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeServiceAccountKeyOk() (*string, bool) {
	if o == nil || IsNil(o.GkeServiceAccountKey) {
		return nil, false
	}
	return o.GkeServiceAccountKey, true
}

// HasGkeServiceAccountKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeServiceAccountKey() bool {
	if o != nil && !IsNil(o.GkeServiceAccountKey) {
		return true
	}

	return false
}

// SetGkeServiceAccountKey gets a reference to the given string and assigns it to the GkeServiceAccountKey field.
func (o *TargetTypeDetailsInput) SetGkeServiceAccountKey(v string) {
	o.GkeServiceAccountKey = &v
}

// GetGkeServiceAccountName returns the GkeServiceAccountName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetGkeServiceAccountName() string {
	if o == nil || IsNil(o.GkeServiceAccountName) {
		var ret string
		return ret
	}
	return *o.GkeServiceAccountName
}

// GetGkeServiceAccountNameOk returns a tuple with the GkeServiceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetGkeServiceAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.GkeServiceAccountName) {
		return nil, false
	}
	return o.GkeServiceAccountName, true
}

// HasGkeServiceAccountName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasGkeServiceAccountName() bool {
	if o != nil && !IsNil(o.GkeServiceAccountName) {
		return true
	}

	return false
}

// SetGkeServiceAccountName gets a reference to the given string and assigns it to the GkeServiceAccountName field.
func (o *TargetTypeDetailsInput) SetGkeServiceAccountName(v string) {
	o.GkeServiceAccountName = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *TargetTypeDetailsInput) SetHost(v string) {
	o.Host = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *TargetTypeDetailsInput) SetHostname(v string) {
	o.Hostname = &v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetHosts() map[string]string {
	if o == nil || IsNil(o.Hosts) {
		var ret map[string]string
		return ret
	}
	return *o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetHostsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Hosts) {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasHosts() bool {
	if o != nil && !IsNil(o.Hosts) {
		return true
	}

	return false
}

// SetHosts gets a reference to the given map[string]string and assigns it to the Hosts field.
func (o *TargetTypeDetailsInput) SetHosts(v map[string]string) {
	o.Hosts = &v
}

// GetImapFqdn returns the ImapFqdn field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetImapFqdn() string {
	if o == nil || IsNil(o.ImapFqdn) {
		var ret string
		return ret
	}
	return *o.ImapFqdn
}

// GetImapFqdnOk returns a tuple with the ImapFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetImapFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.ImapFqdn) {
		return nil, false
	}
	return o.ImapFqdn, true
}

// HasImapFqdn returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasImapFqdn() bool {
	if o != nil && !IsNil(o.ImapFqdn) {
		return true
	}

	return false
}

// SetImapFqdn gets a reference to the given string and assigns it to the ImapFqdn field.
func (o *TargetTypeDetailsInput) SetImapFqdn(v string) {
	o.ImapFqdn = &v
}

// GetImapPassword returns the ImapPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetImapPassword() string {
	if o == nil || IsNil(o.ImapPassword) {
		var ret string
		return ret
	}
	return *o.ImapPassword
}

// GetImapPasswordOk returns a tuple with the ImapPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetImapPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ImapPassword) {
		return nil, false
	}
	return o.ImapPassword, true
}

// HasImapPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasImapPassword() bool {
	if o != nil && !IsNil(o.ImapPassword) {
		return true
	}

	return false
}

// SetImapPassword gets a reference to the given string and assigns it to the ImapPassword field.
func (o *TargetTypeDetailsInput) SetImapPassword(v string) {
	o.ImapPassword = &v
}

// GetImapPort returns the ImapPort field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetImapPort() string {
	if o == nil || IsNil(o.ImapPort) {
		var ret string
		return ret
	}
	return *o.ImapPort
}

// GetImapPortOk returns a tuple with the ImapPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetImapPortOk() (*string, bool) {
	if o == nil || IsNil(o.ImapPort) {
		return nil, false
	}
	return o.ImapPort, true
}

// HasImapPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasImapPort() bool {
	if o != nil && !IsNil(o.ImapPort) {
		return true
	}

	return false
}

// SetImapPort gets a reference to the given string and assigns it to the ImapPort field.
func (o *TargetTypeDetailsInput) SetImapPort(v string) {
	o.ImapPort = &v
}

// GetImapUser returns the ImapUser field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetImapUser() string {
	if o == nil || IsNil(o.ImapUser) {
		var ret string
		return ret
	}
	return *o.ImapUser
}

// GetImapUserOk returns a tuple with the ImapUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetImapUserOk() (*string, bool) {
	if o == nil || IsNil(o.ImapUser) {
		return nil, false
	}
	return o.ImapUser, true
}

// HasImapUser returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasImapUser() bool {
	if o != nil && !IsNil(o.ImapUser) {
		return true
	}

	return false
}

// SetImapUser gets a reference to the given string and assigns it to the ImapUser field.
func (o *TargetTypeDetailsInput) SetImapUser(v string) {
	o.ImapUser = &v
}

// GetImplementationType returns the ImplementationType field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetImplementationType() string {
	if o == nil || IsNil(o.ImplementationType) {
		var ret string
		return ret
	}
	return *o.ImplementationType
}

// GetImplementationTypeOk returns a tuple with the ImplementationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetImplementationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ImplementationType) {
		return nil, false
	}
	return o.ImplementationType, true
}

// HasImplementationType returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasImplementationType() bool {
	if o != nil && !IsNil(o.ImplementationType) {
		return true
	}

	return false
}

// SetImplementationType gets a reference to the given string and assigns it to the ImplementationType field.
func (o *TargetTypeDetailsInput) SetImplementationType(v string) {
	o.ImplementationType = &v
}

// GetK8sBearerToken returns the K8sBearerToken field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetK8sBearerToken() string {
	if o == nil || IsNil(o.K8sBearerToken) {
		var ret string
		return ret
	}
	return *o.K8sBearerToken
}

// GetK8sBearerTokenOk returns a tuple with the K8sBearerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetK8sBearerTokenOk() (*string, bool) {
	if o == nil || IsNil(o.K8sBearerToken) {
		return nil, false
	}
	return o.K8sBearerToken, true
}

// HasK8sBearerToken returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasK8sBearerToken() bool {
	if o != nil && !IsNil(o.K8sBearerToken) {
		return true
	}

	return false
}

// SetK8sBearerToken gets a reference to the given string and assigns it to the K8sBearerToken field.
func (o *TargetTypeDetailsInput) SetK8sBearerToken(v string) {
	o.K8sBearerToken = &v
}

// GetK8sClusterCaCertificate returns the K8sClusterCaCertificate field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetK8sClusterCaCertificate() string {
	if o == nil || IsNil(o.K8sClusterCaCertificate) {
		var ret string
		return ret
	}
	return *o.K8sClusterCaCertificate
}

// GetK8sClusterCaCertificateOk returns a tuple with the K8sClusterCaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetK8sClusterCaCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.K8sClusterCaCertificate) {
		return nil, false
	}
	return o.K8sClusterCaCertificate, true
}

// HasK8sClusterCaCertificate returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasK8sClusterCaCertificate() bool {
	if o != nil && !IsNil(o.K8sClusterCaCertificate) {
		return true
	}

	return false
}

// SetK8sClusterCaCertificate gets a reference to the given string and assigns it to the K8sClusterCaCertificate field.
func (o *TargetTypeDetailsInput) SetK8sClusterCaCertificate(v string) {
	o.K8sClusterCaCertificate = &v
}

// GetK8sClusterEndpoint returns the K8sClusterEndpoint field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetK8sClusterEndpoint() string {
	if o == nil || IsNil(o.K8sClusterEndpoint) {
		var ret string
		return ret
	}
	return *o.K8sClusterEndpoint
}

// GetK8sClusterEndpointOk returns a tuple with the K8sClusterEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetK8sClusterEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.K8sClusterEndpoint) {
		return nil, false
	}
	return o.K8sClusterEndpoint, true
}

// HasK8sClusterEndpoint returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasK8sClusterEndpoint() bool {
	if o != nil && !IsNil(o.K8sClusterEndpoint) {
		return true
	}

	return false
}

// SetK8sClusterEndpoint gets a reference to the given string and assigns it to the K8sClusterEndpoint field.
func (o *TargetTypeDetailsInput) SetK8sClusterEndpoint(v string) {
	o.K8sClusterEndpoint = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *TargetTypeDetailsInput) SetLastName(v string) {
	o.LastName = &v
}

// GetLdapAudience returns the LdapAudience field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetLdapAudience() string {
	if o == nil || IsNil(o.LdapAudience) {
		var ret string
		return ret
	}
	return *o.LdapAudience
}

// GetLdapAudienceOk returns a tuple with the LdapAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetLdapAudienceOk() (*string, bool) {
	if o == nil || IsNil(o.LdapAudience) {
		return nil, false
	}
	return o.LdapAudience, true
}

// HasLdapAudience returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasLdapAudience() bool {
	if o != nil && !IsNil(o.LdapAudience) {
		return true
	}

	return false
}

// SetLdapAudience gets a reference to the given string and assigns it to the LdapAudience field.
func (o *TargetTypeDetailsInput) SetLdapAudience(v string) {
	o.LdapAudience = &v
}

// GetLdapBindDn returns the LdapBindDn field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetLdapBindDn() string {
	if o == nil || IsNil(o.LdapBindDn) {
		var ret string
		return ret
	}
	return *o.LdapBindDn
}

// GetLdapBindDnOk returns a tuple with the LdapBindDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetLdapBindDnOk() (*string, bool) {
	if o == nil || IsNil(o.LdapBindDn) {
		return nil, false
	}
	return o.LdapBindDn, true
}

// HasLdapBindDn returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasLdapBindDn() bool {
	if o != nil && !IsNil(o.LdapBindDn) {
		return true
	}

	return false
}

// SetLdapBindDn gets a reference to the given string and assigns it to the LdapBindDn field.
func (o *TargetTypeDetailsInput) SetLdapBindDn(v string) {
	o.LdapBindDn = &v
}

// GetLdapBindPassword returns the LdapBindPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetLdapBindPassword() string {
	if o == nil || IsNil(o.LdapBindPassword) {
		var ret string
		return ret
	}
	return *o.LdapBindPassword
}

// GetLdapBindPasswordOk returns a tuple with the LdapBindPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetLdapBindPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.LdapBindPassword) {
		return nil, false
	}
	return o.LdapBindPassword, true
}

// HasLdapBindPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasLdapBindPassword() bool {
	if o != nil && !IsNil(o.LdapBindPassword) {
		return true
	}

	return false
}

// SetLdapBindPassword gets a reference to the given string and assigns it to the LdapBindPassword field.
func (o *TargetTypeDetailsInput) SetLdapBindPassword(v string) {
	o.LdapBindPassword = &v
}

// GetLdapCertificate returns the LdapCertificate field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetLdapCertificate() string {
	if o == nil || IsNil(o.LdapCertificate) {
		var ret string
		return ret
	}
	return *o.LdapCertificate
}

// GetLdapCertificateOk returns a tuple with the LdapCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetLdapCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.LdapCertificate) {
		return nil, false
	}
	return o.LdapCertificate, true
}

// HasLdapCertificate returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasLdapCertificate() bool {
	if o != nil && !IsNil(o.LdapCertificate) {
		return true
	}

	return false
}

// SetLdapCertificate gets a reference to the given string and assigns it to the LdapCertificate field.
func (o *TargetTypeDetailsInput) SetLdapCertificate(v string) {
	o.LdapCertificate = &v
}

// GetLdapTokenExpiration returns the LdapTokenExpiration field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetLdapTokenExpiration() string {
	if o == nil || IsNil(o.LdapTokenExpiration) {
		var ret string
		return ret
	}
	return *o.LdapTokenExpiration
}

// GetLdapTokenExpirationOk returns a tuple with the LdapTokenExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetLdapTokenExpirationOk() (*string, bool) {
	if o == nil || IsNil(o.LdapTokenExpiration) {
		return nil, false
	}
	return o.LdapTokenExpiration, true
}

// HasLdapTokenExpiration returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasLdapTokenExpiration() bool {
	if o != nil && !IsNil(o.LdapTokenExpiration) {
		return true
	}

	return false
}

// SetLdapTokenExpiration gets a reference to the given string and assigns it to the LdapTokenExpiration field.
func (o *TargetTypeDetailsInput) SetLdapTokenExpiration(v string) {
	o.LdapTokenExpiration = &v
}

// GetLdapUrl returns the LdapUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetLdapUrl() string {
	if o == nil || IsNil(o.LdapUrl) {
		var ret string
		return ret
	}
	return *o.LdapUrl
}

// GetLdapUrlOk returns a tuple with the LdapUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetLdapUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LdapUrl) {
		return nil, false
	}
	return o.LdapUrl, true
}

// HasLdapUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasLdapUrl() bool {
	if o != nil && !IsNil(o.LdapUrl) {
		return true
	}

	return false
}

// SetLdapUrl gets a reference to the given string and assigns it to the LdapUrl field.
func (o *TargetTypeDetailsInput) SetLdapUrl(v string) {
	o.LdapUrl = &v
}

// GetMongodbAtlasApiPrivateKey returns the MongodbAtlasApiPrivateKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbAtlasApiPrivateKey() string {
	if o == nil || IsNil(o.MongodbAtlasApiPrivateKey) {
		var ret string
		return ret
	}
	return *o.MongodbAtlasApiPrivateKey
}

// GetMongodbAtlasApiPrivateKeyOk returns a tuple with the MongodbAtlasApiPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbAtlasApiPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbAtlasApiPrivateKey) {
		return nil, false
	}
	return o.MongodbAtlasApiPrivateKey, true
}

// HasMongodbAtlasApiPrivateKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbAtlasApiPrivateKey() bool {
	if o != nil && !IsNil(o.MongodbAtlasApiPrivateKey) {
		return true
	}

	return false
}

// SetMongodbAtlasApiPrivateKey gets a reference to the given string and assigns it to the MongodbAtlasApiPrivateKey field.
func (o *TargetTypeDetailsInput) SetMongodbAtlasApiPrivateKey(v string) {
	o.MongodbAtlasApiPrivateKey = &v
}

// GetMongodbAtlasApiPublicKey returns the MongodbAtlasApiPublicKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbAtlasApiPublicKey() string {
	if o == nil || IsNil(o.MongodbAtlasApiPublicKey) {
		var ret string
		return ret
	}
	return *o.MongodbAtlasApiPublicKey
}

// GetMongodbAtlasApiPublicKeyOk returns a tuple with the MongodbAtlasApiPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbAtlasApiPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbAtlasApiPublicKey) {
		return nil, false
	}
	return o.MongodbAtlasApiPublicKey, true
}

// HasMongodbAtlasApiPublicKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbAtlasApiPublicKey() bool {
	if o != nil && !IsNil(o.MongodbAtlasApiPublicKey) {
		return true
	}

	return false
}

// SetMongodbAtlasApiPublicKey gets a reference to the given string and assigns it to the MongodbAtlasApiPublicKey field.
func (o *TargetTypeDetailsInput) SetMongodbAtlasApiPublicKey(v string) {
	o.MongodbAtlasApiPublicKey = &v
}

// GetMongodbAtlasProjectId returns the MongodbAtlasProjectId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbAtlasProjectId() string {
	if o == nil || IsNil(o.MongodbAtlasProjectId) {
		var ret string
		return ret
	}
	return *o.MongodbAtlasProjectId
}

// GetMongodbAtlasProjectIdOk returns a tuple with the MongodbAtlasProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbAtlasProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbAtlasProjectId) {
		return nil, false
	}
	return o.MongodbAtlasProjectId, true
}

// HasMongodbAtlasProjectId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbAtlasProjectId() bool {
	if o != nil && !IsNil(o.MongodbAtlasProjectId) {
		return true
	}

	return false
}

// SetMongodbAtlasProjectId gets a reference to the given string and assigns it to the MongodbAtlasProjectId field.
func (o *TargetTypeDetailsInput) SetMongodbAtlasProjectId(v string) {
	o.MongodbAtlasProjectId = &v
}

// GetMongodbDbName returns the MongodbDbName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbDbName() string {
	if o == nil || IsNil(o.MongodbDbName) {
		var ret string
		return ret
	}
	return *o.MongodbDbName
}

// GetMongodbDbNameOk returns a tuple with the MongodbDbName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbDbNameOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbDbName) {
		return nil, false
	}
	return o.MongodbDbName, true
}

// HasMongodbDbName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbDbName() bool {
	if o != nil && !IsNil(o.MongodbDbName) {
		return true
	}

	return false
}

// SetMongodbDbName gets a reference to the given string and assigns it to the MongodbDbName field.
func (o *TargetTypeDetailsInput) SetMongodbDbName(v string) {
	o.MongodbDbName = &v
}

// GetMongodbDefaultAuthDb returns the MongodbDefaultAuthDb field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbDefaultAuthDb() string {
	if o == nil || IsNil(o.MongodbDefaultAuthDb) {
		var ret string
		return ret
	}
	return *o.MongodbDefaultAuthDb
}

// GetMongodbDefaultAuthDbOk returns a tuple with the MongodbDefaultAuthDb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbDefaultAuthDbOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbDefaultAuthDb) {
		return nil, false
	}
	return o.MongodbDefaultAuthDb, true
}

// HasMongodbDefaultAuthDb returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbDefaultAuthDb() bool {
	if o != nil && !IsNil(o.MongodbDefaultAuthDb) {
		return true
	}

	return false
}

// SetMongodbDefaultAuthDb gets a reference to the given string and assigns it to the MongodbDefaultAuthDb field.
func (o *TargetTypeDetailsInput) SetMongodbDefaultAuthDb(v string) {
	o.MongodbDefaultAuthDb = &v
}

// GetMongodbHostPort returns the MongodbHostPort field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbHostPort() string {
	if o == nil || IsNil(o.MongodbHostPort) {
		var ret string
		return ret
	}
	return *o.MongodbHostPort
}

// GetMongodbHostPortOk returns a tuple with the MongodbHostPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbHostPortOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbHostPort) {
		return nil, false
	}
	return o.MongodbHostPort, true
}

// HasMongodbHostPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbHostPort() bool {
	if o != nil && !IsNil(o.MongodbHostPort) {
		return true
	}

	return false
}

// SetMongodbHostPort gets a reference to the given string and assigns it to the MongodbHostPort field.
func (o *TargetTypeDetailsInput) SetMongodbHostPort(v string) {
	o.MongodbHostPort = &v
}

// GetMongodbIsAtlas returns the MongodbIsAtlas field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbIsAtlas() bool {
	if o == nil || IsNil(o.MongodbIsAtlas) {
		var ret bool
		return ret
	}
	return *o.MongodbIsAtlas
}

// GetMongodbIsAtlasOk returns a tuple with the MongodbIsAtlas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbIsAtlasOk() (*bool, bool) {
	if o == nil || IsNil(o.MongodbIsAtlas) {
		return nil, false
	}
	return o.MongodbIsAtlas, true
}

// HasMongodbIsAtlas returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbIsAtlas() bool {
	if o != nil && !IsNil(o.MongodbIsAtlas) {
		return true
	}

	return false
}

// SetMongodbIsAtlas gets a reference to the given bool and assigns it to the MongodbIsAtlas field.
func (o *TargetTypeDetailsInput) SetMongodbIsAtlas(v bool) {
	o.MongodbIsAtlas = &v
}

// GetMongodbPassword returns the MongodbPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbPassword() string {
	if o == nil || IsNil(o.MongodbPassword) {
		var ret string
		return ret
	}
	return *o.MongodbPassword
}

// GetMongodbPasswordOk returns a tuple with the MongodbPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbPassword) {
		return nil, false
	}
	return o.MongodbPassword, true
}

// HasMongodbPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbPassword() bool {
	if o != nil && !IsNil(o.MongodbPassword) {
		return true
	}

	return false
}

// SetMongodbPassword gets a reference to the given string and assigns it to the MongodbPassword field.
func (o *TargetTypeDetailsInput) SetMongodbPassword(v string) {
	o.MongodbPassword = &v
}

// GetMongodbUriConnection returns the MongodbUriConnection field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbUriConnection() string {
	if o == nil || IsNil(o.MongodbUriConnection) {
		var ret string
		return ret
	}
	return *o.MongodbUriConnection
}

// GetMongodbUriConnectionOk returns a tuple with the MongodbUriConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbUriConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbUriConnection) {
		return nil, false
	}
	return o.MongodbUriConnection, true
}

// HasMongodbUriConnection returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbUriConnection() bool {
	if o != nil && !IsNil(o.MongodbUriConnection) {
		return true
	}

	return false
}

// SetMongodbUriConnection gets a reference to the given string and assigns it to the MongodbUriConnection field.
func (o *TargetTypeDetailsInput) SetMongodbUriConnection(v string) {
	o.MongodbUriConnection = &v
}

// GetMongodbUriOptions returns the MongodbUriOptions field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbUriOptions() string {
	if o == nil || IsNil(o.MongodbUriOptions) {
		var ret string
		return ret
	}
	return *o.MongodbUriOptions
}

// GetMongodbUriOptionsOk returns a tuple with the MongodbUriOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbUriOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbUriOptions) {
		return nil, false
	}
	return o.MongodbUriOptions, true
}

// HasMongodbUriOptions returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbUriOptions() bool {
	if o != nil && !IsNil(o.MongodbUriOptions) {
		return true
	}

	return false
}

// SetMongodbUriOptions gets a reference to the given string and assigns it to the MongodbUriOptions field.
func (o *TargetTypeDetailsInput) SetMongodbUriOptions(v string) {
	o.MongodbUriOptions = &v
}

// GetMongodbUsername returns the MongodbUsername field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetMongodbUsername() string {
	if o == nil || IsNil(o.MongodbUsername) {
		var ret string
		return ret
	}
	return *o.MongodbUsername
}

// GetMongodbUsernameOk returns a tuple with the MongodbUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetMongodbUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.MongodbUsername) {
		return nil, false
	}
	return o.MongodbUsername, true
}

// HasMongodbUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasMongodbUsername() bool {
	if o != nil && !IsNil(o.MongodbUsername) {
		return true
	}

	return false
}

// SetMongodbUsername gets a reference to the given string and assigns it to the MongodbUsername field.
func (o *TargetTypeDetailsInput) SetMongodbUsername(v string) {
	o.MongodbUsername = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *TargetTypeDetailsInput) SetPassword(v string) {
	o.Password = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *TargetTypeDetailsInput) SetPayload(v string) {
	o.Payload = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *TargetTypeDetailsInput) SetPhone(v string) {
	o.Phone = &v
}

// GetPingUrl returns the PingUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPingUrl() string {
	if o == nil || IsNil(o.PingUrl) {
		var ret string
		return ret
	}
	return *o.PingUrl
}

// GetPingUrlOk returns a tuple with the PingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPingUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PingUrl) {
		return nil, false
	}
	return o.PingUrl, true
}

// HasPingUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPingUrl() bool {
	if o != nil && !IsNil(o.PingUrl) {
		return true
	}

	return false
}

// SetPingUrl gets a reference to the given string and assigns it to the PingUrl field.
func (o *TargetTypeDetailsInput) SetPingUrl(v string) {
	o.PingUrl = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *TargetTypeDetailsInput) SetPort(v string) {
	o.Port = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey) {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKey) {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPrivateKey() bool {
	if o != nil && !IsNil(o.PrivateKey) {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *TargetTypeDetailsInput) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetPrivateKeyPassword returns the PrivateKeyPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPrivateKeyPassword() string {
	if o == nil || IsNil(o.PrivateKeyPassword) {
		var ret string
		return ret
	}
	return *o.PrivateKeyPassword
}

// GetPrivateKeyPasswordOk returns a tuple with the PrivateKeyPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPrivateKeyPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKeyPassword) {
		return nil, false
	}
	return o.PrivateKeyPassword, true
}

// HasPrivateKeyPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPrivateKeyPassword() bool {
	if o != nil && !IsNil(o.PrivateKeyPassword) {
		return true
	}

	return false
}

// SetPrivateKeyPassword gets a reference to the given string and assigns it to the PrivateKeyPassword field.
func (o *TargetTypeDetailsInput) SetPrivateKeyPassword(v string) {
	o.PrivateKeyPassword = &v
}

// GetPrivilegedUser returns the PrivilegedUser field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetPrivilegedUser() string {
	if o == nil || IsNil(o.PrivilegedUser) {
		var ret string
		return ret
	}
	return *o.PrivilegedUser
}

// GetPrivilegedUserOk returns a tuple with the PrivilegedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetPrivilegedUserOk() (*string, bool) {
	if o == nil || IsNil(o.PrivilegedUser) {
		return nil, false
	}
	return o.PrivilegedUser, true
}

// HasPrivilegedUser returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasPrivilegedUser() bool {
	if o != nil && !IsNil(o.PrivilegedUser) {
		return true
	}

	return false
}

// SetPrivilegedUser gets a reference to the given string and assigns it to the PrivilegedUser field.
func (o *TargetTypeDetailsInput) SetPrivilegedUser(v string) {
	o.PrivilegedUser = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetProfileId() string {
	if o == nil || IsNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *TargetTypeDetailsInput) SetProfileId(v string) {
	o.ProfileId = &v
}

// GetRabbitmqServerPassword returns the RabbitmqServerPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetRabbitmqServerPassword() string {
	if o == nil || IsNil(o.RabbitmqServerPassword) {
		var ret string
		return ret
	}
	return *o.RabbitmqServerPassword
}

// GetRabbitmqServerPasswordOk returns a tuple with the RabbitmqServerPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetRabbitmqServerPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.RabbitmqServerPassword) {
		return nil, false
	}
	return o.RabbitmqServerPassword, true
}

// HasRabbitmqServerPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasRabbitmqServerPassword() bool {
	if o != nil && !IsNil(o.RabbitmqServerPassword) {
		return true
	}

	return false
}

// SetRabbitmqServerPassword gets a reference to the given string and assigns it to the RabbitmqServerPassword field.
func (o *TargetTypeDetailsInput) SetRabbitmqServerPassword(v string) {
	o.RabbitmqServerPassword = &v
}

// GetRabbitmqServerUri returns the RabbitmqServerUri field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetRabbitmqServerUri() string {
	if o == nil || IsNil(o.RabbitmqServerUri) {
		var ret string
		return ret
	}
	return *o.RabbitmqServerUri
}

// GetRabbitmqServerUriOk returns a tuple with the RabbitmqServerUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetRabbitmqServerUriOk() (*string, bool) {
	if o == nil || IsNil(o.RabbitmqServerUri) {
		return nil, false
	}
	return o.RabbitmqServerUri, true
}

// HasRabbitmqServerUri returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasRabbitmqServerUri() bool {
	if o != nil && !IsNil(o.RabbitmqServerUri) {
		return true
	}

	return false
}

// SetRabbitmqServerUri gets a reference to the given string and assigns it to the RabbitmqServerUri field.
func (o *TargetTypeDetailsInput) SetRabbitmqServerUri(v string) {
	o.RabbitmqServerUri = &v
}

// GetRabbitmqServerUser returns the RabbitmqServerUser field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetRabbitmqServerUser() string {
	if o == nil || IsNil(o.RabbitmqServerUser) {
		var ret string
		return ret
	}
	return *o.RabbitmqServerUser
}

// GetRabbitmqServerUserOk returns a tuple with the RabbitmqServerUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetRabbitmqServerUserOk() (*string, bool) {
	if o == nil || IsNil(o.RabbitmqServerUser) {
		return nil, false
	}
	return o.RabbitmqServerUser, true
}

// HasRabbitmqServerUser returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasRabbitmqServerUser() bool {
	if o != nil && !IsNil(o.RabbitmqServerUser) {
		return true
	}

	return false
}

// SetRabbitmqServerUser gets a reference to the given string and assigns it to the RabbitmqServerUser field.
func (o *TargetTypeDetailsInput) SetRabbitmqServerUser(v string) {
	o.RabbitmqServerUser = &v
}

// GetSecurityToken returns the SecurityToken field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetSecurityToken() string {
	if o == nil || IsNil(o.SecurityToken) {
		var ret string
		return ret
	}
	return *o.SecurityToken
}

// GetSecurityTokenOk returns a tuple with the SecurityToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetSecurityTokenOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityToken) {
		return nil, false
	}
	return o.SecurityToken, true
}

// HasSecurityToken returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasSecurityToken() bool {
	if o != nil && !IsNil(o.SecurityToken) {
		return true
	}

	return false
}

// SetSecurityToken gets a reference to the given string and assigns it to the SecurityToken field.
func (o *TargetTypeDetailsInput) SetSecurityToken(v string) {
	o.SecurityToken = &v
}

// GetSfAccount returns the SfAccount field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetSfAccount() string {
	if o == nil || IsNil(o.SfAccount) {
		var ret string
		return ret
	}
	return *o.SfAccount
}

// GetSfAccountOk returns a tuple with the SfAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetSfAccountOk() (*string, bool) {
	if o == nil || IsNil(o.SfAccount) {
		return nil, false
	}
	return o.SfAccount, true
}

// HasSfAccount returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasSfAccount() bool {
	if o != nil && !IsNil(o.SfAccount) {
		return true
	}

	return false
}

// SetSfAccount gets a reference to the given string and assigns it to the SfAccount field.
func (o *TargetTypeDetailsInput) SetSfAccount(v string) {
	o.SfAccount = &v
}

// GetSslConnectionCertificate returns the SslConnectionCertificate field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetSslConnectionCertificate() string {
	if o == nil || IsNil(o.SslConnectionCertificate) {
		var ret string
		return ret
	}
	return *o.SslConnectionCertificate
}

// GetSslConnectionCertificateOk returns a tuple with the SslConnectionCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetSslConnectionCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.SslConnectionCertificate) {
		return nil, false
	}
	return o.SslConnectionCertificate, true
}

// HasSslConnectionCertificate returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasSslConnectionCertificate() bool {
	if o != nil && !IsNil(o.SslConnectionCertificate) {
		return true
	}

	return false
}

// SetSslConnectionCertificate gets a reference to the given string and assigns it to the SslConnectionCertificate field.
func (o *TargetTypeDetailsInput) SetSslConnectionCertificate(v string) {
	o.SslConnectionCertificate = &v
}

// GetSslConnectionMode returns the SslConnectionMode field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetSslConnectionMode() bool {
	if o == nil || IsNil(o.SslConnectionMode) {
		var ret bool
		return ret
	}
	return *o.SslConnectionMode
}

// GetSslConnectionModeOk returns a tuple with the SslConnectionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetSslConnectionModeOk() (*bool, bool) {
	if o == nil || IsNil(o.SslConnectionMode) {
		return nil, false
	}
	return o.SslConnectionMode, true
}

// HasSslConnectionMode returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasSslConnectionMode() bool {
	if o != nil && !IsNil(o.SslConnectionMode) {
		return true
	}

	return false
}

// SetSslConnectionMode gets a reference to the given bool and assigns it to the SslConnectionMode field.
func (o *TargetTypeDetailsInput) SetSslConnectionMode(v bool) {
	o.SslConnectionMode = &v
}

// GetTenantUrl returns the TenantUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetTenantUrl() string {
	if o == nil || IsNil(o.TenantUrl) {
		var ret string
		return ret
	}
	return *o.TenantUrl
}

// GetTenantUrlOk returns a tuple with the TenantUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetTenantUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TenantUrl) {
		return nil, false
	}
	return o.TenantUrl, true
}

// HasTenantUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasTenantUrl() bool {
	if o != nil && !IsNil(o.TenantUrl) {
		return true
	}

	return false
}

// SetTenantUrl gets a reference to the given string and assigns it to the TenantUrl field.
func (o *TargetTypeDetailsInput) SetTenantUrl(v string) {
	o.TenantUrl = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetTimeout() int64 {
	if o == nil || IsNil(o.Timeout) {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *TargetTypeDetailsInput) SetTimeout(v int64) {
	o.Timeout = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TargetTypeDetailsInput) SetUrl(v string) {
	o.Url = &v
}

// GetUseGwCloudIdentity returns the UseGwCloudIdentity field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetUseGwCloudIdentity() bool {
	if o == nil || IsNil(o.UseGwCloudIdentity) {
		var ret bool
		return ret
	}
	return *o.UseGwCloudIdentity
}

// GetUseGwCloudIdentityOk returns a tuple with the UseGwCloudIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetUseGwCloudIdentityOk() (*bool, bool) {
	if o == nil || IsNil(o.UseGwCloudIdentity) {
		return nil, false
	}
	return o.UseGwCloudIdentity, true
}

// HasUseGwCloudIdentity returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasUseGwCloudIdentity() bool {
	if o != nil && !IsNil(o.UseGwCloudIdentity) {
		return true
	}

	return false
}

// SetUseGwCloudIdentity gets a reference to the given bool and assigns it to the UseGwCloudIdentity field.
func (o *TargetTypeDetailsInput) SetUseGwCloudIdentity(v bool) {
	o.UseGwCloudIdentity = &v
}

// GetUseGwServiceAccount returns the UseGwServiceAccount field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetUseGwServiceAccount() bool {
	if o == nil || IsNil(o.UseGwServiceAccount) {
		var ret bool
		return ret
	}
	return *o.UseGwServiceAccount
}

// GetUseGwServiceAccountOk returns a tuple with the UseGwServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetUseGwServiceAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.UseGwServiceAccount) {
		return nil, false
	}
	return o.UseGwServiceAccount, true
}

// HasUseGwServiceAccount returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasUseGwServiceAccount() bool {
	if o != nil && !IsNil(o.UseGwServiceAccount) {
		return true
	}

	return false
}

// SetUseGwServiceAccount gets a reference to the given bool and assigns it to the UseGwServiceAccount field.
func (o *TargetTypeDetailsInput) SetUseGwServiceAccount(v bool) {
	o.UseGwServiceAccount = &v
}

// GetUseTls returns the UseTls field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetUseTls() bool {
	if o == nil || IsNil(o.UseTls) {
		var ret bool
		return ret
	}
	return *o.UseTls
}

// GetUseTlsOk returns a tuple with the UseTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetUseTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTls) {
		return nil, false
	}
	return o.UseTls, true
}

// HasUseTls returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasUseTls() bool {
	if o != nil && !IsNil(o.UseTls) {
		return true
	}

	return false
}

// SetUseTls gets a reference to the given bool and assigns it to the UseTls field.
func (o *TargetTypeDetailsInput) SetUseTls(v bool) {
	o.UseTls = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *TargetTypeDetailsInput) SetUserName(v string) {
	o.UserName = &v
}

// GetUserPassword returns the UserPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetUserPassword() string {
	if o == nil || IsNil(o.UserPassword) {
		var ret string
		return ret
	}
	return *o.UserPassword
}

// GetUserPasswordOk returns a tuple with the UserPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetUserPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.UserPassword) {
		return nil, false
	}
	return o.UserPassword, true
}

// HasUserPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasUserPassword() bool {
	if o != nil && !IsNil(o.UserPassword) {
		return true
	}

	return false
}

// SetUserPassword gets a reference to the given string and assigns it to the UserPassword field.
func (o *TargetTypeDetailsInput) SetUserPassword(v string) {
	o.UserPassword = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *TargetTypeDetailsInput) SetUsername(v string) {
	o.Username = &v
}

// GetValidationEmail returns the ValidationEmail field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetValidationEmail() string {
	if o == nil || IsNil(o.ValidationEmail) {
		var ret string
		return ret
	}
	return *o.ValidationEmail
}

// GetValidationEmailOk returns a tuple with the ValidationEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetValidationEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationEmail) {
		return nil, false
	}
	return o.ValidationEmail, true
}

// HasValidationEmail returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasValidationEmail() bool {
	if o != nil && !IsNil(o.ValidationEmail) {
		return true
	}

	return false
}

// SetValidationEmail gets a reference to the given string and assigns it to the ValidationEmail field.
func (o *TargetTypeDetailsInput) SetValidationEmail(v string) {
	o.ValidationEmail = &v
}

// GetVenafiApiKey returns the VenafiApiKey field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiApiKey() string {
	if o == nil || IsNil(o.VenafiApiKey) {
		var ret string
		return ret
	}
	return *o.VenafiApiKey
}

// GetVenafiApiKeyOk returns a tuple with the VenafiApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiApiKey) {
		return nil, false
	}
	return o.VenafiApiKey, true
}

// HasVenafiApiKey returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiApiKey() bool {
	if o != nil && !IsNil(o.VenafiApiKey) {
		return true
	}

	return false
}

// SetVenafiApiKey gets a reference to the given string and assigns it to the VenafiApiKey field.
func (o *TargetTypeDetailsInput) SetVenafiApiKey(v string) {
	o.VenafiApiKey = &v
}

// GetVenafiBaseUrl returns the VenafiBaseUrl field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiBaseUrl() string {
	if o == nil || IsNil(o.VenafiBaseUrl) {
		var ret string
		return ret
	}
	return *o.VenafiBaseUrl
}

// GetVenafiBaseUrlOk returns a tuple with the VenafiBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiBaseUrl) {
		return nil, false
	}
	return o.VenafiBaseUrl, true
}

// HasVenafiBaseUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiBaseUrl() bool {
	if o != nil && !IsNil(o.VenafiBaseUrl) {
		return true
	}

	return false
}

// SetVenafiBaseUrl gets a reference to the given string and assigns it to the VenafiBaseUrl field.
func (o *TargetTypeDetailsInput) SetVenafiBaseUrl(v string) {
	o.VenafiBaseUrl = &v
}

// GetVenafiTppAccessToken returns the VenafiTppAccessToken field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiTppAccessToken() string {
	if o == nil || IsNil(o.VenafiTppAccessToken) {
		var ret string
		return ret
	}
	return *o.VenafiTppAccessToken
}

// GetVenafiTppAccessTokenOk returns a tuple with the VenafiTppAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiTppAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiTppAccessToken) {
		return nil, false
	}
	return o.VenafiTppAccessToken, true
}

// HasVenafiTppAccessToken returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiTppAccessToken() bool {
	if o != nil && !IsNil(o.VenafiTppAccessToken) {
		return true
	}

	return false
}

// SetVenafiTppAccessToken gets a reference to the given string and assigns it to the VenafiTppAccessToken field.
func (o *TargetTypeDetailsInput) SetVenafiTppAccessToken(v string) {
	o.VenafiTppAccessToken = &v
}

// GetVenafiTppClientId returns the VenafiTppClientId field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiTppClientId() string {
	if o == nil || IsNil(o.VenafiTppClientId) {
		var ret string
		return ret
	}
	return *o.VenafiTppClientId
}

// GetVenafiTppClientIdOk returns a tuple with the VenafiTppClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiTppClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiTppClientId) {
		return nil, false
	}
	return o.VenafiTppClientId, true
}

// HasVenafiTppClientId returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiTppClientId() bool {
	if o != nil && !IsNil(o.VenafiTppClientId) {
		return true
	}

	return false
}

// SetVenafiTppClientId gets a reference to the given string and assigns it to the VenafiTppClientId field.
func (o *TargetTypeDetailsInput) SetVenafiTppClientId(v string) {
	o.VenafiTppClientId = &v
}

// GetVenafiTppPassword returns the VenafiTppPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiTppPassword() string {
	if o == nil || IsNil(o.VenafiTppPassword) {
		var ret string
		return ret
	}
	return *o.VenafiTppPassword
}

// GetVenafiTppPasswordOk returns a tuple with the VenafiTppPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiTppPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiTppPassword) {
		return nil, false
	}
	return o.VenafiTppPassword, true
}

// HasVenafiTppPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiTppPassword() bool {
	if o != nil && !IsNil(o.VenafiTppPassword) {
		return true
	}

	return false
}

// SetVenafiTppPassword gets a reference to the given string and assigns it to the VenafiTppPassword field.
func (o *TargetTypeDetailsInput) SetVenafiTppPassword(v string) {
	o.VenafiTppPassword = &v
}

// GetVenafiTppRefreshToken returns the VenafiTppRefreshToken field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiTppRefreshToken() string {
	if o == nil || IsNil(o.VenafiTppRefreshToken) {
		var ret string
		return ret
	}
	return *o.VenafiTppRefreshToken
}

// GetVenafiTppRefreshTokenOk returns a tuple with the VenafiTppRefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiTppRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiTppRefreshToken) {
		return nil, false
	}
	return o.VenafiTppRefreshToken, true
}

// HasVenafiTppRefreshToken returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiTppRefreshToken() bool {
	if o != nil && !IsNil(o.VenafiTppRefreshToken) {
		return true
	}

	return false
}

// SetVenafiTppRefreshToken gets a reference to the given string and assigns it to the VenafiTppRefreshToken field.
func (o *TargetTypeDetailsInput) SetVenafiTppRefreshToken(v string) {
	o.VenafiTppRefreshToken = &v
}

// GetVenafiTppUsername returns the VenafiTppUsername field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiTppUsername() string {
	if o == nil || IsNil(o.VenafiTppUsername) {
		var ret string
		return ret
	}
	return *o.VenafiTppUsername
}

// GetVenafiTppUsernameOk returns a tuple with the VenafiTppUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiTppUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiTppUsername) {
		return nil, false
	}
	return o.VenafiTppUsername, true
}

// HasVenafiTppUsername returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiTppUsername() bool {
	if o != nil && !IsNil(o.VenafiTppUsername) {
		return true
	}

	return false
}

// SetVenafiTppUsername gets a reference to the given string and assigns it to the VenafiTppUsername field.
func (o *TargetTypeDetailsInput) SetVenafiTppUsername(v string) {
	o.VenafiTppUsername = &v
}

// GetVenafiUseTpp returns the VenafiUseTpp field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiUseTpp() bool {
	if o == nil || IsNil(o.VenafiUseTpp) {
		var ret bool
		return ret
	}
	return *o.VenafiUseTpp
}

// GetVenafiUseTppOk returns a tuple with the VenafiUseTpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiUseTppOk() (*bool, bool) {
	if o == nil || IsNil(o.VenafiUseTpp) {
		return nil, false
	}
	return o.VenafiUseTpp, true
}

// HasVenafiUseTpp returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiUseTpp() bool {
	if o != nil && !IsNil(o.VenafiUseTpp) {
		return true
	}

	return false
}

// SetVenafiUseTpp gets a reference to the given bool and assigns it to the VenafiUseTpp field.
func (o *TargetTypeDetailsInput) SetVenafiUseTpp(v bool) {
	o.VenafiUseTpp = &v
}

// GetVenafiZone returns the VenafiZone field value if set, zero value otherwise.
func (o *TargetTypeDetailsInput) GetVenafiZone() string {
	if o == nil || IsNil(o.VenafiZone) {
		var ret string
		return ret
	}
	return *o.VenafiZone
}

// GetVenafiZoneOk returns a tuple with the VenafiZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailsInput) GetVenafiZoneOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiZone) {
		return nil, false
	}
	return o.VenafiZone, true
}

// HasVenafiZone returns a boolean if a field has been set.
func (o *TargetTypeDetailsInput) HasVenafiZone() bool {
	if o != nil && !IsNil(o.VenafiZone) {
		return true
	}

	return false
}

// SetVenafiZone gets a reference to the given string and assigns it to the VenafiZone field.
func (o *TargetTypeDetailsInput) SetVenafiZone(v string) {
	o.VenafiZone = &v
}

func (o TargetTypeDetailsInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetTypeDetailsInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdministrativePort) {
		toSerialize["administrative_port"] = o.AdministrativePort
	}
	if !IsNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	if !IsNil(o.AppPrivateKey) {
		toSerialize["app_private_key"] = o.AppPrivateKey
	}
	if !IsNil(o.ArtifactoryAdminApikey) {
		toSerialize["artifactory_admin_apikey"] = o.ArtifactoryAdminApikey
	}
	if !IsNil(o.ArtifactoryAdminUsername) {
		toSerialize["artifactory_admin_username"] = o.ArtifactoryAdminUsername
	}
	if !IsNil(o.ArtifactoryBaseUrl) {
		toSerialize["artifactory_base_url"] = o.ArtifactoryBaseUrl
	}
	if !IsNil(o.AuthFlow) {
		toSerialize["auth_flow"] = o.AuthFlow
	}
	if !IsNil(o.AuthorizationPort) {
		toSerialize["authorization_port"] = o.AuthorizationPort
	}
	if !IsNil(o.AwsAccessKeyId) {
		toSerialize["aws_access_key_id"] = o.AwsAccessKeyId
	}
	if !IsNil(o.AwsRegion) {
		toSerialize["aws_region"] = o.AwsRegion
	}
	if !IsNil(o.AwsSecretAccessKey) {
		toSerialize["aws_secret_access_key"] = o.AwsSecretAccessKey
	}
	if !IsNil(o.AwsSessionToken) {
		toSerialize["aws_session_token"] = o.AwsSessionToken
	}
	if !IsNil(o.AzureClientId) {
		toSerialize["azure_client_id"] = o.AzureClientId
	}
	if !IsNil(o.AzureClientSecret) {
		toSerialize["azure_client_secret"] = o.AzureClientSecret
	}
	if !IsNil(o.AzureResourceGroupName) {
		toSerialize["azure_resource_group_name"] = o.AzureResourceGroupName
	}
	if !IsNil(o.AzureResourceName) {
		toSerialize["azure_resource_name"] = o.AzureResourceName
	}
	if !IsNil(o.AzureSubscriptionId) {
		toSerialize["azure_subscription_id"] = o.AzureSubscriptionId
	}
	if !IsNil(o.AzureTenantId) {
		toSerialize["azure_tenant_id"] = o.AzureTenantId
	}
	if !IsNil(o.CaCertData) {
		toSerialize["ca_cert_data"] = o.CaCertData
	}
	if !IsNil(o.CaCertName) {
		toSerialize["ca_cert_name"] = o.CaCertName
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.ChefServerHostName) {
		toSerialize["chef_server_host_name"] = o.ChefServerHostName
	}
	if !IsNil(o.ChefServerKey) {
		toSerialize["chef_server_key"] = o.ChefServerKey
	}
	if !IsNil(o.ChefServerPort) {
		toSerialize["chef_server_port"] = o.ChefServerPort
	}
	if !IsNil(o.ChefServerUrl) {
		toSerialize["chef_server_url"] = o.ChefServerUrl
	}
	if !IsNil(o.ChefServerUsername) {
		toSerialize["chef_server_username"] = o.ChefServerUsername
	}
	if !IsNil(o.ChefSkipSsl) {
		toSerialize["chef_skip_ssl"] = o.ChefSkipSsl
	}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if !IsNil(o.DbHostName) {
		toSerialize["db_host_name"] = o.DbHostName
	}
	if !IsNil(o.DbName) {
		toSerialize["db_name"] = o.DbName
	}
	if !IsNil(o.DbPort) {
		toSerialize["db_port"] = o.DbPort
	}
	if !IsNil(o.DbPrivateKey) {
		toSerialize["db_private_key"] = o.DbPrivateKey
	}
	if !IsNil(o.DbPrivateKeyPassphrase) {
		toSerialize["db_private_key_passphrase"] = o.DbPrivateKeyPassphrase
	}
	if !IsNil(o.DbPwd) {
		toSerialize["db_pwd"] = o.DbPwd
	}
	if !IsNil(o.DbServerCertificates) {
		toSerialize["db_server_certificates"] = o.DbServerCertificates
	}
	if !IsNil(o.DbServerName) {
		toSerialize["db_server_name"] = o.DbServerName
	}
	if !IsNil(o.DbUserName) {
		toSerialize["db_user_name"] = o.DbUserName
	}
	if !IsNil(o.DomainName) {
		toSerialize["domain_name"] = o.DomainName
	}
	if !IsNil(o.EksAccessKeyId) {
		toSerialize["eks_access_key_id"] = o.EksAccessKeyId
	}
	if !IsNil(o.EksClusterCaCertificate) {
		toSerialize["eks_cluster_ca_certificate"] = o.EksClusterCaCertificate
	}
	if !IsNil(o.EksClusterEndpoint) {
		toSerialize["eks_cluster_endpoint"] = o.EksClusterEndpoint
	}
	if !IsNil(o.EksClusterName) {
		toSerialize["eks_cluster_name"] = o.EksClusterName
	}
	if !IsNil(o.EksRegion) {
		toSerialize["eks_region"] = o.EksRegion
	}
	if !IsNil(o.EksSecretAccessKey) {
		toSerialize["eks_secret_access_key"] = o.EksSecretAccessKey
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.GcpServiceAccountEmail) {
		toSerialize["gcp_service_account_email"] = o.GcpServiceAccountEmail
	}
	if !IsNil(o.GcpServiceAccountKey) {
		toSerialize["gcp_service_account_key"] = o.GcpServiceAccountKey
	}
	if !IsNil(o.GcpServiceAccountKeyBase64) {
		toSerialize["gcp_service_account_key_base64"] = o.GcpServiceAccountKeyBase64
	}
	if !IsNil(o.GithubAppId) {
		toSerialize["github_app_id"] = o.GithubAppId
	}
	if !IsNil(o.GithubAppPrivateKey) {
		toSerialize["github_app_private_key"] = o.GithubAppPrivateKey
	}
	if !IsNil(o.GithubBaseUrl) {
		toSerialize["github_base_url"] = o.GithubBaseUrl
	}
	if !IsNil(o.GkeClusterCaCertificate) {
		toSerialize["gke_cluster_ca_certificate"] = o.GkeClusterCaCertificate
	}
	if !IsNil(o.GkeClusterEndpoint) {
		toSerialize["gke_cluster_endpoint"] = o.GkeClusterEndpoint
	}
	if !IsNil(o.GkeClusterName) {
		toSerialize["gke_cluster_name"] = o.GkeClusterName
	}
	if !IsNil(o.GkeServiceAccountKey) {
		toSerialize["gke_service_account_key"] = o.GkeServiceAccountKey
	}
	if !IsNil(o.GkeServiceAccountName) {
		toSerialize["gke_service_account_name"] = o.GkeServiceAccountName
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Hosts) {
		toSerialize["hosts"] = o.Hosts
	}
	if !IsNil(o.ImapFqdn) {
		toSerialize["imap_fqdn"] = o.ImapFqdn
	}
	if !IsNil(o.ImapPassword) {
		toSerialize["imap_password"] = o.ImapPassword
	}
	if !IsNil(o.ImapPort) {
		toSerialize["imap_port"] = o.ImapPort
	}
	if !IsNil(o.ImapUser) {
		toSerialize["imap_user"] = o.ImapUser
	}
	if !IsNil(o.ImplementationType) {
		toSerialize["implementation_type"] = o.ImplementationType
	}
	if !IsNil(o.K8sBearerToken) {
		toSerialize["k8s_bearer_token"] = o.K8sBearerToken
	}
	if !IsNil(o.K8sClusterCaCertificate) {
		toSerialize["k8s_cluster_ca_certificate"] = o.K8sClusterCaCertificate
	}
	if !IsNil(o.K8sClusterEndpoint) {
		toSerialize["k8s_cluster_endpoint"] = o.K8sClusterEndpoint
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.LdapAudience) {
		toSerialize["ldap_audience"] = o.LdapAudience
	}
	if !IsNil(o.LdapBindDn) {
		toSerialize["ldap_bind_dn"] = o.LdapBindDn
	}
	if !IsNil(o.LdapBindPassword) {
		toSerialize["ldap_bind_password"] = o.LdapBindPassword
	}
	if !IsNil(o.LdapCertificate) {
		toSerialize["ldap_certificate"] = o.LdapCertificate
	}
	if !IsNil(o.LdapTokenExpiration) {
		toSerialize["ldap_token_expiration"] = o.LdapTokenExpiration
	}
	if !IsNil(o.LdapUrl) {
		toSerialize["ldap_url"] = o.LdapUrl
	}
	if !IsNil(o.MongodbAtlasApiPrivateKey) {
		toSerialize["mongodb_atlas_api_private_key"] = o.MongodbAtlasApiPrivateKey
	}
	if !IsNil(o.MongodbAtlasApiPublicKey) {
		toSerialize["mongodb_atlas_api_public_key"] = o.MongodbAtlasApiPublicKey
	}
	if !IsNil(o.MongodbAtlasProjectId) {
		toSerialize["mongodb_atlas_project_id"] = o.MongodbAtlasProjectId
	}
	if !IsNil(o.MongodbDbName) {
		toSerialize["mongodb_db_name"] = o.MongodbDbName
	}
	if !IsNil(o.MongodbDefaultAuthDb) {
		toSerialize["mongodb_default_auth_db"] = o.MongodbDefaultAuthDb
	}
	if !IsNil(o.MongodbHostPort) {
		toSerialize["mongodb_host_port"] = o.MongodbHostPort
	}
	if !IsNil(o.MongodbIsAtlas) {
		toSerialize["mongodb_is_atlas"] = o.MongodbIsAtlas
	}
	if !IsNil(o.MongodbPassword) {
		toSerialize["mongodb_password"] = o.MongodbPassword
	}
	if !IsNil(o.MongodbUriConnection) {
		toSerialize["mongodb_uri_connection"] = o.MongodbUriConnection
	}
	if !IsNil(o.MongodbUriOptions) {
		toSerialize["mongodb_uri_options"] = o.MongodbUriOptions
	}
	if !IsNil(o.MongodbUsername) {
		toSerialize["mongodb_username"] = o.MongodbUsername
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.PingUrl) {
		toSerialize["ping_url"] = o.PingUrl
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.PrivateKey) {
		toSerialize["private_key"] = o.PrivateKey
	}
	if !IsNil(o.PrivateKeyPassword) {
		toSerialize["private_key_password"] = o.PrivateKeyPassword
	}
	if !IsNil(o.PrivilegedUser) {
		toSerialize["privileged_user"] = o.PrivilegedUser
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profile_id"] = o.ProfileId
	}
	if !IsNil(o.RabbitmqServerPassword) {
		toSerialize["rabbitmq_server_password"] = o.RabbitmqServerPassword
	}
	if !IsNil(o.RabbitmqServerUri) {
		toSerialize["rabbitmq_server_uri"] = o.RabbitmqServerUri
	}
	if !IsNil(o.RabbitmqServerUser) {
		toSerialize["rabbitmq_server_user"] = o.RabbitmqServerUser
	}
	if !IsNil(o.SecurityToken) {
		toSerialize["security_token"] = o.SecurityToken
	}
	if !IsNil(o.SfAccount) {
		toSerialize["sf_account"] = o.SfAccount
	}
	if !IsNil(o.SslConnectionCertificate) {
		toSerialize["ssl_connection_certificate"] = o.SslConnectionCertificate
	}
	if !IsNil(o.SslConnectionMode) {
		toSerialize["ssl_connection_mode"] = o.SslConnectionMode
	}
	if !IsNil(o.TenantUrl) {
		toSerialize["tenant_url"] = o.TenantUrl
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.UseGwCloudIdentity) {
		toSerialize["use_gw_cloud_identity"] = o.UseGwCloudIdentity
	}
	if !IsNil(o.UseGwServiceAccount) {
		toSerialize["use_gw_service_account"] = o.UseGwServiceAccount
	}
	if !IsNil(o.UseTls) {
		toSerialize["use_tls"] = o.UseTls
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	if !IsNil(o.UserPassword) {
		toSerialize["user_password"] = o.UserPassword
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.ValidationEmail) {
		toSerialize["validation_email"] = o.ValidationEmail
	}
	if !IsNil(o.VenafiApiKey) {
		toSerialize["venafi_api_key"] = o.VenafiApiKey
	}
	if !IsNil(o.VenafiBaseUrl) {
		toSerialize["venafi_base_url"] = o.VenafiBaseUrl
	}
	if !IsNil(o.VenafiTppAccessToken) {
		toSerialize["venafi_tpp_access_token"] = o.VenafiTppAccessToken
	}
	if !IsNil(o.VenafiTppClientId) {
		toSerialize["venafi_tpp_client_id"] = o.VenafiTppClientId
	}
	if !IsNil(o.VenafiTppPassword) {
		toSerialize["venafi_tpp_password"] = o.VenafiTppPassword
	}
	if !IsNil(o.VenafiTppRefreshToken) {
		toSerialize["venafi_tpp_refresh_token"] = o.VenafiTppRefreshToken
	}
	if !IsNil(o.VenafiTppUsername) {
		toSerialize["venafi_tpp_username"] = o.VenafiTppUsername
	}
	if !IsNil(o.VenafiUseTpp) {
		toSerialize["venafi_use_tpp"] = o.VenafiUseTpp
	}
	if !IsNil(o.VenafiZone) {
		toSerialize["venafi_zone"] = o.VenafiZone
	}
	return toSerialize, nil
}

type NullableTargetTypeDetailsInput struct {
	value *TargetTypeDetailsInput
	isSet bool
}

func (v NullableTargetTypeDetailsInput) Get() *TargetTypeDetailsInput {
	return v.value
}

func (v *NullableTargetTypeDetailsInput) Set(val *TargetTypeDetailsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetTypeDetailsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetTypeDetailsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetTypeDetailsInput(val *TargetTypeDetailsInput) *NullableTargetTypeDetailsInput {
	return &NullableTargetTypeDetailsInput{value: val, isSet: true}
}

func (v NullableTargetTypeDetailsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetTypeDetailsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


