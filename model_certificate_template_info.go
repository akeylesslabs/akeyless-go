/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// CertificateTemplateInfo struct for CertificateTemplateInfo
type CertificateTemplateInfo struct {
	CommonName *string `json:"common_name,omitempty"`
	Country *string `json:"country,omitempty"`
	CsrCnfBase64 *string `json:"csr_cnf_base_64,omitempty"`
	DigestAlgo *string `json:"digest_algo,omitempty"`
	Locality *string `json:"locality,omitempty"`
	Organization *string `json:"organization,omitempty"`
	Province *string `json:"province,omitempty"`
	SelfSignedEnabled *bool `json:"self_signed_enabled,omitempty"`
	Ttl *int64 `json:"ttl,omitempty"`
}

// NewCertificateTemplateInfo instantiates a new CertificateTemplateInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateTemplateInfo() *CertificateTemplateInfo {
	this := CertificateTemplateInfo{}
	return &this
}

// NewCertificateTemplateInfoWithDefaults instantiates a new CertificateTemplateInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateTemplateInfoWithDefaults() *CertificateTemplateInfo {
	this := CertificateTemplateInfo{}
	return &this
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *CertificateTemplateInfo) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateTemplateInfo) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *CertificateTemplateInfo) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *CertificateTemplateInfo) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CertificateTemplateInfo) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateTemplateInfo) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CertificateTemplateInfo) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CertificateTemplateInfo) SetCountry(v string) {
	o.Country = &v
}

// GetCsrCnfBase64 returns the CsrCnfBase64 field value if set, zero value otherwise.
func (o *CertificateTemplateInfo) GetCsrCnfBase64() string {
	if o == nil || o.CsrCnfBase64 == nil {
		var ret string
		return ret
	}
	return *o.CsrCnfBase64
}

// GetCsrCnfBase64Ok returns a tuple with the CsrCnfBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateTemplateInfo) GetCsrCnfBase64Ok() (*string, bool) {
	if o == nil || o.CsrCnfBase64 == nil {
		return nil, false
	}
	return o.CsrCnfBase64, true
}

// HasCsrCnfBase64 returns a boolean if a field has been set.
func (o *CertificateTemplateInfo) HasCsrCnfBase64() bool {
	if o != nil && o.CsrCnfBase64 != nil {
		return true
	}

	return false
}

// SetCsrCnfBase64 gets a reference to the given string and assigns it to the CsrCnfBase64 field.
func (o *CertificateTemplateInfo) SetCsrCnfBase64(v string) {
	o.CsrCnfBase64 = &v
}

// GetDigestAlgo returns the DigestAlgo field value if set, zero value otherwise.
func (o *CertificateTemplateInfo) GetDigestAlgo() string {
	if o == nil || o.DigestAlgo == nil {
		var ret string
		return ret
	}
	return *o.DigestAlgo
}

// GetDigestAlgoOk returns a tuple with the DigestAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateTemplateInfo) GetDigestAlgoOk() (*string, bool) {
	if o == nil || o.DigestAlgo == nil {
		return nil, false
	}
	return o.DigestAlgo, true
}

// HasDigestAlgo returns a boolean if a field has been set.
func (o *CertificateTemplateInfo) HasDigestAlgo() bool {
	if o != nil && o.DigestAlgo != nil {
		return true
	}

	return false
}

// SetDigestAlgo gets a reference to the given string and assigns it to the DigestAlgo field.
func (o *CertificateTemplateInfo) SetDigestAlgo(v string) {
	o.DigestAlgo = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *CertificateTemplateInfo) GetLocality() string {
	if o == nil || o.Locality == nil {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateTemplateInfo) GetLocalityOk() (*string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *CertificateTemplateInfo) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *CertificateTemplateInfo) SetLocality(v string) {
	o.Locality = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *CertificateTemplateInfo) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateTemplateInfo) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *CertificateTemplateInfo) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *CertificateTemplateInfo) SetOrganization(v string) {
	o.Organization = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *CertificateTemplateInfo) GetProvince() string {
	if o == nil || o.Province == nil {
		var ret string
		return ret
	}
	return *o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateTemplateInfo) GetProvinceOk() (*string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *CertificateTemplateInfo) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given string and assigns it to the Province field.
func (o *CertificateTemplateInfo) SetProvince(v string) {
	o.Province = &v
}

// GetSelfSignedEnabled returns the SelfSignedEnabled field value if set, zero value otherwise.
func (o *CertificateTemplateInfo) GetSelfSignedEnabled() bool {
	if o == nil || o.SelfSignedEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SelfSignedEnabled
}

// GetSelfSignedEnabledOk returns a tuple with the SelfSignedEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateTemplateInfo) GetSelfSignedEnabledOk() (*bool, bool) {
	if o == nil || o.SelfSignedEnabled == nil {
		return nil, false
	}
	return o.SelfSignedEnabled, true
}

// HasSelfSignedEnabled returns a boolean if a field has been set.
func (o *CertificateTemplateInfo) HasSelfSignedEnabled() bool {
	if o != nil && o.SelfSignedEnabled != nil {
		return true
	}

	return false
}

// SetSelfSignedEnabled gets a reference to the given bool and assigns it to the SelfSignedEnabled field.
func (o *CertificateTemplateInfo) SetSelfSignedEnabled(v bool) {
	o.SelfSignedEnabled = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *CertificateTemplateInfo) GetTtl() int64 {
	if o == nil || o.Ttl == nil {
		var ret int64
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateTemplateInfo) GetTtlOk() (*int64, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *CertificateTemplateInfo) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int64 and assigns it to the Ttl field.
func (o *CertificateTemplateInfo) SetTtl(v int64) {
	o.Ttl = &v
}

func (o CertificateTemplateInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.CsrCnfBase64 != nil {
		toSerialize["csr_cnf_base_64"] = o.CsrCnfBase64
	}
	if o.DigestAlgo != nil {
		toSerialize["digest_algo"] = o.DigestAlgo
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.SelfSignedEnabled != nil {
		toSerialize["self_signed_enabled"] = o.SelfSignedEnabled
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateTemplateInfo struct {
	value *CertificateTemplateInfo
	isSet bool
}

func (v NullableCertificateTemplateInfo) Get() *CertificateTemplateInfo {
	return v.value
}

func (v *NullableCertificateTemplateInfo) Set(val *CertificateTemplateInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateTemplateInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateTemplateInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateTemplateInfo(val *CertificateTemplateInfo) *NullableCertificateTemplateInfo {
	return &NullableCertificateTemplateInfo{value: val, isSet: true}
}

func (v NullableCertificateTemplateInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateTemplateInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


