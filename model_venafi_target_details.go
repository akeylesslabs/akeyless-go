/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// VenafiTargetDetails struct for VenafiTargetDetails
type VenafiTargetDetails struct {
	VenafiApiKey *string `json:"venafi_api_key,omitempty"`
	VenafiBaseUrl *string `json:"venafi_base_url,omitempty"`
	VenafiTppAccessToken *string `json:"venafi_tpp_access_token,omitempty"`
	VenafiTppClientId *string `json:"venafi_tpp_client_id,omitempty"`
	// Deprecated: VenafiAccessToken and VenafiRefreshToken should be used instead
	VenafiTppPassword *string `json:"venafi_tpp_password,omitempty"`
	VenafiTppRefreshToken *string `json:"venafi_tpp_refresh_token,omitempty"`
	// Deprecated: VenafiAccessToken and VenafiRefreshToken should be used instead
	VenafiTppUsername *string `json:"venafi_tpp_username,omitempty"`
	VenafiUseTpp *bool `json:"venafi_use_tpp,omitempty"`
	VenafiZone *string `json:"venafi_zone,omitempty"`
}

// NewVenafiTargetDetails instantiates a new VenafiTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVenafiTargetDetails() *VenafiTargetDetails {
	this := VenafiTargetDetails{}
	return &this
}

// NewVenafiTargetDetailsWithDefaults instantiates a new VenafiTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVenafiTargetDetailsWithDefaults() *VenafiTargetDetails {
	this := VenafiTargetDetails{}
	return &this
}

// GetVenafiApiKey returns the VenafiApiKey field value if set, zero value otherwise.
func (o *VenafiTargetDetails) GetVenafiApiKey() string {
	if o == nil || o.VenafiApiKey == nil {
		var ret string
		return ret
	}
	return *o.VenafiApiKey
}

// GetVenafiApiKeyOk returns a tuple with the VenafiApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VenafiTargetDetails) GetVenafiApiKeyOk() (*string, bool) {
	if o == nil || o.VenafiApiKey == nil {
		return nil, false
	}
	return o.VenafiApiKey, true
}

// HasVenafiApiKey returns a boolean if a field has been set.
func (o *VenafiTargetDetails) HasVenafiApiKey() bool {
	if o != nil && o.VenafiApiKey != nil {
		return true
	}

	return false
}

// SetVenafiApiKey gets a reference to the given string and assigns it to the VenafiApiKey field.
func (o *VenafiTargetDetails) SetVenafiApiKey(v string) {
	o.VenafiApiKey = &v
}

// GetVenafiBaseUrl returns the VenafiBaseUrl field value if set, zero value otherwise.
func (o *VenafiTargetDetails) GetVenafiBaseUrl() string {
	if o == nil || o.VenafiBaseUrl == nil {
		var ret string
		return ret
	}
	return *o.VenafiBaseUrl
}

// GetVenafiBaseUrlOk returns a tuple with the VenafiBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VenafiTargetDetails) GetVenafiBaseUrlOk() (*string, bool) {
	if o == nil || o.VenafiBaseUrl == nil {
		return nil, false
	}
	return o.VenafiBaseUrl, true
}

// HasVenafiBaseUrl returns a boolean if a field has been set.
func (o *VenafiTargetDetails) HasVenafiBaseUrl() bool {
	if o != nil && o.VenafiBaseUrl != nil {
		return true
	}

	return false
}

// SetVenafiBaseUrl gets a reference to the given string and assigns it to the VenafiBaseUrl field.
func (o *VenafiTargetDetails) SetVenafiBaseUrl(v string) {
	o.VenafiBaseUrl = &v
}

// GetVenafiTppAccessToken returns the VenafiTppAccessToken field value if set, zero value otherwise.
func (o *VenafiTargetDetails) GetVenafiTppAccessToken() string {
	if o == nil || o.VenafiTppAccessToken == nil {
		var ret string
		return ret
	}
	return *o.VenafiTppAccessToken
}

// GetVenafiTppAccessTokenOk returns a tuple with the VenafiTppAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VenafiTargetDetails) GetVenafiTppAccessTokenOk() (*string, bool) {
	if o == nil || o.VenafiTppAccessToken == nil {
		return nil, false
	}
	return o.VenafiTppAccessToken, true
}

// HasVenafiTppAccessToken returns a boolean if a field has been set.
func (o *VenafiTargetDetails) HasVenafiTppAccessToken() bool {
	if o != nil && o.VenafiTppAccessToken != nil {
		return true
	}

	return false
}

// SetVenafiTppAccessToken gets a reference to the given string and assigns it to the VenafiTppAccessToken field.
func (o *VenafiTargetDetails) SetVenafiTppAccessToken(v string) {
	o.VenafiTppAccessToken = &v
}

// GetVenafiTppClientId returns the VenafiTppClientId field value if set, zero value otherwise.
func (o *VenafiTargetDetails) GetVenafiTppClientId() string {
	if o == nil || o.VenafiTppClientId == nil {
		var ret string
		return ret
	}
	return *o.VenafiTppClientId
}

// GetVenafiTppClientIdOk returns a tuple with the VenafiTppClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VenafiTargetDetails) GetVenafiTppClientIdOk() (*string, bool) {
	if o == nil || o.VenafiTppClientId == nil {
		return nil, false
	}
	return o.VenafiTppClientId, true
}

// HasVenafiTppClientId returns a boolean if a field has been set.
func (o *VenafiTargetDetails) HasVenafiTppClientId() bool {
	if o != nil && o.VenafiTppClientId != nil {
		return true
	}

	return false
}

// SetVenafiTppClientId gets a reference to the given string and assigns it to the VenafiTppClientId field.
func (o *VenafiTargetDetails) SetVenafiTppClientId(v string) {
	o.VenafiTppClientId = &v
}

// GetVenafiTppPassword returns the VenafiTppPassword field value if set, zero value otherwise.
func (o *VenafiTargetDetails) GetVenafiTppPassword() string {
	if o == nil || o.VenafiTppPassword == nil {
		var ret string
		return ret
	}
	return *o.VenafiTppPassword
}

// GetVenafiTppPasswordOk returns a tuple with the VenafiTppPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VenafiTargetDetails) GetVenafiTppPasswordOk() (*string, bool) {
	if o == nil || o.VenafiTppPassword == nil {
		return nil, false
	}
	return o.VenafiTppPassword, true
}

// HasVenafiTppPassword returns a boolean if a field has been set.
func (o *VenafiTargetDetails) HasVenafiTppPassword() bool {
	if o != nil && o.VenafiTppPassword != nil {
		return true
	}

	return false
}

// SetVenafiTppPassword gets a reference to the given string and assigns it to the VenafiTppPassword field.
func (o *VenafiTargetDetails) SetVenafiTppPassword(v string) {
	o.VenafiTppPassword = &v
}

// GetVenafiTppRefreshToken returns the VenafiTppRefreshToken field value if set, zero value otherwise.
func (o *VenafiTargetDetails) GetVenafiTppRefreshToken() string {
	if o == nil || o.VenafiTppRefreshToken == nil {
		var ret string
		return ret
	}
	return *o.VenafiTppRefreshToken
}

// GetVenafiTppRefreshTokenOk returns a tuple with the VenafiTppRefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VenafiTargetDetails) GetVenafiTppRefreshTokenOk() (*string, bool) {
	if o == nil || o.VenafiTppRefreshToken == nil {
		return nil, false
	}
	return o.VenafiTppRefreshToken, true
}

// HasVenafiTppRefreshToken returns a boolean if a field has been set.
func (o *VenafiTargetDetails) HasVenafiTppRefreshToken() bool {
	if o != nil && o.VenafiTppRefreshToken != nil {
		return true
	}

	return false
}

// SetVenafiTppRefreshToken gets a reference to the given string and assigns it to the VenafiTppRefreshToken field.
func (o *VenafiTargetDetails) SetVenafiTppRefreshToken(v string) {
	o.VenafiTppRefreshToken = &v
}

// GetVenafiTppUsername returns the VenafiTppUsername field value if set, zero value otherwise.
func (o *VenafiTargetDetails) GetVenafiTppUsername() string {
	if o == nil || o.VenafiTppUsername == nil {
		var ret string
		return ret
	}
	return *o.VenafiTppUsername
}

// GetVenafiTppUsernameOk returns a tuple with the VenafiTppUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VenafiTargetDetails) GetVenafiTppUsernameOk() (*string, bool) {
	if o == nil || o.VenafiTppUsername == nil {
		return nil, false
	}
	return o.VenafiTppUsername, true
}

// HasVenafiTppUsername returns a boolean if a field has been set.
func (o *VenafiTargetDetails) HasVenafiTppUsername() bool {
	if o != nil && o.VenafiTppUsername != nil {
		return true
	}

	return false
}

// SetVenafiTppUsername gets a reference to the given string and assigns it to the VenafiTppUsername field.
func (o *VenafiTargetDetails) SetVenafiTppUsername(v string) {
	o.VenafiTppUsername = &v
}

// GetVenafiUseTpp returns the VenafiUseTpp field value if set, zero value otherwise.
func (o *VenafiTargetDetails) GetVenafiUseTpp() bool {
	if o == nil || o.VenafiUseTpp == nil {
		var ret bool
		return ret
	}
	return *o.VenafiUseTpp
}

// GetVenafiUseTppOk returns a tuple with the VenafiUseTpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VenafiTargetDetails) GetVenafiUseTppOk() (*bool, bool) {
	if o == nil || o.VenafiUseTpp == nil {
		return nil, false
	}
	return o.VenafiUseTpp, true
}

// HasVenafiUseTpp returns a boolean if a field has been set.
func (o *VenafiTargetDetails) HasVenafiUseTpp() bool {
	if o != nil && o.VenafiUseTpp != nil {
		return true
	}

	return false
}

// SetVenafiUseTpp gets a reference to the given bool and assigns it to the VenafiUseTpp field.
func (o *VenafiTargetDetails) SetVenafiUseTpp(v bool) {
	o.VenafiUseTpp = &v
}

// GetVenafiZone returns the VenafiZone field value if set, zero value otherwise.
func (o *VenafiTargetDetails) GetVenafiZone() string {
	if o == nil || o.VenafiZone == nil {
		var ret string
		return ret
	}
	return *o.VenafiZone
}

// GetVenafiZoneOk returns a tuple with the VenafiZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VenafiTargetDetails) GetVenafiZoneOk() (*string, bool) {
	if o == nil || o.VenafiZone == nil {
		return nil, false
	}
	return o.VenafiZone, true
}

// HasVenafiZone returns a boolean if a field has been set.
func (o *VenafiTargetDetails) HasVenafiZone() bool {
	if o != nil && o.VenafiZone != nil {
		return true
	}

	return false
}

// SetVenafiZone gets a reference to the given string and assigns it to the VenafiZone field.
func (o *VenafiTargetDetails) SetVenafiZone(v string) {
	o.VenafiZone = &v
}

func (o VenafiTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VenafiApiKey != nil {
		toSerialize["venafi_api_key"] = o.VenafiApiKey
	}
	if o.VenafiBaseUrl != nil {
		toSerialize["venafi_base_url"] = o.VenafiBaseUrl
	}
	if o.VenafiTppAccessToken != nil {
		toSerialize["venafi_tpp_access_token"] = o.VenafiTppAccessToken
	}
	if o.VenafiTppClientId != nil {
		toSerialize["venafi_tpp_client_id"] = o.VenafiTppClientId
	}
	if o.VenafiTppPassword != nil {
		toSerialize["venafi_tpp_password"] = o.VenafiTppPassword
	}
	if o.VenafiTppRefreshToken != nil {
		toSerialize["venafi_tpp_refresh_token"] = o.VenafiTppRefreshToken
	}
	if o.VenafiTppUsername != nil {
		toSerialize["venafi_tpp_username"] = o.VenafiTppUsername
	}
	if o.VenafiUseTpp != nil {
		toSerialize["venafi_use_tpp"] = o.VenafiUseTpp
	}
	if o.VenafiZone != nil {
		toSerialize["venafi_zone"] = o.VenafiZone
	}
	return json.Marshal(toSerialize)
}

type NullableVenafiTargetDetails struct {
	value *VenafiTargetDetails
	isSet bool
}

func (v NullableVenafiTargetDetails) Get() *VenafiTargetDetails {
	return v.value
}

func (v *NullableVenafiTargetDetails) Set(val *VenafiTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableVenafiTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableVenafiTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVenafiTargetDetails(val *VenafiTargetDetails) *NullableVenafiTargetDetails {
	return &NullableVenafiTargetDetails{value: val, isSet: true}
}

func (v NullableVenafiTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVenafiTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


