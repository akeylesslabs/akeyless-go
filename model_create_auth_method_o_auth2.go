/*
 * includes all operations supported by Akeyless.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// CreateAuthMethodOAuth2 createAuthMethodOAuth2 is a command that creates a new auth method that will be able to authenticate using OpenID/Oauth2.
type CreateAuthMethodOAuth2 struct {
	// Access expiration date in Unix timestamp (select 0 for access without expiry date)
	AccessExpires *int64 `json:"access-expires,omitempty"`
	// The audience in the JWT
	Audience *string `json:"audience,omitempty"`
	// The clients ids that the access is restricted to
	BoundClientIds *[]string `json:"bound-client-ids,omitempty"`
	// A CIDR whitelist of the IPs that the access is restricted to
	BoundIps *[]string `json:"bound-ips,omitempty"`
	// Issuer URL
	Issuer *string `json:"issuer,omitempty"`
	// The URL to the JSON Web Key Set (JWKS) that containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server.
	JwksUri string `json:"jwks-uri"`
	// Auth Method name
	Name string `json:"name"`
	// Authentication token (see `/auth` and `/configure`)
	Token *string `json:"token,omitempty"`
	// The universal identity token, Required only for universal_identity authentication
	UidToken *string `json:"uid-token,omitempty"`
}

// NewCreateAuthMethodOAuth2 instantiates a new CreateAuthMethodOAuth2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAuthMethodOAuth2(jwksUri string, name string, ) *CreateAuthMethodOAuth2 {
	this := CreateAuthMethodOAuth2{}
	var accessExpires int64 = 0
	this.AccessExpires = &accessExpires
	this.JwksUri = jwksUri
	this.Name = name
	return &this
}

// NewCreateAuthMethodOAuth2WithDefaults instantiates a new CreateAuthMethodOAuth2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAuthMethodOAuth2WithDefaults() *CreateAuthMethodOAuth2 {
	this := CreateAuthMethodOAuth2{}
	var accessExpires int64 = 0
	this.AccessExpires = &accessExpires
	return &this
}

// GetAccessExpires returns the AccessExpires field value if set, zero value otherwise.
func (o *CreateAuthMethodOAuth2) GetAccessExpires() int64 {
	if o == nil || o.AccessExpires == nil {
		var ret int64
		return ret
	}
	return *o.AccessExpires
}

// GetAccessExpiresOk returns a tuple with the AccessExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOAuth2) GetAccessExpiresOk() (*int64, bool) {
	if o == nil || o.AccessExpires == nil {
		return nil, false
	}
	return o.AccessExpires, true
}

// HasAccessExpires returns a boolean if a field has been set.
func (o *CreateAuthMethodOAuth2) HasAccessExpires() bool {
	if o != nil && o.AccessExpires != nil {
		return true
	}

	return false
}

// SetAccessExpires gets a reference to the given int64 and assigns it to the AccessExpires field.
func (o *CreateAuthMethodOAuth2) SetAccessExpires(v int64) {
	o.AccessExpires = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *CreateAuthMethodOAuth2) GetAudience() string {
	if o == nil || o.Audience == nil {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOAuth2) GetAudienceOk() (*string, bool) {
	if o == nil || o.Audience == nil {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *CreateAuthMethodOAuth2) HasAudience() bool {
	if o != nil && o.Audience != nil {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *CreateAuthMethodOAuth2) SetAudience(v string) {
	o.Audience = &v
}

// GetBoundClientIds returns the BoundClientIds field value if set, zero value otherwise.
func (o *CreateAuthMethodOAuth2) GetBoundClientIds() []string {
	if o == nil || o.BoundClientIds == nil {
		var ret []string
		return ret
	}
	return *o.BoundClientIds
}

// GetBoundClientIdsOk returns a tuple with the BoundClientIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOAuth2) GetBoundClientIdsOk() (*[]string, bool) {
	if o == nil || o.BoundClientIds == nil {
		return nil, false
	}
	return o.BoundClientIds, true
}

// HasBoundClientIds returns a boolean if a field has been set.
func (o *CreateAuthMethodOAuth2) HasBoundClientIds() bool {
	if o != nil && o.BoundClientIds != nil {
		return true
	}

	return false
}

// SetBoundClientIds gets a reference to the given []string and assigns it to the BoundClientIds field.
func (o *CreateAuthMethodOAuth2) SetBoundClientIds(v []string) {
	o.BoundClientIds = &v
}

// GetBoundIps returns the BoundIps field value if set, zero value otherwise.
func (o *CreateAuthMethodOAuth2) GetBoundIps() []string {
	if o == nil || o.BoundIps == nil {
		var ret []string
		return ret
	}
	return *o.BoundIps
}

// GetBoundIpsOk returns a tuple with the BoundIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOAuth2) GetBoundIpsOk() (*[]string, bool) {
	if o == nil || o.BoundIps == nil {
		return nil, false
	}
	return o.BoundIps, true
}

// HasBoundIps returns a boolean if a field has been set.
func (o *CreateAuthMethodOAuth2) HasBoundIps() bool {
	if o != nil && o.BoundIps != nil {
		return true
	}

	return false
}

// SetBoundIps gets a reference to the given []string and assigns it to the BoundIps field.
func (o *CreateAuthMethodOAuth2) SetBoundIps(v []string) {
	o.BoundIps = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *CreateAuthMethodOAuth2) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOAuth2) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *CreateAuthMethodOAuth2) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *CreateAuthMethodOAuth2) SetIssuer(v string) {
	o.Issuer = &v
}

// GetJwksUri returns the JwksUri field value
func (o *CreateAuthMethodOAuth2) GetJwksUri() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.JwksUri
}

// GetJwksUriOk returns a tuple with the JwksUri field value
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOAuth2) GetJwksUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.JwksUri, true
}

// SetJwksUri sets field value
func (o *CreateAuthMethodOAuth2) SetJwksUri(v string) {
	o.JwksUri = v
}

// GetName returns the Name field value
func (o *CreateAuthMethodOAuth2) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOAuth2) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAuthMethodOAuth2) SetName(v string) {
	o.Name = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CreateAuthMethodOAuth2) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOAuth2) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CreateAuthMethodOAuth2) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CreateAuthMethodOAuth2) SetToken(v string) {
	o.Token = &v
}

// GetUidToken returns the UidToken field value if set, zero value otherwise.
func (o *CreateAuthMethodOAuth2) GetUidToken() string {
	if o == nil || o.UidToken == nil {
		var ret string
		return ret
	}
	return *o.UidToken
}

// GetUidTokenOk returns a tuple with the UidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuthMethodOAuth2) GetUidTokenOk() (*string, bool) {
	if o == nil || o.UidToken == nil {
		return nil, false
	}
	return o.UidToken, true
}

// HasUidToken returns a boolean if a field has been set.
func (o *CreateAuthMethodOAuth2) HasUidToken() bool {
	if o != nil && o.UidToken != nil {
		return true
	}

	return false
}

// SetUidToken gets a reference to the given string and assigns it to the UidToken field.
func (o *CreateAuthMethodOAuth2) SetUidToken(v string) {
	o.UidToken = &v
}

func (o CreateAuthMethodOAuth2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessExpires != nil {
		toSerialize["access-expires"] = o.AccessExpires
	}
	if o.Audience != nil {
		toSerialize["audience"] = o.Audience
	}
	if o.BoundClientIds != nil {
		toSerialize["bound-client-ids"] = o.BoundClientIds
	}
	if o.BoundIps != nil {
		toSerialize["bound-ips"] = o.BoundIps
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if true {
		toSerialize["jwks-uri"] = o.JwksUri
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.UidToken != nil {
		toSerialize["uid-token"] = o.UidToken
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAuthMethodOAuth2 struct {
	value *CreateAuthMethodOAuth2
	isSet bool
}

func (v NullableCreateAuthMethodOAuth2) Get() *CreateAuthMethodOAuth2 {
	return v.value
}

func (v *NullableCreateAuthMethodOAuth2) Set(val *CreateAuthMethodOAuth2) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAuthMethodOAuth2) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAuthMethodOAuth2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAuthMethodOAuth2(val *CreateAuthMethodOAuth2) *NullableCreateAuthMethodOAuth2 {
	return &NullableCreateAuthMethodOAuth2{value: val, isSet: true}
}

func (v NullableCreateAuthMethodOAuth2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAuthMethodOAuth2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


