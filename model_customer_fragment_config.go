/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// CustomerFragmentConfig struct for CustomerFragmentConfig
type CustomerFragmentConfig struct {
	Description *string `json:"description,omitempty"`
	FragmentType *string `json:"fragment_type,omitempty"`
	Id *string `json:"id,omitempty"`
	KeyLabel *string `json:"key_label,omitempty"`
	Name *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewCustomerFragmentConfig instantiates a new CustomerFragmentConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerFragmentConfig() *CustomerFragmentConfig {
	this := CustomerFragmentConfig{}
	return &this
}

// NewCustomerFragmentConfigWithDefaults instantiates a new CustomerFragmentConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerFragmentConfigWithDefaults() *CustomerFragmentConfig {
	this := CustomerFragmentConfig{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CustomerFragmentConfig) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFragmentConfig) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CustomerFragmentConfig) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CustomerFragmentConfig) SetDescription(v string) {
	o.Description = &v
}

// GetFragmentType returns the FragmentType field value if set, zero value otherwise.
func (o *CustomerFragmentConfig) GetFragmentType() string {
	if o == nil || o.FragmentType == nil {
		var ret string
		return ret
	}
	return *o.FragmentType
}

// GetFragmentTypeOk returns a tuple with the FragmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFragmentConfig) GetFragmentTypeOk() (*string, bool) {
	if o == nil || o.FragmentType == nil {
		return nil, false
	}
	return o.FragmentType, true
}

// HasFragmentType returns a boolean if a field has been set.
func (o *CustomerFragmentConfig) HasFragmentType() bool {
	if o != nil && o.FragmentType != nil {
		return true
	}

	return false
}

// SetFragmentType gets a reference to the given string and assigns it to the FragmentType field.
func (o *CustomerFragmentConfig) SetFragmentType(v string) {
	o.FragmentType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomerFragmentConfig) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFragmentConfig) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomerFragmentConfig) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomerFragmentConfig) SetId(v string) {
	o.Id = &v
}

// GetKeyLabel returns the KeyLabel field value if set, zero value otherwise.
func (o *CustomerFragmentConfig) GetKeyLabel() string {
	if o == nil || o.KeyLabel == nil {
		var ret string
		return ret
	}
	return *o.KeyLabel
}

// GetKeyLabelOk returns a tuple with the KeyLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFragmentConfig) GetKeyLabelOk() (*string, bool) {
	if o == nil || o.KeyLabel == nil {
		return nil, false
	}
	return o.KeyLabel, true
}

// HasKeyLabel returns a boolean if a field has been set.
func (o *CustomerFragmentConfig) HasKeyLabel() bool {
	if o != nil && o.KeyLabel != nil {
		return true
	}

	return false
}

// SetKeyLabel gets a reference to the given string and assigns it to the KeyLabel field.
func (o *CustomerFragmentConfig) SetKeyLabel(v string) {
	o.KeyLabel = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomerFragmentConfig) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFragmentConfig) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomerFragmentConfig) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomerFragmentConfig) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CustomerFragmentConfig) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFragmentConfig) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CustomerFragmentConfig) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CustomerFragmentConfig) SetValue(v string) {
	o.Value = &v
}

func (o CustomerFragmentConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.FragmentType != nil {
		toSerialize["fragment_type"] = o.FragmentType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.KeyLabel != nil {
		toSerialize["key_label"] = o.KeyLabel
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerFragmentConfig struct {
	value *CustomerFragmentConfig
	isSet bool
}

func (v NullableCustomerFragmentConfig) Get() *CustomerFragmentConfig {
	return v.value
}

func (v *NullableCustomerFragmentConfig) Set(val *CustomerFragmentConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerFragmentConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerFragmentConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerFragmentConfig(val *CustomerFragmentConfig) *NullableCustomerFragmentConfig {
	return &NullableCustomerFragmentConfig{value: val, isSet: true}
}

func (v NullableCustomerFragmentConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerFragmentConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


