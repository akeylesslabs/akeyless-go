/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// LogstashLogForwardingConfig struct for LogstashLogForwardingConfig
type LogstashLogForwardingConfig struct {
	LogstashDns *string `json:"logstash_dns,omitempty"`
	LogstashProtocol *string `json:"logstash_protocol,omitempty"`
}

// NewLogstashLogForwardingConfig instantiates a new LogstashLogForwardingConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogstashLogForwardingConfig() *LogstashLogForwardingConfig {
	this := LogstashLogForwardingConfig{}
	return &this
}

// NewLogstashLogForwardingConfigWithDefaults instantiates a new LogstashLogForwardingConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogstashLogForwardingConfigWithDefaults() *LogstashLogForwardingConfig {
	this := LogstashLogForwardingConfig{}
	return &this
}

// GetLogstashDns returns the LogstashDns field value if set, zero value otherwise.
func (o *LogstashLogForwardingConfig) GetLogstashDns() string {
	if o == nil || o.LogstashDns == nil {
		var ret string
		return ret
	}
	return *o.LogstashDns
}

// GetLogstashDnsOk returns a tuple with the LogstashDns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogstashLogForwardingConfig) GetLogstashDnsOk() (*string, bool) {
	if o == nil || o.LogstashDns == nil {
		return nil, false
	}
	return o.LogstashDns, true
}

// HasLogstashDns returns a boolean if a field has been set.
func (o *LogstashLogForwardingConfig) HasLogstashDns() bool {
	if o != nil && o.LogstashDns != nil {
		return true
	}

	return false
}

// SetLogstashDns gets a reference to the given string and assigns it to the LogstashDns field.
func (o *LogstashLogForwardingConfig) SetLogstashDns(v string) {
	o.LogstashDns = &v
}

// GetLogstashProtocol returns the LogstashProtocol field value if set, zero value otherwise.
func (o *LogstashLogForwardingConfig) GetLogstashProtocol() string {
	if o == nil || o.LogstashProtocol == nil {
		var ret string
		return ret
	}
	return *o.LogstashProtocol
}

// GetLogstashProtocolOk returns a tuple with the LogstashProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogstashLogForwardingConfig) GetLogstashProtocolOk() (*string, bool) {
	if o == nil || o.LogstashProtocol == nil {
		return nil, false
	}
	return o.LogstashProtocol, true
}

// HasLogstashProtocol returns a boolean if a field has been set.
func (o *LogstashLogForwardingConfig) HasLogstashProtocol() bool {
	if o != nil && o.LogstashProtocol != nil {
		return true
	}

	return false
}

// SetLogstashProtocol gets a reference to the given string and assigns it to the LogstashProtocol field.
func (o *LogstashLogForwardingConfig) SetLogstashProtocol(v string) {
	o.LogstashProtocol = &v
}

func (o LogstashLogForwardingConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LogstashDns != nil {
		toSerialize["logstash_dns"] = o.LogstashDns
	}
	if o.LogstashProtocol != nil {
		toSerialize["logstash_protocol"] = o.LogstashProtocol
	}
	return json.Marshal(toSerialize)
}

type NullableLogstashLogForwardingConfig struct {
	value *LogstashLogForwardingConfig
	isSet bool
}

func (v NullableLogstashLogForwardingConfig) Get() *LogstashLogForwardingConfig {
	return v.value
}

func (v *NullableLogstashLogForwardingConfig) Set(val *LogstashLogForwardingConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLogstashLogForwardingConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLogstashLogForwardingConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogstashLogForwardingConfig(val *LogstashLogForwardingConfig) *NullableLogstashLogForwardingConfig {
	return &NullableLogstashLogForwardingConfig{value: val, isSet: true}
}

func (v NullableLogstashLogForwardingConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogstashLogForwardingConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


