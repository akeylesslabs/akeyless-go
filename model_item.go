/*
 * includes all operations supported by Akeyless.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
	"time"
)

// Item struct for Item
type Item struct {
	AutoRotate *bool `json:"auto_rotate,omitempty"`
	CertIssuerSignerKeyName *string `json:"cert_issuer_signer_key_name,omitempty"`
	CertificateIssueDetails *CertificateIssueInfo `json:"certificate_issue_details,omitempty"`
	Certificates *string `json:"certificates,omitempty"`
	ClientPermissions *[]string `json:"client_permissions,omitempty"`
	DeletionDate *time.Time `json:"deletion_date,omitempty"`
	IsEnabled *bool `json:"is_enabled,omitempty"`
	ItemGeneralInfo *ItemGeneralInfo `json:"item_general_info,omitempty"`
	ItemMetadata *string `json:"item_metadata,omitempty"`
	ItemName *string `json:"item_name,omitempty"`
	ItemSize *int64 `json:"item_size,omitempty"`
	// ItemState defines the different states an Item can be in
	ItemState *string `json:"item_state,omitempty"`
	ItemTags *[]string `json:"item_tags,omitempty"`
	ItemType *string `json:"item_type,omitempty"`
	ItemVersions *[]ItemVersion `json:"item_versions,omitempty"`
	LastVersion *int32 `json:"last_version,omitempty"`
	NextRotationDate *time.Time `json:"next_rotation_date,omitempty"`
	// ProducerStatus defines types of Producer Status
	ProducerStatus *string `json:"producer_status,omitempty"`
	ProtectionKeyName *string `json:"protection_key_name,omitempty"`
	PublicValue *string `json:"public_value,omitempty"`
	RotationInterval *int64 `json:"rotation_interval,omitempty"`
	WithCustomerFragment *bool `json:"with_customer_fragment,omitempty"`
}

// NewItem instantiates a new Item object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItem() *Item {
	this := Item{}
	return &this
}

// NewItemWithDefaults instantiates a new Item object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemWithDefaults() *Item {
	this := Item{}
	return &this
}

// GetAutoRotate returns the AutoRotate field value if set, zero value otherwise.
func (o *Item) GetAutoRotate() bool {
	if o == nil || o.AutoRotate == nil {
		var ret bool
		return ret
	}
	return *o.AutoRotate
}

// GetAutoRotateOk returns a tuple with the AutoRotate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetAutoRotateOk() (*bool, bool) {
	if o == nil || o.AutoRotate == nil {
		return nil, false
	}
	return o.AutoRotate, true
}

// HasAutoRotate returns a boolean if a field has been set.
func (o *Item) HasAutoRotate() bool {
	if o != nil && o.AutoRotate != nil {
		return true
	}

	return false
}

// SetAutoRotate gets a reference to the given bool and assigns it to the AutoRotate field.
func (o *Item) SetAutoRotate(v bool) {
	o.AutoRotate = &v
}

// GetCertIssuerSignerKeyName returns the CertIssuerSignerKeyName field value if set, zero value otherwise.
func (o *Item) GetCertIssuerSignerKeyName() string {
	if o == nil || o.CertIssuerSignerKeyName == nil {
		var ret string
		return ret
	}
	return *o.CertIssuerSignerKeyName
}

// GetCertIssuerSignerKeyNameOk returns a tuple with the CertIssuerSignerKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetCertIssuerSignerKeyNameOk() (*string, bool) {
	if o == nil || o.CertIssuerSignerKeyName == nil {
		return nil, false
	}
	return o.CertIssuerSignerKeyName, true
}

// HasCertIssuerSignerKeyName returns a boolean if a field has been set.
func (o *Item) HasCertIssuerSignerKeyName() bool {
	if o != nil && o.CertIssuerSignerKeyName != nil {
		return true
	}

	return false
}

// SetCertIssuerSignerKeyName gets a reference to the given string and assigns it to the CertIssuerSignerKeyName field.
func (o *Item) SetCertIssuerSignerKeyName(v string) {
	o.CertIssuerSignerKeyName = &v
}

// GetCertificateIssueDetails returns the CertificateIssueDetails field value if set, zero value otherwise.
func (o *Item) GetCertificateIssueDetails() CertificateIssueInfo {
	if o == nil || o.CertificateIssueDetails == nil {
		var ret CertificateIssueInfo
		return ret
	}
	return *o.CertificateIssueDetails
}

// GetCertificateIssueDetailsOk returns a tuple with the CertificateIssueDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetCertificateIssueDetailsOk() (*CertificateIssueInfo, bool) {
	if o == nil || o.CertificateIssueDetails == nil {
		return nil, false
	}
	return o.CertificateIssueDetails, true
}

// HasCertificateIssueDetails returns a boolean if a field has been set.
func (o *Item) HasCertificateIssueDetails() bool {
	if o != nil && o.CertificateIssueDetails != nil {
		return true
	}

	return false
}

// SetCertificateIssueDetails gets a reference to the given CertificateIssueInfo and assigns it to the CertificateIssueDetails field.
func (o *Item) SetCertificateIssueDetails(v CertificateIssueInfo) {
	o.CertificateIssueDetails = &v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *Item) GetCertificates() string {
	if o == nil || o.Certificates == nil {
		var ret string
		return ret
	}
	return *o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetCertificatesOk() (*string, bool) {
	if o == nil || o.Certificates == nil {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *Item) HasCertificates() bool {
	if o != nil && o.Certificates != nil {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given string and assigns it to the Certificates field.
func (o *Item) SetCertificates(v string) {
	o.Certificates = &v
}

// GetClientPermissions returns the ClientPermissions field value if set, zero value otherwise.
func (o *Item) GetClientPermissions() []string {
	if o == nil || o.ClientPermissions == nil {
		var ret []string
		return ret
	}
	return *o.ClientPermissions
}

// GetClientPermissionsOk returns a tuple with the ClientPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetClientPermissionsOk() (*[]string, bool) {
	if o == nil || o.ClientPermissions == nil {
		return nil, false
	}
	return o.ClientPermissions, true
}

// HasClientPermissions returns a boolean if a field has been set.
func (o *Item) HasClientPermissions() bool {
	if o != nil && o.ClientPermissions != nil {
		return true
	}

	return false
}

// SetClientPermissions gets a reference to the given []string and assigns it to the ClientPermissions field.
func (o *Item) SetClientPermissions(v []string) {
	o.ClientPermissions = &v
}

// GetDeletionDate returns the DeletionDate field value if set, zero value otherwise.
func (o *Item) GetDeletionDate() time.Time {
	if o == nil || o.DeletionDate == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletionDate
}

// GetDeletionDateOk returns a tuple with the DeletionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetDeletionDateOk() (*time.Time, bool) {
	if o == nil || o.DeletionDate == nil {
		return nil, false
	}
	return o.DeletionDate, true
}

// HasDeletionDate returns a boolean if a field has been set.
func (o *Item) HasDeletionDate() bool {
	if o != nil && o.DeletionDate != nil {
		return true
	}

	return false
}

// SetDeletionDate gets a reference to the given time.Time and assigns it to the DeletionDate field.
func (o *Item) SetDeletionDate(v time.Time) {
	o.DeletionDate = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *Item) GetIsEnabled() bool {
	if o == nil || o.IsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetIsEnabledOk() (*bool, bool) {
	if o == nil || o.IsEnabled == nil {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *Item) HasIsEnabled() bool {
	if o != nil && o.IsEnabled != nil {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *Item) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetItemGeneralInfo returns the ItemGeneralInfo field value if set, zero value otherwise.
func (o *Item) GetItemGeneralInfo() ItemGeneralInfo {
	if o == nil || o.ItemGeneralInfo == nil {
		var ret ItemGeneralInfo
		return ret
	}
	return *o.ItemGeneralInfo
}

// GetItemGeneralInfoOk returns a tuple with the ItemGeneralInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetItemGeneralInfoOk() (*ItemGeneralInfo, bool) {
	if o == nil || o.ItemGeneralInfo == nil {
		return nil, false
	}
	return o.ItemGeneralInfo, true
}

// HasItemGeneralInfo returns a boolean if a field has been set.
func (o *Item) HasItemGeneralInfo() bool {
	if o != nil && o.ItemGeneralInfo != nil {
		return true
	}

	return false
}

// SetItemGeneralInfo gets a reference to the given ItemGeneralInfo and assigns it to the ItemGeneralInfo field.
func (o *Item) SetItemGeneralInfo(v ItemGeneralInfo) {
	o.ItemGeneralInfo = &v
}

// GetItemMetadata returns the ItemMetadata field value if set, zero value otherwise.
func (o *Item) GetItemMetadata() string {
	if o == nil || o.ItemMetadata == nil {
		var ret string
		return ret
	}
	return *o.ItemMetadata
}

// GetItemMetadataOk returns a tuple with the ItemMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetItemMetadataOk() (*string, bool) {
	if o == nil || o.ItemMetadata == nil {
		return nil, false
	}
	return o.ItemMetadata, true
}

// HasItemMetadata returns a boolean if a field has been set.
func (o *Item) HasItemMetadata() bool {
	if o != nil && o.ItemMetadata != nil {
		return true
	}

	return false
}

// SetItemMetadata gets a reference to the given string and assigns it to the ItemMetadata field.
func (o *Item) SetItemMetadata(v string) {
	o.ItemMetadata = &v
}

// GetItemName returns the ItemName field value if set, zero value otherwise.
func (o *Item) GetItemName() string {
	if o == nil || o.ItemName == nil {
		var ret string
		return ret
	}
	return *o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetItemNameOk() (*string, bool) {
	if o == nil || o.ItemName == nil {
		return nil, false
	}
	return o.ItemName, true
}

// HasItemName returns a boolean if a field has been set.
func (o *Item) HasItemName() bool {
	if o != nil && o.ItemName != nil {
		return true
	}

	return false
}

// SetItemName gets a reference to the given string and assigns it to the ItemName field.
func (o *Item) SetItemName(v string) {
	o.ItemName = &v
}

// GetItemSize returns the ItemSize field value if set, zero value otherwise.
func (o *Item) GetItemSize() int64 {
	if o == nil || o.ItemSize == nil {
		var ret int64
		return ret
	}
	return *o.ItemSize
}

// GetItemSizeOk returns a tuple with the ItemSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetItemSizeOk() (*int64, bool) {
	if o == nil || o.ItemSize == nil {
		return nil, false
	}
	return o.ItemSize, true
}

// HasItemSize returns a boolean if a field has been set.
func (o *Item) HasItemSize() bool {
	if o != nil && o.ItemSize != nil {
		return true
	}

	return false
}

// SetItemSize gets a reference to the given int64 and assigns it to the ItemSize field.
func (o *Item) SetItemSize(v int64) {
	o.ItemSize = &v
}

// GetItemState returns the ItemState field value if set, zero value otherwise.
func (o *Item) GetItemState() string {
	if o == nil || o.ItemState == nil {
		var ret string
		return ret
	}
	return *o.ItemState
}

// GetItemStateOk returns a tuple with the ItemState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetItemStateOk() (*string, bool) {
	if o == nil || o.ItemState == nil {
		return nil, false
	}
	return o.ItemState, true
}

// HasItemState returns a boolean if a field has been set.
func (o *Item) HasItemState() bool {
	if o != nil && o.ItemState != nil {
		return true
	}

	return false
}

// SetItemState gets a reference to the given string and assigns it to the ItemState field.
func (o *Item) SetItemState(v string) {
	o.ItemState = &v
}

// GetItemTags returns the ItemTags field value if set, zero value otherwise.
func (o *Item) GetItemTags() []string {
	if o == nil || o.ItemTags == nil {
		var ret []string
		return ret
	}
	return *o.ItemTags
}

// GetItemTagsOk returns a tuple with the ItemTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetItemTagsOk() (*[]string, bool) {
	if o == nil || o.ItemTags == nil {
		return nil, false
	}
	return o.ItemTags, true
}

// HasItemTags returns a boolean if a field has been set.
func (o *Item) HasItemTags() bool {
	if o != nil && o.ItemTags != nil {
		return true
	}

	return false
}

// SetItemTags gets a reference to the given []string and assigns it to the ItemTags field.
func (o *Item) SetItemTags(v []string) {
	o.ItemTags = &v
}

// GetItemType returns the ItemType field value if set, zero value otherwise.
func (o *Item) GetItemType() string {
	if o == nil || o.ItemType == nil {
		var ret string
		return ret
	}
	return *o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetItemTypeOk() (*string, bool) {
	if o == nil || o.ItemType == nil {
		return nil, false
	}
	return o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *Item) HasItemType() bool {
	if o != nil && o.ItemType != nil {
		return true
	}

	return false
}

// SetItemType gets a reference to the given string and assigns it to the ItemType field.
func (o *Item) SetItemType(v string) {
	o.ItemType = &v
}

// GetItemVersions returns the ItemVersions field value if set, zero value otherwise.
func (o *Item) GetItemVersions() []ItemVersion {
	if o == nil || o.ItemVersions == nil {
		var ret []ItemVersion
		return ret
	}
	return *o.ItemVersions
}

// GetItemVersionsOk returns a tuple with the ItemVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetItemVersionsOk() (*[]ItemVersion, bool) {
	if o == nil || o.ItemVersions == nil {
		return nil, false
	}
	return o.ItemVersions, true
}

// HasItemVersions returns a boolean if a field has been set.
func (o *Item) HasItemVersions() bool {
	if o != nil && o.ItemVersions != nil {
		return true
	}

	return false
}

// SetItemVersions gets a reference to the given []ItemVersion and assigns it to the ItemVersions field.
func (o *Item) SetItemVersions(v []ItemVersion) {
	o.ItemVersions = &v
}

// GetLastVersion returns the LastVersion field value if set, zero value otherwise.
func (o *Item) GetLastVersion() int32 {
	if o == nil || o.LastVersion == nil {
		var ret int32
		return ret
	}
	return *o.LastVersion
}

// GetLastVersionOk returns a tuple with the LastVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetLastVersionOk() (*int32, bool) {
	if o == nil || o.LastVersion == nil {
		return nil, false
	}
	return o.LastVersion, true
}

// HasLastVersion returns a boolean if a field has been set.
func (o *Item) HasLastVersion() bool {
	if o != nil && o.LastVersion != nil {
		return true
	}

	return false
}

// SetLastVersion gets a reference to the given int32 and assigns it to the LastVersion field.
func (o *Item) SetLastVersion(v int32) {
	o.LastVersion = &v
}

// GetNextRotationDate returns the NextRotationDate field value if set, zero value otherwise.
func (o *Item) GetNextRotationDate() time.Time {
	if o == nil || o.NextRotationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.NextRotationDate
}

// GetNextRotationDateOk returns a tuple with the NextRotationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetNextRotationDateOk() (*time.Time, bool) {
	if o == nil || o.NextRotationDate == nil {
		return nil, false
	}
	return o.NextRotationDate, true
}

// HasNextRotationDate returns a boolean if a field has been set.
func (o *Item) HasNextRotationDate() bool {
	if o != nil && o.NextRotationDate != nil {
		return true
	}

	return false
}

// SetNextRotationDate gets a reference to the given time.Time and assigns it to the NextRotationDate field.
func (o *Item) SetNextRotationDate(v time.Time) {
	o.NextRotationDate = &v
}

// GetProducerStatus returns the ProducerStatus field value if set, zero value otherwise.
func (o *Item) GetProducerStatus() string {
	if o == nil || o.ProducerStatus == nil {
		var ret string
		return ret
	}
	return *o.ProducerStatus
}

// GetProducerStatusOk returns a tuple with the ProducerStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetProducerStatusOk() (*string, bool) {
	if o == nil || o.ProducerStatus == nil {
		return nil, false
	}
	return o.ProducerStatus, true
}

// HasProducerStatus returns a boolean if a field has been set.
func (o *Item) HasProducerStatus() bool {
	if o != nil && o.ProducerStatus != nil {
		return true
	}

	return false
}

// SetProducerStatus gets a reference to the given string and assigns it to the ProducerStatus field.
func (o *Item) SetProducerStatus(v string) {
	o.ProducerStatus = &v
}

// GetProtectionKeyName returns the ProtectionKeyName field value if set, zero value otherwise.
func (o *Item) GetProtectionKeyName() string {
	if o == nil || o.ProtectionKeyName == nil {
		var ret string
		return ret
	}
	return *o.ProtectionKeyName
}

// GetProtectionKeyNameOk returns a tuple with the ProtectionKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetProtectionKeyNameOk() (*string, bool) {
	if o == nil || o.ProtectionKeyName == nil {
		return nil, false
	}
	return o.ProtectionKeyName, true
}

// HasProtectionKeyName returns a boolean if a field has been set.
func (o *Item) HasProtectionKeyName() bool {
	if o != nil && o.ProtectionKeyName != nil {
		return true
	}

	return false
}

// SetProtectionKeyName gets a reference to the given string and assigns it to the ProtectionKeyName field.
func (o *Item) SetProtectionKeyName(v string) {
	o.ProtectionKeyName = &v
}

// GetPublicValue returns the PublicValue field value if set, zero value otherwise.
func (o *Item) GetPublicValue() string {
	if o == nil || o.PublicValue == nil {
		var ret string
		return ret
	}
	return *o.PublicValue
}

// GetPublicValueOk returns a tuple with the PublicValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetPublicValueOk() (*string, bool) {
	if o == nil || o.PublicValue == nil {
		return nil, false
	}
	return o.PublicValue, true
}

// HasPublicValue returns a boolean if a field has been set.
func (o *Item) HasPublicValue() bool {
	if o != nil && o.PublicValue != nil {
		return true
	}

	return false
}

// SetPublicValue gets a reference to the given string and assigns it to the PublicValue field.
func (o *Item) SetPublicValue(v string) {
	o.PublicValue = &v
}

// GetRotationInterval returns the RotationInterval field value if set, zero value otherwise.
func (o *Item) GetRotationInterval() int64 {
	if o == nil || o.RotationInterval == nil {
		var ret int64
		return ret
	}
	return *o.RotationInterval
}

// GetRotationIntervalOk returns a tuple with the RotationInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetRotationIntervalOk() (*int64, bool) {
	if o == nil || o.RotationInterval == nil {
		return nil, false
	}
	return o.RotationInterval, true
}

// HasRotationInterval returns a boolean if a field has been set.
func (o *Item) HasRotationInterval() bool {
	if o != nil && o.RotationInterval != nil {
		return true
	}

	return false
}

// SetRotationInterval gets a reference to the given int64 and assigns it to the RotationInterval field.
func (o *Item) SetRotationInterval(v int64) {
	o.RotationInterval = &v
}

// GetWithCustomerFragment returns the WithCustomerFragment field value if set, zero value otherwise.
func (o *Item) GetWithCustomerFragment() bool {
	if o == nil || o.WithCustomerFragment == nil {
		var ret bool
		return ret
	}
	return *o.WithCustomerFragment
}

// GetWithCustomerFragmentOk returns a tuple with the WithCustomerFragment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetWithCustomerFragmentOk() (*bool, bool) {
	if o == nil || o.WithCustomerFragment == nil {
		return nil, false
	}
	return o.WithCustomerFragment, true
}

// HasWithCustomerFragment returns a boolean if a field has been set.
func (o *Item) HasWithCustomerFragment() bool {
	if o != nil && o.WithCustomerFragment != nil {
		return true
	}

	return false
}

// SetWithCustomerFragment gets a reference to the given bool and assigns it to the WithCustomerFragment field.
func (o *Item) SetWithCustomerFragment(v bool) {
	o.WithCustomerFragment = &v
}

func (o Item) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AutoRotate != nil {
		toSerialize["auto_rotate"] = o.AutoRotate
	}
	if o.CertIssuerSignerKeyName != nil {
		toSerialize["cert_issuer_signer_key_name"] = o.CertIssuerSignerKeyName
	}
	if o.CertificateIssueDetails != nil {
		toSerialize["certificate_issue_details"] = o.CertificateIssueDetails
	}
	if o.Certificates != nil {
		toSerialize["certificates"] = o.Certificates
	}
	if o.ClientPermissions != nil {
		toSerialize["client_permissions"] = o.ClientPermissions
	}
	if o.DeletionDate != nil {
		toSerialize["deletion_date"] = o.DeletionDate
	}
	if o.IsEnabled != nil {
		toSerialize["is_enabled"] = o.IsEnabled
	}
	if o.ItemGeneralInfo != nil {
		toSerialize["item_general_info"] = o.ItemGeneralInfo
	}
	if o.ItemMetadata != nil {
		toSerialize["item_metadata"] = o.ItemMetadata
	}
	if o.ItemName != nil {
		toSerialize["item_name"] = o.ItemName
	}
	if o.ItemSize != nil {
		toSerialize["item_size"] = o.ItemSize
	}
	if o.ItemState != nil {
		toSerialize["item_state"] = o.ItemState
	}
	if o.ItemTags != nil {
		toSerialize["item_tags"] = o.ItemTags
	}
	if o.ItemType != nil {
		toSerialize["item_type"] = o.ItemType
	}
	if o.ItemVersions != nil {
		toSerialize["item_versions"] = o.ItemVersions
	}
	if o.LastVersion != nil {
		toSerialize["last_version"] = o.LastVersion
	}
	if o.NextRotationDate != nil {
		toSerialize["next_rotation_date"] = o.NextRotationDate
	}
	if o.ProducerStatus != nil {
		toSerialize["producer_status"] = o.ProducerStatus
	}
	if o.ProtectionKeyName != nil {
		toSerialize["protection_key_name"] = o.ProtectionKeyName
	}
	if o.PublicValue != nil {
		toSerialize["public_value"] = o.PublicValue
	}
	if o.RotationInterval != nil {
		toSerialize["rotation_interval"] = o.RotationInterval
	}
	if o.WithCustomerFragment != nil {
		toSerialize["with_customer_fragment"] = o.WithCustomerFragment
	}
	return json.Marshal(toSerialize)
}

type NullableItem struct {
	value *Item
	isSet bool
}

func (v NullableItem) Get() *Item {
	return v.value
}

func (v *NullableItem) Set(val *Item) {
	v.value = val
	v.isSet = true
}

func (v NullableItem) IsSet() bool {
	return v.isSet
}

func (v *NullableItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItem(val *Item) *NullableItem {
	return &NullableItem{value: val, isSet: true}
}

func (v NullableItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


