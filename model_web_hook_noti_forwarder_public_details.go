/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// WebHookNotiForwarderPublicDetails struct for WebHookNotiForwarderPublicDetails
type WebHookNotiForwarderPublicDetails struct {
	AuthType *string `json:"auth_type,omitempty"`
	EndpointUrl *string `json:"endpoint_url,omitempty"`
	// Auth type - User Password
	Username *string `json:"username,omitempty"`
}

// NewWebHookNotiForwarderPublicDetails instantiates a new WebHookNotiForwarderPublicDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebHookNotiForwarderPublicDetails() *WebHookNotiForwarderPublicDetails {
	this := WebHookNotiForwarderPublicDetails{}
	return &this
}

// NewWebHookNotiForwarderPublicDetailsWithDefaults instantiates a new WebHookNotiForwarderPublicDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebHookNotiForwarderPublicDetailsWithDefaults() *WebHookNotiForwarderPublicDetails {
	this := WebHookNotiForwarderPublicDetails{}
	return &this
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *WebHookNotiForwarderPublicDetails) GetAuthType() string {
	if o == nil || o.AuthType == nil {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebHookNotiForwarderPublicDetails) GetAuthTypeOk() (*string, bool) {
	if o == nil || o.AuthType == nil {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *WebHookNotiForwarderPublicDetails) HasAuthType() bool {
	if o != nil && o.AuthType != nil {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *WebHookNotiForwarderPublicDetails) SetAuthType(v string) {
	o.AuthType = &v
}

// GetEndpointUrl returns the EndpointUrl field value if set, zero value otherwise.
func (o *WebHookNotiForwarderPublicDetails) GetEndpointUrl() string {
	if o == nil || o.EndpointUrl == nil {
		var ret string
		return ret
	}
	return *o.EndpointUrl
}

// GetEndpointUrlOk returns a tuple with the EndpointUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebHookNotiForwarderPublicDetails) GetEndpointUrlOk() (*string, bool) {
	if o == nil || o.EndpointUrl == nil {
		return nil, false
	}
	return o.EndpointUrl, true
}

// HasEndpointUrl returns a boolean if a field has been set.
func (o *WebHookNotiForwarderPublicDetails) HasEndpointUrl() bool {
	if o != nil && o.EndpointUrl != nil {
		return true
	}

	return false
}

// SetEndpointUrl gets a reference to the given string and assigns it to the EndpointUrl field.
func (o *WebHookNotiForwarderPublicDetails) SetEndpointUrl(v string) {
	o.EndpointUrl = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *WebHookNotiForwarderPublicDetails) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebHookNotiForwarderPublicDetails) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *WebHookNotiForwarderPublicDetails) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *WebHookNotiForwarderPublicDetails) SetUsername(v string) {
	o.Username = &v
}

func (o WebHookNotiForwarderPublicDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthType != nil {
		toSerialize["auth_type"] = o.AuthType
	}
	if o.EndpointUrl != nil {
		toSerialize["endpoint_url"] = o.EndpointUrl
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableWebHookNotiForwarderPublicDetails struct {
	value *WebHookNotiForwarderPublicDetails
	isSet bool
}

func (v NullableWebHookNotiForwarderPublicDetails) Get() *WebHookNotiForwarderPublicDetails {
	return v.value
}

func (v *NullableWebHookNotiForwarderPublicDetails) Set(val *WebHookNotiForwarderPublicDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableWebHookNotiForwarderPublicDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableWebHookNotiForwarderPublicDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebHookNotiForwarderPublicDetails(val *WebHookNotiForwarderPublicDetails) *NullableWebHookNotiForwarderPublicDetails {
	return &NullableWebHookNotiForwarderPublicDetails{value: val, isSet: true}
}

func (v NullableWebHookNotiForwarderPublicDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebHookNotiForwarderPublicDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


