/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GatewayDeleteAllowedAccessOutput struct for GatewayDeleteAllowedAccessOutput
type GatewayDeleteAllowedAccessOutput struct {
	AllowedAccessName *string `json:"allowed_access_name,omitempty"`
}

// NewGatewayDeleteAllowedAccessOutput instantiates a new GatewayDeleteAllowedAccessOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayDeleteAllowedAccessOutput() *GatewayDeleteAllowedAccessOutput {
	this := GatewayDeleteAllowedAccessOutput{}
	return &this
}

// NewGatewayDeleteAllowedAccessOutputWithDefaults instantiates a new GatewayDeleteAllowedAccessOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayDeleteAllowedAccessOutputWithDefaults() *GatewayDeleteAllowedAccessOutput {
	this := GatewayDeleteAllowedAccessOutput{}
	return &this
}

// GetAllowedAccessName returns the AllowedAccessName field value if set, zero value otherwise.
func (o *GatewayDeleteAllowedAccessOutput) GetAllowedAccessName() string {
	if o == nil || o.AllowedAccessName == nil {
		var ret string
		return ret
	}
	return *o.AllowedAccessName
}

// GetAllowedAccessNameOk returns a tuple with the AllowedAccessName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayDeleteAllowedAccessOutput) GetAllowedAccessNameOk() (*string, bool) {
	if o == nil || o.AllowedAccessName == nil {
		return nil, false
	}
	return o.AllowedAccessName, true
}

// HasAllowedAccessName returns a boolean if a field has been set.
func (o *GatewayDeleteAllowedAccessOutput) HasAllowedAccessName() bool {
	if o != nil && o.AllowedAccessName != nil {
		return true
	}

	return false
}

// SetAllowedAccessName gets a reference to the given string and assigns it to the AllowedAccessName field.
func (o *GatewayDeleteAllowedAccessOutput) SetAllowedAccessName(v string) {
	o.AllowedAccessName = &v
}

func (o GatewayDeleteAllowedAccessOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedAccessName != nil {
		toSerialize["allowed_access_name"] = o.AllowedAccessName
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayDeleteAllowedAccessOutput struct {
	value *GatewayDeleteAllowedAccessOutput
	isSet bool
}

func (v NullableGatewayDeleteAllowedAccessOutput) Get() *GatewayDeleteAllowedAccessOutput {
	return v.value
}

func (v *NullableGatewayDeleteAllowedAccessOutput) Set(val *GatewayDeleteAllowedAccessOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayDeleteAllowedAccessOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayDeleteAllowedAccessOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayDeleteAllowedAccessOutput(val *GatewayDeleteAllowedAccessOutput) *NullableGatewayDeleteAllowedAccessOutput {
	return &NullableGatewayDeleteAllowedAccessOutput{value: val, isSet: true}
}

func (v NullableGatewayDeleteAllowedAccessOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayDeleteAllowedAccessOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


