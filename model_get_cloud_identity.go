/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 0.0.1
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GetCloudIdentity getCloudIdentity is a command that gets Cloud Identity Token (relevant only for access-type=azure_ad, aws_iam).
type GetCloudIdentity struct {
	// Azure Active Directory ObjectId (relevant only for access-type=azure_ad)
	AzureAdObjectId *string `json:"azure_ad_object_id,omitempty"`
	// escapes the token so it can be safely placed inside a URL query
	UrlSafe *bool `json:"url_safe,omitempty"`
}

// NewGetCloudIdentity instantiates a new GetCloudIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCloudIdentity() *GetCloudIdentity {
	this := GetCloudIdentity{}
	return &this
}

// NewGetCloudIdentityWithDefaults instantiates a new GetCloudIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCloudIdentityWithDefaults() *GetCloudIdentity {
	this := GetCloudIdentity{}
	return &this
}

// GetAzureAdObjectId returns the AzureAdObjectId field value if set, zero value otherwise.
func (o *GetCloudIdentity) GetAzureAdObjectId() string {
	if o == nil || o.AzureAdObjectId == nil {
		var ret string
		return ret
	}
	return *o.AzureAdObjectId
}

// GetAzureAdObjectIdOk returns a tuple with the AzureAdObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCloudIdentity) GetAzureAdObjectIdOk() (*string, bool) {
	if o == nil || o.AzureAdObjectId == nil {
		return nil, false
	}
	return o.AzureAdObjectId, true
}

// HasAzureAdObjectId returns a boolean if a field has been set.
func (o *GetCloudIdentity) HasAzureAdObjectId() bool {
	if o != nil && o.AzureAdObjectId != nil {
		return true
	}

	return false
}

// SetAzureAdObjectId gets a reference to the given string and assigns it to the AzureAdObjectId field.
func (o *GetCloudIdentity) SetAzureAdObjectId(v string) {
	o.AzureAdObjectId = &v
}

// GetUrlSafe returns the UrlSafe field value if set, zero value otherwise.
func (o *GetCloudIdentity) GetUrlSafe() bool {
	if o == nil || o.UrlSafe == nil {
		var ret bool
		return ret
	}
	return *o.UrlSafe
}

// GetUrlSafeOk returns a tuple with the UrlSafe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCloudIdentity) GetUrlSafeOk() (*bool, bool) {
	if o == nil || o.UrlSafe == nil {
		return nil, false
	}
	return o.UrlSafe, true
}

// HasUrlSafe returns a boolean if a field has been set.
func (o *GetCloudIdentity) HasUrlSafe() bool {
	if o != nil && o.UrlSafe != nil {
		return true
	}

	return false
}

// SetUrlSafe gets a reference to the given bool and assigns it to the UrlSafe field.
func (o *GetCloudIdentity) SetUrlSafe(v bool) {
	o.UrlSafe = &v
}

func (o GetCloudIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AzureAdObjectId != nil {
		toSerialize["azure_ad_object_id"] = o.AzureAdObjectId
	}
	if o.UrlSafe != nil {
		toSerialize["url_safe"] = o.UrlSafe
	}
	return json.Marshal(toSerialize)
}

type NullableGetCloudIdentity struct {
	value *GetCloudIdentity
	isSet bool
}

func (v NullableGetCloudIdentity) Get() *GetCloudIdentity {
	return v.value
}

func (v *NullableGetCloudIdentity) Set(val *GetCloudIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCloudIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCloudIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCloudIdentity(val *GetCloudIdentity) *NullableGetCloudIdentity {
	return &NullableGetCloudIdentity{value: val, isSet: true}
}

func (v NullableGetCloudIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCloudIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


