/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GodaddyTargetDetails GodaddyTargetDetails
type GodaddyTargetDetails struct {
	ImapFqdn *string `json:"imap_fqdn,omitempty"`
	ImapPassword *string `json:"imap_password,omitempty"`
	ImapPort *string `json:"imap_port,omitempty"`
	ImapUser *string `json:"imap_user,omitempty"`
	Key *string `json:"key,omitempty"`
	Secret *string `json:"secret,omitempty"`
	// A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
	Timeout *int64 `json:"timeout,omitempty"`
	ValidationEmail *string `json:"validation_email,omitempty"`
}

// NewGodaddyTargetDetails instantiates a new GodaddyTargetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGodaddyTargetDetails() *GodaddyTargetDetails {
	this := GodaddyTargetDetails{}
	return &this
}

// NewGodaddyTargetDetailsWithDefaults instantiates a new GodaddyTargetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGodaddyTargetDetailsWithDefaults() *GodaddyTargetDetails {
	this := GodaddyTargetDetails{}
	return &this
}

// GetImapFqdn returns the ImapFqdn field value if set, zero value otherwise.
func (o *GodaddyTargetDetails) GetImapFqdn() string {
	if o == nil || o.ImapFqdn == nil {
		var ret string
		return ret
	}
	return *o.ImapFqdn
}

// GetImapFqdnOk returns a tuple with the ImapFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GodaddyTargetDetails) GetImapFqdnOk() (*string, bool) {
	if o == nil || o.ImapFqdn == nil {
		return nil, false
	}
	return o.ImapFqdn, true
}

// HasImapFqdn returns a boolean if a field has been set.
func (o *GodaddyTargetDetails) HasImapFqdn() bool {
	if o != nil && o.ImapFqdn != nil {
		return true
	}

	return false
}

// SetImapFqdn gets a reference to the given string and assigns it to the ImapFqdn field.
func (o *GodaddyTargetDetails) SetImapFqdn(v string) {
	o.ImapFqdn = &v
}

// GetImapPassword returns the ImapPassword field value if set, zero value otherwise.
func (o *GodaddyTargetDetails) GetImapPassword() string {
	if o == nil || o.ImapPassword == nil {
		var ret string
		return ret
	}
	return *o.ImapPassword
}

// GetImapPasswordOk returns a tuple with the ImapPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GodaddyTargetDetails) GetImapPasswordOk() (*string, bool) {
	if o == nil || o.ImapPassword == nil {
		return nil, false
	}
	return o.ImapPassword, true
}

// HasImapPassword returns a boolean if a field has been set.
func (o *GodaddyTargetDetails) HasImapPassword() bool {
	if o != nil && o.ImapPassword != nil {
		return true
	}

	return false
}

// SetImapPassword gets a reference to the given string and assigns it to the ImapPassword field.
func (o *GodaddyTargetDetails) SetImapPassword(v string) {
	o.ImapPassword = &v
}

// GetImapPort returns the ImapPort field value if set, zero value otherwise.
func (o *GodaddyTargetDetails) GetImapPort() string {
	if o == nil || o.ImapPort == nil {
		var ret string
		return ret
	}
	return *o.ImapPort
}

// GetImapPortOk returns a tuple with the ImapPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GodaddyTargetDetails) GetImapPortOk() (*string, bool) {
	if o == nil || o.ImapPort == nil {
		return nil, false
	}
	return o.ImapPort, true
}

// HasImapPort returns a boolean if a field has been set.
func (o *GodaddyTargetDetails) HasImapPort() bool {
	if o != nil && o.ImapPort != nil {
		return true
	}

	return false
}

// SetImapPort gets a reference to the given string and assigns it to the ImapPort field.
func (o *GodaddyTargetDetails) SetImapPort(v string) {
	o.ImapPort = &v
}

// GetImapUser returns the ImapUser field value if set, zero value otherwise.
func (o *GodaddyTargetDetails) GetImapUser() string {
	if o == nil || o.ImapUser == nil {
		var ret string
		return ret
	}
	return *o.ImapUser
}

// GetImapUserOk returns a tuple with the ImapUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GodaddyTargetDetails) GetImapUserOk() (*string, bool) {
	if o == nil || o.ImapUser == nil {
		return nil, false
	}
	return o.ImapUser, true
}

// HasImapUser returns a boolean if a field has been set.
func (o *GodaddyTargetDetails) HasImapUser() bool {
	if o != nil && o.ImapUser != nil {
		return true
	}

	return false
}

// SetImapUser gets a reference to the given string and assigns it to the ImapUser field.
func (o *GodaddyTargetDetails) SetImapUser(v string) {
	o.ImapUser = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *GodaddyTargetDetails) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GodaddyTargetDetails) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *GodaddyTargetDetails) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *GodaddyTargetDetails) SetKey(v string) {
	o.Key = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *GodaddyTargetDetails) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GodaddyTargetDetails) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *GodaddyTargetDetails) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *GodaddyTargetDetails) SetSecret(v string) {
	o.Secret = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *GodaddyTargetDetails) GetTimeout() int64 {
	if o == nil || o.Timeout == nil {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GodaddyTargetDetails) GetTimeoutOk() (*int64, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *GodaddyTargetDetails) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *GodaddyTargetDetails) SetTimeout(v int64) {
	o.Timeout = &v
}

// GetValidationEmail returns the ValidationEmail field value if set, zero value otherwise.
func (o *GodaddyTargetDetails) GetValidationEmail() string {
	if o == nil || o.ValidationEmail == nil {
		var ret string
		return ret
	}
	return *o.ValidationEmail
}

// GetValidationEmailOk returns a tuple with the ValidationEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GodaddyTargetDetails) GetValidationEmailOk() (*string, bool) {
	if o == nil || o.ValidationEmail == nil {
		return nil, false
	}
	return o.ValidationEmail, true
}

// HasValidationEmail returns a boolean if a field has been set.
func (o *GodaddyTargetDetails) HasValidationEmail() bool {
	if o != nil && o.ValidationEmail != nil {
		return true
	}

	return false
}

// SetValidationEmail gets a reference to the given string and assigns it to the ValidationEmail field.
func (o *GodaddyTargetDetails) SetValidationEmail(v string) {
	o.ValidationEmail = &v
}

func (o GodaddyTargetDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImapFqdn != nil {
		toSerialize["imap_fqdn"] = o.ImapFqdn
	}
	if o.ImapPassword != nil {
		toSerialize["imap_password"] = o.ImapPassword
	}
	if o.ImapPort != nil {
		toSerialize["imap_port"] = o.ImapPort
	}
	if o.ImapUser != nil {
		toSerialize["imap_user"] = o.ImapUser
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	if o.ValidationEmail != nil {
		toSerialize["validation_email"] = o.ValidationEmail
	}
	return json.Marshal(toSerialize)
}

type NullableGodaddyTargetDetails struct {
	value *GodaddyTargetDetails
	isSet bool
}

func (v NullableGodaddyTargetDetails) Get() *GodaddyTargetDetails {
	return v.value
}

func (v *NullableGodaddyTargetDetails) Set(val *GodaddyTargetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableGodaddyTargetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableGodaddyTargetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGodaddyTargetDetails(val *GodaddyTargetDetails) *NullableGodaddyTargetDetails {
	return &NullableGodaddyTargetDetails{value: val, isSet: true}
}

func (v NullableGodaddyTargetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGodaddyTargetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


