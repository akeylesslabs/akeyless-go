/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// TargetTypeDetailesInput struct for TargetTypeDetailesInput
type TargetTypeDetailesInput struct {
	AdminName *string `json:"admin_name,omitempty"`
	AdminPwd *string `json:"admin_pwd,omitempty"`
	AwsAccessKeyId *string `json:"aws_access_key_id,omitempty"`
	AwsRegion *string `json:"aws_region,omitempty"`
	AwsSecretAccessKey *string `json:"aws_secret_access_key,omitempty"`
	AwsSessionToken *string `json:"aws_session_token,omitempty"`
	DbHostName *string `json:"db_host_name,omitempty"`
	DbPort *string `json:"db_port,omitempty"`
	DbPwd *string `json:"db_pwd,omitempty"`
	DbUserName *string `json:"db_user_name,omitempty"`
	HostName *string `json:"host_name,omitempty"`
	HostPort *string `json:"host_port,omitempty"`
	Ip *[]string `json:"ip,omitempty"`
	MongodbDbName *string `json:"mongodb_db_name,omitempty"`
	MongodbUriConnection *string `json:"mongodb_uri_connection,omitempty"`
	Port *string `json:"port,omitempty"`
	RabbitmqServerPassword *string `json:"rabbitmq_server_password,omitempty"`
	RabbitmqServerUri *string `json:"rabbitmq_server_uri,omitempty"`
	RabbitmqServerUser *string `json:"rabbitmq_server_user,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewTargetTypeDetailesInput instantiates a new TargetTypeDetailesInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetTypeDetailesInput() *TargetTypeDetailesInput {
	this := TargetTypeDetailesInput{}
	return &this
}

// NewTargetTypeDetailesInputWithDefaults instantiates a new TargetTypeDetailesInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetTypeDetailesInputWithDefaults() *TargetTypeDetailesInput {
	this := TargetTypeDetailesInput{}
	return &this
}

// GetAdminName returns the AdminName field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetAdminName() string {
	if o == nil || o.AdminName == nil {
		var ret string
		return ret
	}
	return *o.AdminName
}

// GetAdminNameOk returns a tuple with the AdminName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetAdminNameOk() (*string, bool) {
	if o == nil || o.AdminName == nil {
		return nil, false
	}
	return o.AdminName, true
}

// HasAdminName returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasAdminName() bool {
	if o != nil && o.AdminName != nil {
		return true
	}

	return false
}

// SetAdminName gets a reference to the given string and assigns it to the AdminName field.
func (o *TargetTypeDetailesInput) SetAdminName(v string) {
	o.AdminName = &v
}

// GetAdminPwd returns the AdminPwd field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetAdminPwd() string {
	if o == nil || o.AdminPwd == nil {
		var ret string
		return ret
	}
	return *o.AdminPwd
}

// GetAdminPwdOk returns a tuple with the AdminPwd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetAdminPwdOk() (*string, bool) {
	if o == nil || o.AdminPwd == nil {
		return nil, false
	}
	return o.AdminPwd, true
}

// HasAdminPwd returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasAdminPwd() bool {
	if o != nil && o.AdminPwd != nil {
		return true
	}

	return false
}

// SetAdminPwd gets a reference to the given string and assigns it to the AdminPwd field.
func (o *TargetTypeDetailesInput) SetAdminPwd(v string) {
	o.AdminPwd = &v
}

// GetAwsAccessKeyId returns the AwsAccessKeyId field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetAwsAccessKeyId() string {
	if o == nil || o.AwsAccessKeyId == nil {
		var ret string
		return ret
	}
	return *o.AwsAccessKeyId
}

// GetAwsAccessKeyIdOk returns a tuple with the AwsAccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetAwsAccessKeyIdOk() (*string, bool) {
	if o == nil || o.AwsAccessKeyId == nil {
		return nil, false
	}
	return o.AwsAccessKeyId, true
}

// HasAwsAccessKeyId returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasAwsAccessKeyId() bool {
	if o != nil && o.AwsAccessKeyId != nil {
		return true
	}

	return false
}

// SetAwsAccessKeyId gets a reference to the given string and assigns it to the AwsAccessKeyId field.
func (o *TargetTypeDetailesInput) SetAwsAccessKeyId(v string) {
	o.AwsAccessKeyId = &v
}

// GetAwsRegion returns the AwsRegion field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetAwsRegion() string {
	if o == nil || o.AwsRegion == nil {
		var ret string
		return ret
	}
	return *o.AwsRegion
}

// GetAwsRegionOk returns a tuple with the AwsRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetAwsRegionOk() (*string, bool) {
	if o == nil || o.AwsRegion == nil {
		return nil, false
	}
	return o.AwsRegion, true
}

// HasAwsRegion returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasAwsRegion() bool {
	if o != nil && o.AwsRegion != nil {
		return true
	}

	return false
}

// SetAwsRegion gets a reference to the given string and assigns it to the AwsRegion field.
func (o *TargetTypeDetailesInput) SetAwsRegion(v string) {
	o.AwsRegion = &v
}

// GetAwsSecretAccessKey returns the AwsSecretAccessKey field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetAwsSecretAccessKey() string {
	if o == nil || o.AwsSecretAccessKey == nil {
		var ret string
		return ret
	}
	return *o.AwsSecretAccessKey
}

// GetAwsSecretAccessKeyOk returns a tuple with the AwsSecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetAwsSecretAccessKeyOk() (*string, bool) {
	if o == nil || o.AwsSecretAccessKey == nil {
		return nil, false
	}
	return o.AwsSecretAccessKey, true
}

// HasAwsSecretAccessKey returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasAwsSecretAccessKey() bool {
	if o != nil && o.AwsSecretAccessKey != nil {
		return true
	}

	return false
}

// SetAwsSecretAccessKey gets a reference to the given string and assigns it to the AwsSecretAccessKey field.
func (o *TargetTypeDetailesInput) SetAwsSecretAccessKey(v string) {
	o.AwsSecretAccessKey = &v
}

// GetAwsSessionToken returns the AwsSessionToken field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetAwsSessionToken() string {
	if o == nil || o.AwsSessionToken == nil {
		var ret string
		return ret
	}
	return *o.AwsSessionToken
}

// GetAwsSessionTokenOk returns a tuple with the AwsSessionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetAwsSessionTokenOk() (*string, bool) {
	if o == nil || o.AwsSessionToken == nil {
		return nil, false
	}
	return o.AwsSessionToken, true
}

// HasAwsSessionToken returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasAwsSessionToken() bool {
	if o != nil && o.AwsSessionToken != nil {
		return true
	}

	return false
}

// SetAwsSessionToken gets a reference to the given string and assigns it to the AwsSessionToken field.
func (o *TargetTypeDetailesInput) SetAwsSessionToken(v string) {
	o.AwsSessionToken = &v
}

// GetDbHostName returns the DbHostName field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetDbHostName() string {
	if o == nil || o.DbHostName == nil {
		var ret string
		return ret
	}
	return *o.DbHostName
}

// GetDbHostNameOk returns a tuple with the DbHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetDbHostNameOk() (*string, bool) {
	if o == nil || o.DbHostName == nil {
		return nil, false
	}
	return o.DbHostName, true
}

// HasDbHostName returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasDbHostName() bool {
	if o != nil && o.DbHostName != nil {
		return true
	}

	return false
}

// SetDbHostName gets a reference to the given string and assigns it to the DbHostName field.
func (o *TargetTypeDetailesInput) SetDbHostName(v string) {
	o.DbHostName = &v
}

// GetDbPort returns the DbPort field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetDbPort() string {
	if o == nil || o.DbPort == nil {
		var ret string
		return ret
	}
	return *o.DbPort
}

// GetDbPortOk returns a tuple with the DbPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetDbPortOk() (*string, bool) {
	if o == nil || o.DbPort == nil {
		return nil, false
	}
	return o.DbPort, true
}

// HasDbPort returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasDbPort() bool {
	if o != nil && o.DbPort != nil {
		return true
	}

	return false
}

// SetDbPort gets a reference to the given string and assigns it to the DbPort field.
func (o *TargetTypeDetailesInput) SetDbPort(v string) {
	o.DbPort = &v
}

// GetDbPwd returns the DbPwd field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetDbPwd() string {
	if o == nil || o.DbPwd == nil {
		var ret string
		return ret
	}
	return *o.DbPwd
}

// GetDbPwdOk returns a tuple with the DbPwd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetDbPwdOk() (*string, bool) {
	if o == nil || o.DbPwd == nil {
		return nil, false
	}
	return o.DbPwd, true
}

// HasDbPwd returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasDbPwd() bool {
	if o != nil && o.DbPwd != nil {
		return true
	}

	return false
}

// SetDbPwd gets a reference to the given string and assigns it to the DbPwd field.
func (o *TargetTypeDetailesInput) SetDbPwd(v string) {
	o.DbPwd = &v
}

// GetDbUserName returns the DbUserName field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetDbUserName() string {
	if o == nil || o.DbUserName == nil {
		var ret string
		return ret
	}
	return *o.DbUserName
}

// GetDbUserNameOk returns a tuple with the DbUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetDbUserNameOk() (*string, bool) {
	if o == nil || o.DbUserName == nil {
		return nil, false
	}
	return o.DbUserName, true
}

// HasDbUserName returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasDbUserName() bool {
	if o != nil && o.DbUserName != nil {
		return true
	}

	return false
}

// SetDbUserName gets a reference to the given string and assigns it to the DbUserName field.
func (o *TargetTypeDetailesInput) SetDbUserName(v string) {
	o.DbUserName = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetHostName() string {
	if o == nil || o.HostName == nil {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetHostNameOk() (*string, bool) {
	if o == nil || o.HostName == nil {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasHostName() bool {
	if o != nil && o.HostName != nil {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *TargetTypeDetailesInput) SetHostName(v string) {
	o.HostName = &v
}

// GetHostPort returns the HostPort field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetHostPort() string {
	if o == nil || o.HostPort == nil {
		var ret string
		return ret
	}
	return *o.HostPort
}

// GetHostPortOk returns a tuple with the HostPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetHostPortOk() (*string, bool) {
	if o == nil || o.HostPort == nil {
		return nil, false
	}
	return o.HostPort, true
}

// HasHostPort returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasHostPort() bool {
	if o != nil && o.HostPort != nil {
		return true
	}

	return false
}

// SetHostPort gets a reference to the given string and assigns it to the HostPort field.
func (o *TargetTypeDetailesInput) SetHostPort(v string) {
	o.HostPort = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetIp() []string {
	if o == nil || o.Ip == nil {
		var ret []string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetIpOk() (*[]string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given []string and assigns it to the Ip field.
func (o *TargetTypeDetailesInput) SetIp(v []string) {
	o.Ip = &v
}

// GetMongodbDbName returns the MongodbDbName field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetMongodbDbName() string {
	if o == nil || o.MongodbDbName == nil {
		var ret string
		return ret
	}
	return *o.MongodbDbName
}

// GetMongodbDbNameOk returns a tuple with the MongodbDbName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetMongodbDbNameOk() (*string, bool) {
	if o == nil || o.MongodbDbName == nil {
		return nil, false
	}
	return o.MongodbDbName, true
}

// HasMongodbDbName returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasMongodbDbName() bool {
	if o != nil && o.MongodbDbName != nil {
		return true
	}

	return false
}

// SetMongodbDbName gets a reference to the given string and assigns it to the MongodbDbName field.
func (o *TargetTypeDetailesInput) SetMongodbDbName(v string) {
	o.MongodbDbName = &v
}

// GetMongodbUriConnection returns the MongodbUriConnection field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetMongodbUriConnection() string {
	if o == nil || o.MongodbUriConnection == nil {
		var ret string
		return ret
	}
	return *o.MongodbUriConnection
}

// GetMongodbUriConnectionOk returns a tuple with the MongodbUriConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetMongodbUriConnectionOk() (*string, bool) {
	if o == nil || o.MongodbUriConnection == nil {
		return nil, false
	}
	return o.MongodbUriConnection, true
}

// HasMongodbUriConnection returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasMongodbUriConnection() bool {
	if o != nil && o.MongodbUriConnection != nil {
		return true
	}

	return false
}

// SetMongodbUriConnection gets a reference to the given string and assigns it to the MongodbUriConnection field.
func (o *TargetTypeDetailesInput) SetMongodbUriConnection(v string) {
	o.MongodbUriConnection = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetPort() string {
	if o == nil || o.Port == nil {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetPortOk() (*string, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *TargetTypeDetailesInput) SetPort(v string) {
	o.Port = &v
}

// GetRabbitmqServerPassword returns the RabbitmqServerPassword field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetRabbitmqServerPassword() string {
	if o == nil || o.RabbitmqServerPassword == nil {
		var ret string
		return ret
	}
	return *o.RabbitmqServerPassword
}

// GetRabbitmqServerPasswordOk returns a tuple with the RabbitmqServerPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetRabbitmqServerPasswordOk() (*string, bool) {
	if o == nil || o.RabbitmqServerPassword == nil {
		return nil, false
	}
	return o.RabbitmqServerPassword, true
}

// HasRabbitmqServerPassword returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasRabbitmqServerPassword() bool {
	if o != nil && o.RabbitmqServerPassword != nil {
		return true
	}

	return false
}

// SetRabbitmqServerPassword gets a reference to the given string and assigns it to the RabbitmqServerPassword field.
func (o *TargetTypeDetailesInput) SetRabbitmqServerPassword(v string) {
	o.RabbitmqServerPassword = &v
}

// GetRabbitmqServerUri returns the RabbitmqServerUri field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetRabbitmqServerUri() string {
	if o == nil || o.RabbitmqServerUri == nil {
		var ret string
		return ret
	}
	return *o.RabbitmqServerUri
}

// GetRabbitmqServerUriOk returns a tuple with the RabbitmqServerUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetRabbitmqServerUriOk() (*string, bool) {
	if o == nil || o.RabbitmqServerUri == nil {
		return nil, false
	}
	return o.RabbitmqServerUri, true
}

// HasRabbitmqServerUri returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasRabbitmqServerUri() bool {
	if o != nil && o.RabbitmqServerUri != nil {
		return true
	}

	return false
}

// SetRabbitmqServerUri gets a reference to the given string and assigns it to the RabbitmqServerUri field.
func (o *TargetTypeDetailesInput) SetRabbitmqServerUri(v string) {
	o.RabbitmqServerUri = &v
}

// GetRabbitmqServerUser returns the RabbitmqServerUser field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetRabbitmqServerUser() string {
	if o == nil || o.RabbitmqServerUser == nil {
		var ret string
		return ret
	}
	return *o.RabbitmqServerUser
}

// GetRabbitmqServerUserOk returns a tuple with the RabbitmqServerUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetRabbitmqServerUserOk() (*string, bool) {
	if o == nil || o.RabbitmqServerUser == nil {
		return nil, false
	}
	return o.RabbitmqServerUser, true
}

// HasRabbitmqServerUser returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasRabbitmqServerUser() bool {
	if o != nil && o.RabbitmqServerUser != nil {
		return true
	}

	return false
}

// SetRabbitmqServerUser gets a reference to the given string and assigns it to the RabbitmqServerUser field.
func (o *TargetTypeDetailesInput) SetRabbitmqServerUser(v string) {
	o.RabbitmqServerUser = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TargetTypeDetailesInput) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetTypeDetailesInput) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TargetTypeDetailesInput) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TargetTypeDetailesInput) SetUrl(v string) {
	o.Url = &v
}

func (o TargetTypeDetailesInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminName != nil {
		toSerialize["admin_name"] = o.AdminName
	}
	if o.AdminPwd != nil {
		toSerialize["admin_pwd"] = o.AdminPwd
	}
	if o.AwsAccessKeyId != nil {
		toSerialize["aws_access_key_id"] = o.AwsAccessKeyId
	}
	if o.AwsRegion != nil {
		toSerialize["aws_region"] = o.AwsRegion
	}
	if o.AwsSecretAccessKey != nil {
		toSerialize["aws_secret_access_key"] = o.AwsSecretAccessKey
	}
	if o.AwsSessionToken != nil {
		toSerialize["aws_session_token"] = o.AwsSessionToken
	}
	if o.DbHostName != nil {
		toSerialize["db_host_name"] = o.DbHostName
	}
	if o.DbPort != nil {
		toSerialize["db_port"] = o.DbPort
	}
	if o.DbPwd != nil {
		toSerialize["db_pwd"] = o.DbPwd
	}
	if o.DbUserName != nil {
		toSerialize["db_user_name"] = o.DbUserName
	}
	if o.HostName != nil {
		toSerialize["host_name"] = o.HostName
	}
	if o.HostPort != nil {
		toSerialize["host_port"] = o.HostPort
	}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	if o.MongodbDbName != nil {
		toSerialize["mongodb_db_name"] = o.MongodbDbName
	}
	if o.MongodbUriConnection != nil {
		toSerialize["mongodb_uri_connection"] = o.MongodbUriConnection
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.RabbitmqServerPassword != nil {
		toSerialize["rabbitmq_server_password"] = o.RabbitmqServerPassword
	}
	if o.RabbitmqServerUri != nil {
		toSerialize["rabbitmq_server_uri"] = o.RabbitmqServerUri
	}
	if o.RabbitmqServerUser != nil {
		toSerialize["rabbitmq_server_user"] = o.RabbitmqServerUser
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableTargetTypeDetailesInput struct {
	value *TargetTypeDetailesInput
	isSet bool
}

func (v NullableTargetTypeDetailesInput) Get() *TargetTypeDetailesInput {
	return v.value
}

func (v *NullableTargetTypeDetailesInput) Set(val *TargetTypeDetailesInput) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetTypeDetailesInput) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetTypeDetailesInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetTypeDetailesInput(val *TargetTypeDetailesInput) *NullableTargetTypeDetailesInput {
	return &NullableTargetTypeDetailesInput{value: val, isSet: true}
}

func (v NullableTargetTypeDetailesInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetTypeDetailesInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


