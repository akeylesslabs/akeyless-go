/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// LogzIoLogForwardingConfig struct for LogzIoLogForwardingConfig
type LogzIoLogForwardingConfig struct {
	TargetLogzIoProtocol *string `json:"target_logz_io_protocol,omitempty"`
	TargetLogzIoToken *string `json:"target_logz_io_token,omitempty"`
}

// NewLogzIoLogForwardingConfig instantiates a new LogzIoLogForwardingConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogzIoLogForwardingConfig() *LogzIoLogForwardingConfig {
	this := LogzIoLogForwardingConfig{}
	return &this
}

// NewLogzIoLogForwardingConfigWithDefaults instantiates a new LogzIoLogForwardingConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogzIoLogForwardingConfigWithDefaults() *LogzIoLogForwardingConfig {
	this := LogzIoLogForwardingConfig{}
	return &this
}

// GetTargetLogzIoProtocol returns the TargetLogzIoProtocol field value if set, zero value otherwise.
func (o *LogzIoLogForwardingConfig) GetTargetLogzIoProtocol() string {
	if o == nil || o.TargetLogzIoProtocol == nil {
		var ret string
		return ret
	}
	return *o.TargetLogzIoProtocol
}

// GetTargetLogzIoProtocolOk returns a tuple with the TargetLogzIoProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogzIoLogForwardingConfig) GetTargetLogzIoProtocolOk() (*string, bool) {
	if o == nil || o.TargetLogzIoProtocol == nil {
		return nil, false
	}
	return o.TargetLogzIoProtocol, true
}

// HasTargetLogzIoProtocol returns a boolean if a field has been set.
func (o *LogzIoLogForwardingConfig) HasTargetLogzIoProtocol() bool {
	if o != nil && o.TargetLogzIoProtocol != nil {
		return true
	}

	return false
}

// SetTargetLogzIoProtocol gets a reference to the given string and assigns it to the TargetLogzIoProtocol field.
func (o *LogzIoLogForwardingConfig) SetTargetLogzIoProtocol(v string) {
	o.TargetLogzIoProtocol = &v
}

// GetTargetLogzIoToken returns the TargetLogzIoToken field value if set, zero value otherwise.
func (o *LogzIoLogForwardingConfig) GetTargetLogzIoToken() string {
	if o == nil || o.TargetLogzIoToken == nil {
		var ret string
		return ret
	}
	return *o.TargetLogzIoToken
}

// GetTargetLogzIoTokenOk returns a tuple with the TargetLogzIoToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogzIoLogForwardingConfig) GetTargetLogzIoTokenOk() (*string, bool) {
	if o == nil || o.TargetLogzIoToken == nil {
		return nil, false
	}
	return o.TargetLogzIoToken, true
}

// HasTargetLogzIoToken returns a boolean if a field has been set.
func (o *LogzIoLogForwardingConfig) HasTargetLogzIoToken() bool {
	if o != nil && o.TargetLogzIoToken != nil {
		return true
	}

	return false
}

// SetTargetLogzIoToken gets a reference to the given string and assigns it to the TargetLogzIoToken field.
func (o *LogzIoLogForwardingConfig) SetTargetLogzIoToken(v string) {
	o.TargetLogzIoToken = &v
}

func (o LogzIoLogForwardingConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TargetLogzIoProtocol != nil {
		toSerialize["target_logz_io_protocol"] = o.TargetLogzIoProtocol
	}
	if o.TargetLogzIoToken != nil {
		toSerialize["target_logz_io_token"] = o.TargetLogzIoToken
	}
	return json.Marshal(toSerialize)
}

type NullableLogzIoLogForwardingConfig struct {
	value *LogzIoLogForwardingConfig
	isSet bool
}

func (v NullableLogzIoLogForwardingConfig) Get() *LogzIoLogForwardingConfig {
	return v.value
}

func (v *NullableLogzIoLogForwardingConfig) Set(val *LogzIoLogForwardingConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLogzIoLogForwardingConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLogzIoLogForwardingConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogzIoLogForwardingConfig(val *LogzIoLogForwardingConfig) *NullableLogzIoLogForwardingConfig {
	return &NullableLogzIoLogForwardingConfig{value: val, isSet: true}
}

func (v NullableLogzIoLogForwardingConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogzIoLogForwardingConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


