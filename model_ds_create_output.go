/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// DsCreateOutput struct for DsCreateOutput
type DsCreateOutput struct {
	DynamicSecretDetails *DSProducerDetails `json:"dynamic_secret_details,omitempty"`
}

// NewDsCreateOutput instantiates a new DsCreateOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDsCreateOutput() *DsCreateOutput {
	this := DsCreateOutput{}
	return &this
}

// NewDsCreateOutputWithDefaults instantiates a new DsCreateOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDsCreateOutputWithDefaults() *DsCreateOutput {
	this := DsCreateOutput{}
	return &this
}

// GetDynamicSecretDetails returns the DynamicSecretDetails field value if set, zero value otherwise.
func (o *DsCreateOutput) GetDynamicSecretDetails() DSProducerDetails {
	if o == nil || o.DynamicSecretDetails == nil {
		var ret DSProducerDetails
		return ret
	}
	return *o.DynamicSecretDetails
}

// GetDynamicSecretDetailsOk returns a tuple with the DynamicSecretDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DsCreateOutput) GetDynamicSecretDetailsOk() (*DSProducerDetails, bool) {
	if o == nil || o.DynamicSecretDetails == nil {
		return nil, false
	}
	return o.DynamicSecretDetails, true
}

// HasDynamicSecretDetails returns a boolean if a field has been set.
func (o *DsCreateOutput) HasDynamicSecretDetails() bool {
	if o != nil && o.DynamicSecretDetails != nil {
		return true
	}

	return false
}

// SetDynamicSecretDetails gets a reference to the given DSProducerDetails and assigns it to the DynamicSecretDetails field.
func (o *DsCreateOutput) SetDynamicSecretDetails(v DSProducerDetails) {
	o.DynamicSecretDetails = &v
}

func (o DsCreateOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DynamicSecretDetails != nil {
		toSerialize["dynamic_secret_details"] = o.DynamicSecretDetails
	}
	return json.Marshal(toSerialize)
}

type NullableDsCreateOutput struct {
	value *DsCreateOutput
	isSet bool
}

func (v NullableDsCreateOutput) Get() *DsCreateOutput {
	return v.value
}

func (v *NullableDsCreateOutput) Set(val *DsCreateOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableDsCreateOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableDsCreateOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDsCreateOutput(val *DsCreateOutput) *NullableDsCreateOutput {
	return &NullableDsCreateOutput{value: val, isSet: true}
}

func (v NullableDsCreateOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDsCreateOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


