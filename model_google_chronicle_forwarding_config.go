/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GoogleChronicleForwardingConfig struct for GoogleChronicleForwardingConfig
type GoogleChronicleForwardingConfig struct {
	CustomerId *string `json:"customer_id,omitempty"`
	LogType *string `json:"log_type,omitempty"`
	Region *string `json:"region,omitempty"`
	ServiceAccountKey *string `json:"service_account_key,omitempty"`
}

// NewGoogleChronicleForwardingConfig instantiates a new GoogleChronicleForwardingConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleChronicleForwardingConfig() *GoogleChronicleForwardingConfig {
	this := GoogleChronicleForwardingConfig{}
	return &this
}

// NewGoogleChronicleForwardingConfigWithDefaults instantiates a new GoogleChronicleForwardingConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleChronicleForwardingConfigWithDefaults() *GoogleChronicleForwardingConfig {
	this := GoogleChronicleForwardingConfig{}
	return &this
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *GoogleChronicleForwardingConfig) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleChronicleForwardingConfig) GetCustomerIdOk() (*string, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *GoogleChronicleForwardingConfig) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *GoogleChronicleForwardingConfig) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetLogType returns the LogType field value if set, zero value otherwise.
func (o *GoogleChronicleForwardingConfig) GetLogType() string {
	if o == nil || o.LogType == nil {
		var ret string
		return ret
	}
	return *o.LogType
}

// GetLogTypeOk returns a tuple with the LogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleChronicleForwardingConfig) GetLogTypeOk() (*string, bool) {
	if o == nil || o.LogType == nil {
		return nil, false
	}
	return o.LogType, true
}

// HasLogType returns a boolean if a field has been set.
func (o *GoogleChronicleForwardingConfig) HasLogType() bool {
	if o != nil && o.LogType != nil {
		return true
	}

	return false
}

// SetLogType gets a reference to the given string and assigns it to the LogType field.
func (o *GoogleChronicleForwardingConfig) SetLogType(v string) {
	o.LogType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *GoogleChronicleForwardingConfig) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleChronicleForwardingConfig) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *GoogleChronicleForwardingConfig) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *GoogleChronicleForwardingConfig) SetRegion(v string) {
	o.Region = &v
}

// GetServiceAccountKey returns the ServiceAccountKey field value if set, zero value otherwise.
func (o *GoogleChronicleForwardingConfig) GetServiceAccountKey() string {
	if o == nil || o.ServiceAccountKey == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccountKey
}

// GetServiceAccountKeyOk returns a tuple with the ServiceAccountKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleChronicleForwardingConfig) GetServiceAccountKeyOk() (*string, bool) {
	if o == nil || o.ServiceAccountKey == nil {
		return nil, false
	}
	return o.ServiceAccountKey, true
}

// HasServiceAccountKey returns a boolean if a field has been set.
func (o *GoogleChronicleForwardingConfig) HasServiceAccountKey() bool {
	if o != nil && o.ServiceAccountKey != nil {
		return true
	}

	return false
}

// SetServiceAccountKey gets a reference to the given string and assigns it to the ServiceAccountKey field.
func (o *GoogleChronicleForwardingConfig) SetServiceAccountKey(v string) {
	o.ServiceAccountKey = &v
}

func (o GoogleChronicleForwardingConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomerId != nil {
		toSerialize["customer_id"] = o.CustomerId
	}
	if o.LogType != nil {
		toSerialize["log_type"] = o.LogType
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.ServiceAccountKey != nil {
		toSerialize["service_account_key"] = o.ServiceAccountKey
	}
	return json.Marshal(toSerialize)
}

type NullableGoogleChronicleForwardingConfig struct {
	value *GoogleChronicleForwardingConfig
	isSet bool
}

func (v NullableGoogleChronicleForwardingConfig) Get() *GoogleChronicleForwardingConfig {
	return v.value
}

func (v *NullableGoogleChronicleForwardingConfig) Set(val *GoogleChronicleForwardingConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleChronicleForwardingConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleChronicleForwardingConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleChronicleForwardingConfig(val *GoogleChronicleForwardingConfig) *NullableGoogleChronicleForwardingConfig {
	return &NullableGoogleChronicleForwardingConfig{value: val, isSet: true}
}

func (v NullableGoogleChronicleForwardingConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleChronicleForwardingConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


