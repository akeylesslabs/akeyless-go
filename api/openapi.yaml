openapi: 3.0.1
info:
  contact:
    email: support@akeyless.io
    name: Akeyless
    url: http://akeyless.io
  description: The purpose of this application is to provide access to Akeyless API.
  title: Akeyless API
  version: 2.0.1
servers:
- url: https://api.akeyless.io/
paths:
  /assoc-role-am:
    post:
      operationId: assocRoleAuthMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assocRoleAuthMethod'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoleAuthMethodAssocOutput'
          description: assocRoleAuthMethodResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /auth:
    post:
      operationId: auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authOutput'
          description: authResponse wraps response body.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /configure:
    post:
      operationId: configure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configure'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configureOutput'
          description: configureResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-auth-method:
    post:
      operationId: createAuthMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAuthMethod'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAuthMethodOutput'
          description: createAuthMethodResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-auth-method-aws-iam:
    post:
      operationId: createAuthMethodAWSIAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAuthMethodAWSIAM'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAuthMethodAWSIAMOutput'
          description: createAuthMethodAWSIAMResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-auth-method-azure-ad:
    post:
      operationId: createAuthMethodAzureAD
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAuthMethodAzureAD'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAuthMethodAzureADOutput'
          description: createAuthMethodAzureADResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-auth-method-huawei:
    post:
      operationId: createAuthMethodHuawei
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAuthMethodHuawei'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAuthMethodHuaweiOutput'
          description: createAuthMethodHuaweiResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-auth-method-oauth2:
    post:
      operationId: createAuthMethodOAuth2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAuthMethodOAuth2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAuthMethodOAuth2Output'
          description: createAuthMethodOAuth2Response wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-auth-method-saml:
    post:
      operationId: createAuthMethodSAML
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAuthMethodSAML'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAuthMethodSAMLOutput'
          description: createAuthMethodSAMLResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-auth-method-universal-identity:
    post:
      operationId: createAuthMethodUniversalIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAuthMethodUniversalIdentity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAuthMethodUniversalIdentityOutput'
          description: createAuthMethodUniversalIdentityResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-dynamic-secret:
    post:
      operationId: createDynamicSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createDynamicSecret'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createDynamicSecretOutput'
          description: createDynamicSecretResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-key:
    post:
      operationId: createKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createKeyOutput'
          description: createKeyResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-pki-cert-issuer:
    post:
      operationId: createPKICertIssuer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPKICertIssuer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createPKICertIssuerOutput'
          description: createPKICertIssuerResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-role:
    post:
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRole'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createRoleOutput'
          description: createRoleResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-secret:
    post:
      operationId: createSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSecret'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createSecretOutput'
          description: createSecretResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /create-ssh-cert-issuer:
    post:
      operationId: createSSHCertIssuer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSSHCertIssuer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createSSHCertIssuerOutput'
          description: createSSHCertIssuerResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /decrypt:
    post:
      operationId: decrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/decrypt'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/decryptOutput'
          description: decryptResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /decrypt-pkcs1:
    post:
      operationId: decryptPKCS1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/decryptPKCS1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/decryptPKCS1Output'
          description: decryptPKCS1Response wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /delete-assoc:
    post:
      operationId: deleteRoleAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteRoleAssociation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteRoleAssociationOutput'
          description: deleteRoleAssociationResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /delete-auth-method:
    post:
      operationId: deleteAuthMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteAuthMethod'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteAuthMethodOutput'
          description: deleteAuthMethodResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /delete-auth-methods:
    post:
      operationId: deleteAuthMethods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteAuthMethods'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteAuthMethodsOutput'
          description: deleteAuthMethodsResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /delete-item:
    post:
      operationId: deleteItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteItem'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteItemOutput'
          description: deleteItemResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /delete-items:
    post:
      operationId: deleteItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteItems'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteItemsOutput'
          description: deleteItemsResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /delete-role:
    post:
      operationId: deleteRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteRole'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteRoleOutput'
          description: deleteRoleResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /delete-role-rule:
    post:
      operationId: deleteRoleRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteRoleRule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteRoleRuleOutput'
          description: deleteRoleRuleResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /delete-roles:
    post:
      operationId: deleteRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteRoles'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteRolesOutput'
          description: deleteRolesResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /describe-item:
    post:
      operationId: describeItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/describeItem'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: describeItemResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /encrypt:
    post:
      operationId: encrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/encrypt'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptOutput'
          description: encryptResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /encrypt-pkcs1:
    post:
      operationId: encryptPKCS1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/encryptPKCS1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encryptPKCS1Output'
          description: encryptPKCS1Response wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /get-auth-method:
    post:
      operationId: getAuthMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getAuthMethod'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthMethod'
          description: getAuthMethodResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /get-dynamic-secret-value:
    post:
      operationId: getDynamicSecretValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getDynamicSecretValue'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: getDynamicSecretValueResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /get-role:
    post:
      operationId: getRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getRole'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: getRoleResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /get-rsa-public:
    post:
      operationId: getRSAPublic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getRSAPublic'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRSAPublicOutput'
          description: getRSAPublicResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /get-secret-value:
    post:
      operationId: getSecretValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getSecretValue'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: getSecretValueResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /get-ssh-certificate:
    post:
      operationId: getSSHCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getSSHCertificate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSSHCertificateOutput'
          description: getSSHCertificateResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /list-auth-methods:
    post:
      operationId: listAuthMethods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listAuthMethods'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthMethodsOutput'
          description: listAuthMethodsResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /list-items:
    post:
      operationId: listItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listItems'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemsInPathOutput'
          description: listItemsResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /list-roles:
    post:
      operationId: listRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listRoles'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesOutput'
          description: listRolesResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /move-objects:
    post:
      operationId: moveObjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moveObjects'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/moveObjectsOutput'
          description: moveObjectsResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /refresh-key:
    post:
      operationId: refreshKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refreshKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refreshKeyOutput'
          description: refreshKeyResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /reverse-rbac:
    post:
      operationId: reverseRBAC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reverseRBAC'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReverseRBACOutput'
          description: reverseRBACResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /rollback-secret:
    post:
      operationId: rollbackSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rollbackSecret'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rollbackSecretOutput'
          description: rollbackSecretResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /rotate-key:
    post:
      operationId: rotateKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rotateKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateKeyOutput'
          description: rotateKeyResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /set-item-state:
    post:
      operationId: setItemState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setItemState'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setItemStateOutput'
          description: setItemStateResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /set-role-rule:
    post:
      operationId: setRoleRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setRoleRule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setRoleRuleOutput'
          description: setRoleRuleResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /sign-pkcs1:
    post:
      operationId: signPKCS1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signPKCS1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signPKCS1Output'
          description: signPKCS1Response wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /static-creds-auth:
    post:
      operationId: staticCredsAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/staticCredsAuth'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/staticCredsAuthOutput'
          description: staticCredsAuthResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /uid-create-child-token:
    post:
      operationId: uidCreateChildToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uidCreateChildToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uidCreateChildTokenOutput'
          description: uidCreateChildTokenResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /uid-generate-token:
    post:
      operationId: uidGenerateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uidGenerateToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uidGenerateTokenOutput'
          description: uidGenerateTokenResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /uid-list-children:
    post:
      operationId: uidListChildren
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uidListChildren'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalIdentityDetails'
          description: uidListChildrenResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /uid-revoke-token:
    post:
      operationId: uidRevokeToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uidRevokeToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uidRevokeTokenOutput'
          description: uidRevokeTokenResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /uid-rotate-token:
    post:
      operationId: uidRotateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uidRotateToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uidRotateTokenOutput'
          description: uidRotateTokenResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /update-item:
    post:
      operationId: updateItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateItem'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateItemOutput'
          description: updateItemResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /update-role:
    post:
      operationId: updateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRole'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateRoleOutput'
          description: updateRoleResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /update-secret-val:
    post:
      operationId: updateSecretVal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSecretVal'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateSecretValOutput'
          description: updateSecretValResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /upload-rsa:
    post:
      operationId: uploadRSA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadRSA'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadRSAOutput'
          description: uploadRSAResponse wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
  /verify-pkcs1:
    post:
      operationId: verifyPKCS1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verifyPKCS1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verifyPKCS1Output'
          description: verifyPKCS1Response wraps response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONError'
          description: |-
            errorResponse wraps any error to return it as a JSON object with one "error"
            field.
      tags:
      - v2
      x-codegen-request-body-name: body
components:
  responses:
    assocRoleAuthMethodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRoleAuthMethodAssocOutput'
      description: assocRoleAuthMethodResponse wraps response body.
    authResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/authOutput'
      description: authResponse wraps response body.
    configureResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/configureOutput'
      description: configureResponse wraps response body.
    createAuthMethodAWSIAMResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodAWSIAMOutput'
      description: createAuthMethodAWSIAMResponse wraps response body.
    createAuthMethodAzureADResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodAzureADOutput'
      description: createAuthMethodAzureADResponse wraps response body.
    createAuthMethodHuaweiResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodHuaweiOutput'
      description: createAuthMethodHuaweiResponse wraps response body.
    createAuthMethodLDAPResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodLDAPOutput'
      description: createAuthMethodLDAPResponse wraps response body.
    createAuthMethodOAuth2Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodOAuth2Output'
      description: createAuthMethodOAuth2Response wraps response body.
    createAuthMethodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodOutput'
      description: createAuthMethodResponse wraps response body.
    createAuthMethodSAMLResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodSAMLOutput'
      description: createAuthMethodSAMLResponse wraps response body.
    createAuthMethodUniversalIdentityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAuthMethodUniversalIdentityOutput'
      description: createAuthMethodUniversalIdentityResponse wraps response body.
    createDynamicSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createDynamicSecretOutput'
      description: createDynamicSecretResponse wraps response body.
    createKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createKeyOutput'
      description: createKeyResponse wraps response body.
    createPKICertIssuerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createPKICertIssuerOutput'
      description: createPKICertIssuerResponse wraps response body.
    createRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createRoleOutput'
      description: createRoleResponse wraps response body.
    createSSHCertIssuerResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSSHCertIssuerOutput'
      description: createSSHCertIssuerResponse wraps response body.
    createSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSecretOutput'
      description: createSecretResponse wraps response body.
    decryptFileResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/decryptFileOutput'
      description: decryptFileResponse wraps response body.
    decryptPKCS1Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/decryptPKCS1Output'
      description: decryptPKCS1Response wraps response body.
    decryptResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/decryptOutput'
      description: decryptResponse wraps response body.
    deleteAuthMethodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteAuthMethodOutput'
      description: deleteAuthMethodResponse wraps response body.
    deleteAuthMethodsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteAuthMethodsOutput'
      description: deleteAuthMethodsResponse wraps response body.
    deleteItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteItemOutput'
      description: deleteItemResponse wraps response body.
    deleteItemsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteItemsOutput'
      description: deleteItemsResponse wraps response body.
    deleteRoleAssociationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteRoleAssociationOutput'
      description: deleteRoleAssociationResponse wraps response body.
    deleteRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteRoleOutput'
      description: deleteRoleResponse wraps response body.
    deleteRoleRuleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteRoleRuleOutput'
      description: deleteRoleRuleResponse wraps response body.
    deleteRolesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteRolesOutput'
      description: deleteRolesResponse wraps response body.
    describeItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Item'
      description: describeItemResponse wraps response body.
    encryptFileResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/encryptFileOutput'
      description: encryptFileResponse wraps response body.
    encryptPKCS1Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/encryptPKCS1Output'
      description: encryptPKCS1Response wraps response body.
    encryptResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EncryptOutput'
      description: encryptResponse wraps response body.
    errorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONError'
      description: |-
        errorResponse wraps any error to return it as a JSON object with one "error"
        field.
    genCustomerFragmentResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerFragmentsJson'
      description: genCustomerFragmentResponse wraps response body.
    getAuthMethodResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthMethod'
      description: getAuthMethodResponse wraps response body.
    getCloudIdentityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getCloudIdentityOutput'
      description: getCloudIdentityResponse wraps response body.
    getDynamicSecretValueResponse:
      content:
        application/json:
          schema:
            additionalProperties:
              type: string
            type: object
      description: getDynamicSecretValueResponse wraps response body.
    getKubeExecCredsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getKubeExecCredsOutput'
      description: getKubeExecCredsResponse wraps response body.
    getPKICertificateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getPKICertificateOutput'
      description: getPKICertificateResponse wraps response body.
    getRSAPublicResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getRSAPublicOutput'
      description: getRSAPublicResponse wraps response body.
    getRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Role'
      description: getRoleResponse wraps response body.
    getSSHCertificateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getSSHCertificateOutput'
      description: getSSHCertificateResponse wraps response body.
    getSecretValueResponse:
      content:
        application/json:
          schema:
            additionalProperties:
              type: string
            type: object
      description: getSecretValueResponse wraps response body.
    listAuthMethodsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListAuthMethodsOutput'
      description: listAuthMethodsResponse wraps response body.
    listItemsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListItemsInPathOutput'
      description: listItemsResponse wraps response body.
    listRolesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListRolesOutput'
      description: listRolesResponse wraps response body.
    moveObjectsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/moveObjectsOutput'
      description: moveObjectsResponse wraps response body.
    refreshKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/refreshKeyOutput'
      description: refreshKeyResponse wraps response body.
    reverseRBACResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReverseRBACOutput'
      description: reverseRBACResponse wraps response body.
    rollbackSecretResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rollbackSecretOutput'
      description: rollbackSecretResponse wraps response body.
    rotateKeyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RotateKeyOutput'
      description: rotateKeyResponse wraps response body.
    setItemStateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/setItemStateOutput'
      description: setItemStateResponse wraps response body.
    setRoleRuleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/setRoleRuleOutput'
      description: setRoleRuleResponse wraps response body.
    signPKCS1Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/signPKCS1Output'
      description: signPKCS1Response wraps response body.
    staticCredsAuthResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/staticCredsAuthOutput'
      description: staticCredsAuthResponse wraps response body.
    uidCreateChildTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uidCreateChildTokenOutput'
      description: uidCreateChildTokenResponse wraps response body.
    uidGenerateTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uidGenerateTokenOutput'
      description: uidGenerateTokenResponse wraps response body.
    uidListChildrenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UniversalIdentityDetails'
      description: uidListChildrenResponse wraps response body.
    uidRevokeTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uidRevokeTokenOutput'
      description: uidRevokeTokenResponse wraps response body.
    uidRotateTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uidRotateTokenOutput'
      description: uidRotateTokenResponse wraps response body.
    unconfigureResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unconfigureOutput'
      description: unconfigureResponse wraps response body.
    updateItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateItemOutput'
      description: updateItemResponse wraps response body.
    updateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateOutput'
      description: updateResponse wraps response body.
    updateRoleResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateRoleOutput'
      description: updateRoleResponse wraps response body.
    updateSecretValResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateSecretValOutput'
      description: updateSecretValResponse wraps response body.
    uploadPKCS12Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uploadPKCS12Output'
      description: uploadPKCS12Response wraps response body.
    uploadRSAResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/uploadRSAOutput'
      description: uploadRSAResponse wraps response body.
    verifyPKCS1Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/verifyPKCS1Output'
      description: verifyPKCS1Response wraps response body.
  schemas:
    APIKeyAccessRules:
      example:
        alg: alg
        key: key
      properties:
        alg:
          title: Algorithm is a type that represents a single crypto algorithm.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        key:
          description: The public key value of the API-key.
          type: string
          x-go-name: PubKeyValue
      title: APIKeyAccessRules is a set of rules for API Key access type.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AWSIAMAccessRules:
      example:
        role_name:
        - role_name
        - role_name
        account_id:
        - account_id
        - account_id
        role_id:
        - role_id
        - role_id
        user_id:
        - user_id
        - user_id
        user_name:
        - user_name
        - user_name
        resource_id:
        - resource_id
        - resource_id
        sts_endpoint: sts_endpoint
        arn:
        - arn
        - arn
      properties:
        account_id:
          description: The list of account ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: AccountID
        arn:
          description: The list of ARNs that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: Arn
        resource_id:
          description: The list of resource ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: ResourceID
        role_id:
          description: The list of role ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: RoleID
        role_name:
          description: The list of role names that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: RoleName
        sts_endpoint:
          description: The sts URL.
          type: string
          x-go-name: StsEndpoint
        user_id:
          description: The list of user ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: UserID
        user_name:
          description: The list of user names that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: UserName
      title: AWSIAMAccessRules contains access rules specific to AWS IAM.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Algorithm:
      title: Algorithm is a type that represents a single crypto algorithm.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AuthMethod:
      example:
        account_id: account_id
        auth_method_roles_assoc:
        - role_name: role_name
          assoc_id: assoc_id
          rules:
            path_rules:
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            admin: true
          auth_method_sub_claims:
            key:
            - auth_method_sub_claims
            - auth_method_sub_claims
        - role_name: role_name
          assoc_id: assoc_id
          rules:
            path_rules:
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            admin: true
          auth_method_sub_claims:
            key:
            - auth_method_sub_claims
            - auth_method_sub_claims
        client_permissions:
        - client_permissions
        - client_permissions
        access_info:
          cidr_whitelist: cidr_whitelist
          azure_ad_access_rules:
            bound_group_ids:
            - bound_group_ids
            - bound_group_ids
            bound_service_principal_ids:
            - bound_service_principal_ids
            - bound_service_principal_ids
            bound_resource_types:
            - bound_resource_types
            - bound_resource_types
            ad_endpoint: ad_endpoint
            bound_resource_groups:
            - bound_resource_groups
            - bound_resource_groups
            bound_resource_names:
            - bound_resource_names
            - bound_resource_names
            bound_resource_ids:
            - bound_resource_ids
            - bound_resource_ids
            bound_resource_providers:
            - bound_resource_providers
            - bound_resource_providers
            bound_tenant_id: bound_tenant_id
            jwks_uri: jwks_uri
            bound_subscription_ids:
            - bound_subscription_ids
            - bound_subscription_ids
            issuer: issuer
          universal_identity_access_rules:
            deny_inheritance: true
            ttl: 6
            deny_rotate: true
          ldap_access_rules:
            alg: alg
            key: key
          huawei_access_rules:
            domain_id:
            - domain_id
            - domain_id
            tenant_id:
            - tenant_id
            - tenant_id
            domain_name:
            - domain_name
            - domain_name
            tenant_name:
            - tenant_name
            - tenant_name
            auth_endpoint: auth_endpoint
            user_id:
            - user_id
            - user_id
            user_name:
            - user_name
            - user_name
          aws_iam_access_rules:
            role_name:
            - role_name
            - role_name
            account_id:
            - account_id
            - account_id
            role_id:
            - role_id
            - role_id
            user_id:
            - user_id
            - user_id
            user_name:
            - user_name
            - user_name
            resource_id:
            - resource_id
            - resource_id
            sts_endpoint: sts_endpoint
            arn:
            - arn
            - arn
          oauth2_access_rules:
            bound_claims:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            audience: audience
            jwks_uri: jwks_uri
            bound_clients_id:
            - bound_clients_id
            - bound_clients_id
            issuer: issuer
          saml_access_rules:
            idp_metadata_url: idp_metadata_url
            bound_attributes:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            idp_metadata_xml: idp_metadata_xml
          api_key_access_rules:
            alg: alg
            key: key
          rules_type: rules_type
          access_expires: 0
          email_pass_access_rules:
            hash_pass: hash_pass
            alg: alg
            email: email
        auth_method_name: auth_method_name
        auth_method_access_id: auth_method_access_id
      properties:
        access_info:
          $ref: '#/components/schemas/AuthMethodAccessInfo'
        account_id:
          type: string
          x-go-name: AccountID
        auth_method_access_id:
          type: string
          x-go-name: AuthMethodAccessID
        auth_method_name:
          type: string
          x-go-name: AuthMethodName
        auth_method_roles_assoc:
          items:
            $ref: '#/components/schemas/AuthMethodRoleAssociation'
          type: array
          x-go-name: AuthMethodRolesAssoc
        client_permissions:
          items:
            type: string
          type: array
          x-go-name: ClientPermissions
      title: AuthMethod represents a single Auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AuthMethodAccessInfo:
      example:
        cidr_whitelist: cidr_whitelist
        azure_ad_access_rules:
          bound_group_ids:
          - bound_group_ids
          - bound_group_ids
          bound_service_principal_ids:
          - bound_service_principal_ids
          - bound_service_principal_ids
          bound_resource_types:
          - bound_resource_types
          - bound_resource_types
          ad_endpoint: ad_endpoint
          bound_resource_groups:
          - bound_resource_groups
          - bound_resource_groups
          bound_resource_names:
          - bound_resource_names
          - bound_resource_names
          bound_resource_ids:
          - bound_resource_ids
          - bound_resource_ids
          bound_resource_providers:
          - bound_resource_providers
          - bound_resource_providers
          bound_tenant_id: bound_tenant_id
          jwks_uri: jwks_uri
          bound_subscription_ids:
          - bound_subscription_ids
          - bound_subscription_ids
          issuer: issuer
        universal_identity_access_rules:
          deny_inheritance: true
          ttl: 6
          deny_rotate: true
        ldap_access_rules:
          alg: alg
          key: key
        huawei_access_rules:
          domain_id:
          - domain_id
          - domain_id
          tenant_id:
          - tenant_id
          - tenant_id
          domain_name:
          - domain_name
          - domain_name
          tenant_name:
          - tenant_name
          - tenant_name
          auth_endpoint: auth_endpoint
          user_id:
          - user_id
          - user_id
          user_name:
          - user_name
          - user_name
        aws_iam_access_rules:
          role_name:
          - role_name
          - role_name
          account_id:
          - account_id
          - account_id
          role_id:
          - role_id
          - role_id
          user_id:
          - user_id
          - user_id
          user_name:
          - user_name
          - user_name
          resource_id:
          - resource_id
          - resource_id
          sts_endpoint: sts_endpoint
          arn:
          - arn
          - arn
        oauth2_access_rules:
          bound_claims:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          audience: audience
          jwks_uri: jwks_uri
          bound_clients_id:
          - bound_clients_id
          - bound_clients_id
          issuer: issuer
        saml_access_rules:
          idp_metadata_url: idp_metadata_url
          bound_attributes:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          idp_metadata_xml: idp_metadata_xml
        api_key_access_rules:
          alg: alg
          key: key
        rules_type: rules_type
        access_expires: 0
        email_pass_access_rules:
          hash_pass: hash_pass
          alg: alg
          email: email
      properties:
        access_expires:
          format: int64
          type: integer
          x-go-name: AccessExpires
        api_key_access_rules:
          $ref: '#/components/schemas/APIKeyAccessRules'
        aws_iam_access_rules:
          $ref: '#/components/schemas/AWSIAMAccessRules'
        azure_ad_access_rules:
          $ref: '#/components/schemas/AzureADAccessRules'
        cidr_whitelist:
          type: string
          x-go-name: CIDRWhitelist
        email_pass_access_rules:
          $ref: '#/components/schemas/EmailPassAccessRules'
        huawei_access_rules:
          $ref: '#/components/schemas/HuaweiAccessRules'
        ldap_access_rules:
          $ref: '#/components/schemas/LDAPAccessRules'
        oauth2_access_rules:
          $ref: '#/components/schemas/OAuth2AccessRules'
        rules_type:
          type: string
          x-go-name: AccessRulesType
        saml_access_rules:
          $ref: '#/components/schemas/SAMLAccessRules'
        universal_identity_access_rules:
          $ref: '#/components/schemas/UniversalIdentityAccessRules'
      title: AuthMethodAccessInfo includes auth method access information.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AuthMethodRoleAssociation:
      description: |-
        AuthMethodRoleAssociation includes details of an association between an auth
        method and a role.
      example:
        role_name: role_name
        assoc_id: assoc_id
        rules:
          path_rules:
          - path: path
            capabilities:
            - capabilities
            - capabilities
            type: type
          - path: path
            capabilities:
            - capabilities
            - capabilities
            type: type
          admin: true
        auth_method_sub_claims:
          key:
          - auth_method_sub_claims
          - auth_method_sub_claims
      properties:
        assoc_id:
          type: string
          x-go-name: AssociationID
        auth_method_sub_claims:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: AuthMethodSubClaims
        role_name:
          type: string
          x-go-name: RoleName
        rules:
          $ref: '#/components/schemas/Rules'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    AzureADAccessRules:
      description: |-
        AzureADAccessRules contains access rules specific to Azure Active Directory
        authentication.
      example:
        bound_group_ids:
        - bound_group_ids
        - bound_group_ids
        bound_service_principal_ids:
        - bound_service_principal_ids
        - bound_service_principal_ids
        bound_resource_types:
        - bound_resource_types
        - bound_resource_types
        ad_endpoint: ad_endpoint
        bound_resource_groups:
        - bound_resource_groups
        - bound_resource_groups
        bound_resource_names:
        - bound_resource_names
        - bound_resource_names
        bound_resource_ids:
        - bound_resource_ids
        - bound_resource_ids
        bound_resource_providers:
        - bound_resource_providers
        - bound_resource_providers
        bound_tenant_id: bound_tenant_id
        jwks_uri: jwks_uri
        bound_subscription_ids:
        - bound_subscription_ids
        - bound_subscription_ids
        issuer: issuer
      properties:
        ad_endpoint:
          description: The audience in the JWT.
          type: string
          x-go-name: Audience
        bound_group_ids:
          description: The list of group ids that login is restricted to.
          items:
            type: string
          type: array
          x-go-name: BoundGroupIDs
        bound_resource_groups:
          description: The list of resource groups that login is restricted to.
          items:
            type: string
          type: array
          x-go-name: BoundResourceGroups
        bound_resource_ids:
          description: The list of full resource ids that the login is restricted
            to.
          items:
            type: string
          type: array
          x-go-name: BoundResourceIds
        bound_resource_names:
          description: |-
            The list of resource names that the login is restricted to (e.g, a
            virtual machine name, scale set name, etc).
          items:
            type: string
          type: array
          x-go-name: BoundResourceNames
        bound_resource_providers:
          description: |-
            The list of resource providers that login is restricted to (e.g,
            Microsoft.Compute, Microsoft.ManagedIdentity, etc).
          items:
            type: string
          type: array
          x-go-name: BoundResourceProviders
        bound_resource_types:
          description: |-
            The list of resource types that login is restricted to  (e.g,
            virtualMachines, userAssignedIdentities, etc).
          items:
            type: string
          type: array
          x-go-name: BoundResourceTypes
        bound_service_principal_ids:
          description: The list of service principal IDs that login is restricted
            to.
          items:
            type: string
          type: array
          x-go-name: BoundServicePrincipalIDs
        bound_subscription_ids:
          description: The list of subscription IDs that login is restricted to.
          items:
            type: string
          type: array
          x-go-name: BoundSubscriptionsIDs
        bound_tenant_id:
          description: The tenants id for the Azure Active Directory organization.
          type: string
          x-go-name: BoundTenantID
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        jwks_uri:
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CertIssuerType:
      title: CertIssuerType represents possible certificate issuers type.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CertificateIssueInfo:
      example:
        max_ttl: 0
        pki_cert_issuer_details:
          country:
          - country
          - country
          street_address:
          - street_address
          - street_address
          allow_subdomains: true
          key_type: key_type
          allow_any_name: true
          locality:
          - locality
          - locality
          basic_constraints_valid_for_non_ca: true
          organization_unit_list:
          - organization_unit_list
          - organization_unit_list
          server_flag: true
          is_ca: true
          not_before_duration: 1
          key_bits: 6
          organization_list:
          - organization_list
          - organization_list
          require_cn: true
          code_signing_flag: true
          province:
          - province
          - province
          allowed_domains_list:
          - allowed_domains_list
          - allowed_domains_list
          enforce_hostnames: true
          allowed_uri_sans:
          - allowed_uri_sans
          - allowed_uri_sans
          postal_code:
          - postal_code
          - postal_code
          client_flag: true
          key_usage_list:
          - key_usage_list
          - key_usage_list
        ssh_cert_issuer_details:
          static_key_id: static_key_id
          allowed_users:
          - allowed_users
          - allowed_users
          cert_type: 5
          extensions:
            key: extensions
          allowed_domains:
          - allowed_domains
          - allowed_domains
          critical_options:
            key: critical_options
          principals:
          - principals
          - principals
          allowed_user_key_lengths:
            key: 5
        cert_issuer_type: cert_issuer_type
      properties:
        cert_issuer_type:
          title: CertIssuerType represents possible certificate issuers type.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        max_ttl:
          format: int64
          type: integer
          x-go-name: MaxTTL
        pki_cert_issuer_details:
          $ref: '#/components/schemas/PKICertificateIssueDetails'
        ssh_cert_issuer_details:
          $ref: '#/components/schemas/SSHCertificateIssueDetails'
      title: CertificateIssueInfo defines Certificate Issuer info.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CreateRoleAuthMethodAssocOutput:
      description: |-
        CreateRoleAuthMethodAssocOutput defines output of CreateRoleAuthMethodAssoc
        operation.
      example:
        assoc_id: assoc_id
      properties:
        assoc_id:
          type: string
          x-go-name: AssociationID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    CustomerFragment:
      properties:
        description:
          type: string
          x-go-name: Description
        id:
          type: string
          x-go-name: Id
        value:
          type: string
          x-go-name: Value
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/sdk/config
    CustomerFragmentsJson:
      properties:
        customer_fragments:
          items:
            $ref: '#/components/schemas/CustomerFragment'
          type: array
          x-go-name: Fragments
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/sdk/config
    DeleteItemOutput:
      example:
        version_deleted: 0
        deletion_date: 2000-01-23T04:56:07.000+00:00
        item_name: item_name
      properties:
        deletion_date:
          format: date-time
          type: string
          x-go-name: DeletionDate
        item_name:
          type: string
          x-go-name: ItemName
        version_deleted:
          format: int32
          type: integer
          x-go-name: VersionDeleted
      title: DeleteItemOutput defines output of DeleteItem operation.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Duration:
      description: |-
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
      format: int64
      type: integer
      x-go-package: time
    DynamicSecretProducerInfo:
      description: |-
        DynamicSecretProducerInfo The dynamic secret producer info
        This parameter relevant and required only in case of create update dynamic secret.
      example:
        producer_type: producer_type
        producer_status: producer_status
      properties:
        producer_status:
          description: ProducerStatus defines types of Producer Status
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        producer_type:
          type: string
          x-go-name: ProducerType
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    EmailPassAccessRules:
      example:
        hash_pass: hash_pass
        alg: alg
        email: email
      properties:
        alg:
          title: HashAlgorithm is a type that represents a single hash algorithm.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        email:
          description: The Email value
          type: string
          x-go-name: Email
        hash_pass:
          description: The password value
          type: string
          x-go-name: HashPass
      title: EmailPassAccessRules is a set of rules for email password access type.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    EncryptOutput:
      example:
        result:
        - 0
        - 0
      properties:
        result:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: Result
      title: EncryptOutput defines output of Encrypt operation.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    GetPKICertificate:
      properties:
        alt-names:
          description: |-
            The Subject Alternative Names to be included in the PKI certificate (in
            a comma-delimited list)
          type: string
          x-go-name: AltNames
        cert-issuer-name:
          description: The name of the PKI certificate issuer
          type: string
          x-go-name: CertIssuerName
        common-name:
          description: The common name to be included in the PKI certificate
          type: string
          x-go-name: CommonName
        key-file-path:
          description: |-
            The client public or private key file path (in case of a private key, it
            will be use to extract the public key)
          type: string
          x-go-name: KeyFilePath
        outfile:
          description: |-
            Output file path with the certificate. If not provided, the file with
            the certificate will be created in the same location of the provided
            public key with the -cert extension
          type: string
          x-go-name: OutFilePath
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        uri-sans:
          description: |-
            The URI Subject Alternative Names to be included in the PKI certificate
            (in a comma-delimited list)
          type: string
          x-go-name: URISANs
      required:
      - cert-issuer-name
      - key-file-path
      title: GetPKICertificate is a command that generates PKI certificate.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    HashAlgorithm:
      title: HashAlgorithm is a type that represents a single hash algorithm.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    HuaweiAccessRules:
      example:
        domain_id:
        - domain_id
        - domain_id
        tenant_id:
        - tenant_id
        - tenant_id
        domain_name:
        - domain_name
        - domain_name
        tenant_name:
        - tenant_name
        - tenant_name
        auth_endpoint: auth_endpoint
        user_id:
        - user_id
        - user_id
        user_name:
        - user_name
        - user_name
      properties:
        auth_endpoint:
          description: The auth URL.
          type: string
          x-go-name: AuthEndpoint
        domain_id:
          description: The list of domain ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: DomainID
        domain_name:
          description: The list of domainNames that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: DomainName
        tenant_id:
          description: The list of tenantIDs  that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: TenantID
        tenant_name:
          description: The list of tenantNames  that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: TenantName
        user_id:
          description: The list of user ids that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: UserID
        user_name:
          description: The list of user names that the login is restricted to.
          items:
            type: string
          type: array
          x-go-name: UserName
      title: HuaweiAccessRules defines access rules specific to Huawei authentication.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Item:
      example:
        auto_rotate: true
        item_state: item_state
        cert_issuer_signer_key_name: cert_issuer_signer_key_name
        item_tags:
        - item_tags
        - item_tags
        item_type: item_type
        certificate_issue_details:
          max_ttl: 0
          pki_cert_issuer_details:
            country:
            - country
            - country
            street_address:
            - street_address
            - street_address
            allow_subdomains: true
            key_type: key_type
            allow_any_name: true
            locality:
            - locality
            - locality
            basic_constraints_valid_for_non_ca: true
            organization_unit_list:
            - organization_unit_list
            - organization_unit_list
            server_flag: true
            is_ca: true
            not_before_duration: 1
            key_bits: 6
            organization_list:
            - organization_list
            - organization_list
            require_cn: true
            code_signing_flag: true
            province:
            - province
            - province
            allowed_domains_list:
            - allowed_domains_list
            - allowed_domains_list
            enforce_hostnames: true
            allowed_uri_sans:
            - allowed_uri_sans
            - allowed_uri_sans
            postal_code:
            - postal_code
            - postal_code
            client_flag: true
            key_usage_list:
            - key_usage_list
            - key_usage_list
          ssh_cert_issuer_details:
            static_key_id: static_key_id
            allowed_users:
            - allowed_users
            - allowed_users
            cert_type: 5
            extensions:
              key: extensions
            allowed_domains:
            - allowed_domains
            - allowed_domains
            critical_options:
              key: critical_options
            principals:
            - principals
            - principals
            allowed_user_key_lengths:
              key: 5
          cert_issuer_type: cert_issuer_type
        item_versions:
        - item_version_state: item_version_state
          with_customer_fragment: true
          deletion_date: 2000-01-23T04:56:07.000+00:00
          protection_key_name: protection_key_name
          creation_date: 2000-01-23T04:56:07.000+00:00
          version: 7
        - item_version_state: item_version_state
          with_customer_fragment: true
          deletion_date: 2000-01-23T04:56:07.000+00:00
          protection_key_name: protection_key_name
          creation_date: 2000-01-23T04:56:07.000+00:00
          version: 7
        item_name: item_name
        item_size: 2
        is_enabled: true
        item_general_info:
          dynamic_secret_producer_details:
            producer_type: producer_type
            producer_status: producer_status
          cert_issue_details:
            max_ttl: 0
            pki_cert_issuer_details:
              country:
              - country
              - country
              street_address:
              - street_address
              - street_address
              allow_subdomains: true
              key_type: key_type
              allow_any_name: true
              locality:
              - locality
              - locality
              basic_constraints_valid_for_non_ca: true
              organization_unit_list:
              - organization_unit_list
              - organization_unit_list
              server_flag: true
              is_ca: true
              not_before_duration: 1
              key_bits: 6
              organization_list:
              - organization_list
              - organization_list
              require_cn: true
              code_signing_flag: true
              province:
              - province
              - province
              allowed_domains_list:
              - allowed_domains_list
              - allowed_domains_list
              enforce_hostnames: true
              allowed_uri_sans:
              - allowed_uri_sans
              - allowed_uri_sans
              postal_code:
              - postal_code
              - postal_code
              client_flag: true
              key_usage_list:
              - key_usage_list
              - key_usage_list
            ssh_cert_issuer_details:
              static_key_id: static_key_id
              allowed_users:
              - allowed_users
              - allowed_users
              cert_type: 5
              extensions:
                key: extensions
              allowed_domains:
              - allowed_domains
              - allowed_domains
              critical_options:
                key: critical_options
              principals:
              - principals
              - principals
              allowed_user_key_lengths:
                key: 5
            cert_issuer_type: cert_issuer_type
        last_version: 9
        next_rotation_date: 2000-01-23T04:56:07.000+00:00
        client_permissions:
        - client_permissions
        - client_permissions
        with_customer_fragment: true
        certificates: certificates
        rotation_interval: 3
        item_metadata: item_metadata
        deletion_date: 2000-01-23T04:56:07.000+00:00
        producer_status: producer_status
        protection_key_name: protection_key_name
        public_value: public_value
      properties:
        auto_rotate:
          type: boolean
          x-go-name: AutoRotate
        cert_issuer_signer_key_name:
          type: string
          x-go-name: CertIssuerSignerKeyName
        certificate_issue_details:
          $ref: '#/components/schemas/CertificateIssueInfo'
        certificates:
          type: string
          x-go-name: Certificates
        client_permissions:
          items:
            type: string
          type: array
          x-go-name: ClientPermissions
        deletion_date:
          format: date-time
          type: string
          x-go-name: DeletionDate
        is_enabled:
          type: boolean
          x-go-name: IsEnabled
        item_general_info:
          $ref: '#/components/schemas/ItemGeneralInfo'
        item_metadata:
          type: string
          x-go-name: ItemMetadata
        item_name:
          type: string
          x-go-name: ItemName
        item_size:
          format: int64
          type: integer
          x-go-name: Size
        item_state:
          description: ItemState defines the different states an Item can be in
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        item_tags:
          items:
            type: string
          type: array
          x-go-name: Tags
        item_type:
          title: ItemType defines types supported by AKEYLESS.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        item_versions:
          items:
            $ref: '#/components/schemas/ItemVersion'
          type: array
          x-go-name: ItemVersions
        last_version:
          format: int32
          type: integer
          x-go-name: LastVersion
        next_rotation_date:
          format: date-time
          type: string
          x-go-name: NextRotationDate
        producer_status:
          description: ProducerStatus defines types of Producer Status
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        protection_key_name:
          type: string
          x-go-name: ProtectionKeyName
        public_value:
          type: string
          x-go-name: PublicValue
        rotation_interval:
          format: int64
          type: integer
          x-go-name: RotationInterval
        with_customer_fragment:
          type: boolean
          x-go-name: WithCustomerFragment
      title: Item describes any item in AKEYLESS.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemGeneralInfo:
      example:
        dynamic_secret_producer_details:
          producer_type: producer_type
          producer_status: producer_status
        cert_issue_details:
          max_ttl: 0
          pki_cert_issuer_details:
            country:
            - country
            - country
            street_address:
            - street_address
            - street_address
            allow_subdomains: true
            key_type: key_type
            allow_any_name: true
            locality:
            - locality
            - locality
            basic_constraints_valid_for_non_ca: true
            organization_unit_list:
            - organization_unit_list
            - organization_unit_list
            server_flag: true
            is_ca: true
            not_before_duration: 1
            key_bits: 6
            organization_list:
            - organization_list
            - organization_list
            require_cn: true
            code_signing_flag: true
            province:
            - province
            - province
            allowed_domains_list:
            - allowed_domains_list
            - allowed_domains_list
            enforce_hostnames: true
            allowed_uri_sans:
            - allowed_uri_sans
            - allowed_uri_sans
            postal_code:
            - postal_code
            - postal_code
            client_flag: true
            key_usage_list:
            - key_usage_list
            - key_usage_list
          ssh_cert_issuer_details:
            static_key_id: static_key_id
            allowed_users:
            - allowed_users
            - allowed_users
            cert_type: 5
            extensions:
              key: extensions
            allowed_domains:
            - allowed_domains
            - allowed_domains
            critical_options:
              key: critical_options
            principals:
            - principals
            - principals
            allowed_user_key_lengths:
              key: 5
          cert_issuer_type: cert_issuer_type
      properties:
        cert_issue_details:
          $ref: '#/components/schemas/CertificateIssueInfo'
        dynamic_secret_producer_details:
          $ref: '#/components/schemas/DynamicSecretProducerInfo'
      title: ItemGeneralInfo defines item general info.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemState:
      description: ItemState defines the different states an Item can be in
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemType:
      title: ItemType defines types supported by AKEYLESS.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ItemVersion:
      example:
        item_version_state: item_version_state
        with_customer_fragment: true
        deletion_date: 2000-01-23T04:56:07.000+00:00
        protection_key_name: protection_key_name
        creation_date: 2000-01-23T04:56:07.000+00:00
        version: 7
      properties:
        creation_date:
          format: date-time
          type: string
          x-go-name: CreationDate
        deletion_date:
          format: date-time
          type: string
          x-go-name: DeletionDate
        item_version_state:
          description: ItemState defines the different states an Item can be in
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        protection_key_name:
          type: string
          x-go-name: ProtectionKeyName
        version:
          format: int32
          type: integer
          x-go-name: Version
        with_customer_fragment:
          type: boolean
          x-go-name: WithCustomerFragment
      title: ItemVersion describes an item version in AKEYLESS.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    JSONError:
      properties:
        error:
          type: string
          x-go-name: Err
      title: JSONError wraps an error with JSON object.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client
    LDAPAccessRules:
      example:
        alg: alg
        key: key
      properties:
        alg:
          title: Algorithm is a type that represents a single crypto algorithm.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        key:
          description: The public key value of LDAP.
          type: string
          x-go-name: PubKeyValue
      title: LDAPAccessRules includes access rules specific to LDAP authentication.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ListAuthMethodsOutput:
      example:
        next_page: next_page
        auth_methods:
        - account_id: account_id
          auth_method_roles_assoc:
          - role_name: role_name
            assoc_id: assoc_id
            rules:
              path_rules:
              - path: path
                capabilities:
                - capabilities
                - capabilities
                type: type
              - path: path
                capabilities:
                - capabilities
                - capabilities
                type: type
              admin: true
            auth_method_sub_claims:
              key:
              - auth_method_sub_claims
              - auth_method_sub_claims
          - role_name: role_name
            assoc_id: assoc_id
            rules:
              path_rules:
              - path: path
                capabilities:
                - capabilities
                - capabilities
                type: type
              - path: path
                capabilities:
                - capabilities
                - capabilities
                type: type
              admin: true
            auth_method_sub_claims:
              key:
              - auth_method_sub_claims
              - auth_method_sub_claims
          client_permissions:
          - client_permissions
          - client_permissions
          access_info:
            cidr_whitelist: cidr_whitelist
            azure_ad_access_rules:
              bound_group_ids:
              - bound_group_ids
              - bound_group_ids
              bound_service_principal_ids:
              - bound_service_principal_ids
              - bound_service_principal_ids
              bound_resource_types:
              - bound_resource_types
              - bound_resource_types
              ad_endpoint: ad_endpoint
              bound_resource_groups:
              - bound_resource_groups
              - bound_resource_groups
              bound_resource_names:
              - bound_resource_names
              - bound_resource_names
              bound_resource_ids:
              - bound_resource_ids
              - bound_resource_ids
              bound_resource_providers:
              - bound_resource_providers
              - bound_resource_providers
              bound_tenant_id: bound_tenant_id
              jwks_uri: jwks_uri
              bound_subscription_ids:
              - bound_subscription_ids
              - bound_subscription_ids
              issuer: issuer
            universal_identity_access_rules:
              deny_inheritance: true
              ttl: 6
              deny_rotate: true
            ldap_access_rules:
              alg: alg
              key: key
            huawei_access_rules:
              domain_id:
              - domain_id
              - domain_id
              tenant_id:
              - tenant_id
              - tenant_id
              domain_name:
              - domain_name
              - domain_name
              tenant_name:
              - tenant_name
              - tenant_name
              auth_endpoint: auth_endpoint
              user_id:
              - user_id
              - user_id
              user_name:
              - user_name
              - user_name
            aws_iam_access_rules:
              role_name:
              - role_name
              - role_name
              account_id:
              - account_id
              - account_id
              role_id:
              - role_id
              - role_id
              user_id:
              - user_id
              - user_id
              user_name:
              - user_name
              - user_name
              resource_id:
              - resource_id
              - resource_id
              sts_endpoint: sts_endpoint
              arn:
              - arn
              - arn
            oauth2_access_rules:
              bound_claims:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              audience: audience
              jwks_uri: jwks_uri
              bound_clients_id:
              - bound_clients_id
              - bound_clients_id
              issuer: issuer
            saml_access_rules:
              idp_metadata_url: idp_metadata_url
              bound_attributes:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              idp_metadata_xml: idp_metadata_xml
            api_key_access_rules:
              alg: alg
              key: key
            rules_type: rules_type
            access_expires: 0
            email_pass_access_rules:
              hash_pass: hash_pass
              alg: alg
              email: email
          auth_method_name: auth_method_name
          auth_method_access_id: auth_method_access_id
        - account_id: account_id
          auth_method_roles_assoc:
          - role_name: role_name
            assoc_id: assoc_id
            rules:
              path_rules:
              - path: path
                capabilities:
                - capabilities
                - capabilities
                type: type
              - path: path
                capabilities:
                - capabilities
                - capabilities
                type: type
              admin: true
            auth_method_sub_claims:
              key:
              - auth_method_sub_claims
              - auth_method_sub_claims
          - role_name: role_name
            assoc_id: assoc_id
            rules:
              path_rules:
              - path: path
                capabilities:
                - capabilities
                - capabilities
                type: type
              - path: path
                capabilities:
                - capabilities
                - capabilities
                type: type
              admin: true
            auth_method_sub_claims:
              key:
              - auth_method_sub_claims
              - auth_method_sub_claims
          client_permissions:
          - client_permissions
          - client_permissions
          access_info:
            cidr_whitelist: cidr_whitelist
            azure_ad_access_rules:
              bound_group_ids:
              - bound_group_ids
              - bound_group_ids
              bound_service_principal_ids:
              - bound_service_principal_ids
              - bound_service_principal_ids
              bound_resource_types:
              - bound_resource_types
              - bound_resource_types
              ad_endpoint: ad_endpoint
              bound_resource_groups:
              - bound_resource_groups
              - bound_resource_groups
              bound_resource_names:
              - bound_resource_names
              - bound_resource_names
              bound_resource_ids:
              - bound_resource_ids
              - bound_resource_ids
              bound_resource_providers:
              - bound_resource_providers
              - bound_resource_providers
              bound_tenant_id: bound_tenant_id
              jwks_uri: jwks_uri
              bound_subscription_ids:
              - bound_subscription_ids
              - bound_subscription_ids
              issuer: issuer
            universal_identity_access_rules:
              deny_inheritance: true
              ttl: 6
              deny_rotate: true
            ldap_access_rules:
              alg: alg
              key: key
            huawei_access_rules:
              domain_id:
              - domain_id
              - domain_id
              tenant_id:
              - tenant_id
              - tenant_id
              domain_name:
              - domain_name
              - domain_name
              tenant_name:
              - tenant_name
              - tenant_name
              auth_endpoint: auth_endpoint
              user_id:
              - user_id
              - user_id
              user_name:
              - user_name
              - user_name
            aws_iam_access_rules:
              role_name:
              - role_name
              - role_name
              account_id:
              - account_id
              - account_id
              role_id:
              - role_id
              - role_id
              user_id:
              - user_id
              - user_id
              user_name:
              - user_name
              - user_name
              resource_id:
              - resource_id
              - resource_id
              sts_endpoint: sts_endpoint
              arn:
              - arn
              - arn
            oauth2_access_rules:
              bound_claims:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              audience: audience
              jwks_uri: jwks_uri
              bound_clients_id:
              - bound_clients_id
              - bound_clients_id
              issuer: issuer
            saml_access_rules:
              idp_metadata_url: idp_metadata_url
              bound_attributes:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              idp_metadata_xml: idp_metadata_xml
            api_key_access_rules:
              alg: alg
              key: key
            rules_type: rules_type
            access_expires: 0
            email_pass_access_rules:
              hash_pass: hash_pass
              alg: alg
              email: email
          auth_method_name: auth_method_name
          auth_method_access_id: auth_method_access_id
      properties:
        auth_methods:
          items:
            $ref: '#/components/schemas/AuthMethod'
          type: array
          x-go-name: AuthMethods
        next_page:
          type: string
          x-go-name: NextPage
      title: ListAuthMethodsOutput is a list of auth methods.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ListItemsInPathOutput:
      example:
        next_page: next_page
        folders:
        - folders
        - folders
        items:
        - auto_rotate: true
          item_state: item_state
          cert_issuer_signer_key_name: cert_issuer_signer_key_name
          item_tags:
          - item_tags
          - item_tags
          item_type: item_type
          certificate_issue_details:
            max_ttl: 0
            pki_cert_issuer_details:
              country:
              - country
              - country
              street_address:
              - street_address
              - street_address
              allow_subdomains: true
              key_type: key_type
              allow_any_name: true
              locality:
              - locality
              - locality
              basic_constraints_valid_for_non_ca: true
              organization_unit_list:
              - organization_unit_list
              - organization_unit_list
              server_flag: true
              is_ca: true
              not_before_duration: 1
              key_bits: 6
              organization_list:
              - organization_list
              - organization_list
              require_cn: true
              code_signing_flag: true
              province:
              - province
              - province
              allowed_domains_list:
              - allowed_domains_list
              - allowed_domains_list
              enforce_hostnames: true
              allowed_uri_sans:
              - allowed_uri_sans
              - allowed_uri_sans
              postal_code:
              - postal_code
              - postal_code
              client_flag: true
              key_usage_list:
              - key_usage_list
              - key_usage_list
            ssh_cert_issuer_details:
              static_key_id: static_key_id
              allowed_users:
              - allowed_users
              - allowed_users
              cert_type: 5
              extensions:
                key: extensions
              allowed_domains:
              - allowed_domains
              - allowed_domains
              critical_options:
                key: critical_options
              principals:
              - principals
              - principals
              allowed_user_key_lengths:
                key: 5
            cert_issuer_type: cert_issuer_type
          item_versions:
          - item_version_state: item_version_state
            with_customer_fragment: true
            deletion_date: 2000-01-23T04:56:07.000+00:00
            protection_key_name: protection_key_name
            creation_date: 2000-01-23T04:56:07.000+00:00
            version: 7
          - item_version_state: item_version_state
            with_customer_fragment: true
            deletion_date: 2000-01-23T04:56:07.000+00:00
            protection_key_name: protection_key_name
            creation_date: 2000-01-23T04:56:07.000+00:00
            version: 7
          item_name: item_name
          item_size: 2
          is_enabled: true
          item_general_info:
            dynamic_secret_producer_details:
              producer_type: producer_type
              producer_status: producer_status
            cert_issue_details:
              max_ttl: 0
              pki_cert_issuer_details:
                country:
                - country
                - country
                street_address:
                - street_address
                - street_address
                allow_subdomains: true
                key_type: key_type
                allow_any_name: true
                locality:
                - locality
                - locality
                basic_constraints_valid_for_non_ca: true
                organization_unit_list:
                - organization_unit_list
                - organization_unit_list
                server_flag: true
                is_ca: true
                not_before_duration: 1
                key_bits: 6
                organization_list:
                - organization_list
                - organization_list
                require_cn: true
                code_signing_flag: true
                province:
                - province
                - province
                allowed_domains_list:
                - allowed_domains_list
                - allowed_domains_list
                enforce_hostnames: true
                allowed_uri_sans:
                - allowed_uri_sans
                - allowed_uri_sans
                postal_code:
                - postal_code
                - postal_code
                client_flag: true
                key_usage_list:
                - key_usage_list
                - key_usage_list
              ssh_cert_issuer_details:
                static_key_id: static_key_id
                allowed_users:
                - allowed_users
                - allowed_users
                cert_type: 5
                extensions:
                  key: extensions
                allowed_domains:
                - allowed_domains
                - allowed_domains
                critical_options:
                  key: critical_options
                principals:
                - principals
                - principals
                allowed_user_key_lengths:
                  key: 5
              cert_issuer_type: cert_issuer_type
          last_version: 9
          next_rotation_date: 2000-01-23T04:56:07.000+00:00
          client_permissions:
          - client_permissions
          - client_permissions
          with_customer_fragment: true
          certificates: certificates
          rotation_interval: 3
          item_metadata: item_metadata
          deletion_date: 2000-01-23T04:56:07.000+00:00
          producer_status: producer_status
          protection_key_name: protection_key_name
          public_value: public_value
        - auto_rotate: true
          item_state: item_state
          cert_issuer_signer_key_name: cert_issuer_signer_key_name
          item_tags:
          - item_tags
          - item_tags
          item_type: item_type
          certificate_issue_details:
            max_ttl: 0
            pki_cert_issuer_details:
              country:
              - country
              - country
              street_address:
              - street_address
              - street_address
              allow_subdomains: true
              key_type: key_type
              allow_any_name: true
              locality:
              - locality
              - locality
              basic_constraints_valid_for_non_ca: true
              organization_unit_list:
              - organization_unit_list
              - organization_unit_list
              server_flag: true
              is_ca: true
              not_before_duration: 1
              key_bits: 6
              organization_list:
              - organization_list
              - organization_list
              require_cn: true
              code_signing_flag: true
              province:
              - province
              - province
              allowed_domains_list:
              - allowed_domains_list
              - allowed_domains_list
              enforce_hostnames: true
              allowed_uri_sans:
              - allowed_uri_sans
              - allowed_uri_sans
              postal_code:
              - postal_code
              - postal_code
              client_flag: true
              key_usage_list:
              - key_usage_list
              - key_usage_list
            ssh_cert_issuer_details:
              static_key_id: static_key_id
              allowed_users:
              - allowed_users
              - allowed_users
              cert_type: 5
              extensions:
                key: extensions
              allowed_domains:
              - allowed_domains
              - allowed_domains
              critical_options:
                key: critical_options
              principals:
              - principals
              - principals
              allowed_user_key_lengths:
                key: 5
            cert_issuer_type: cert_issuer_type
          item_versions:
          - item_version_state: item_version_state
            with_customer_fragment: true
            deletion_date: 2000-01-23T04:56:07.000+00:00
            protection_key_name: protection_key_name
            creation_date: 2000-01-23T04:56:07.000+00:00
            version: 7
          - item_version_state: item_version_state
            with_customer_fragment: true
            deletion_date: 2000-01-23T04:56:07.000+00:00
            protection_key_name: protection_key_name
            creation_date: 2000-01-23T04:56:07.000+00:00
            version: 7
          item_name: item_name
          item_size: 2
          is_enabled: true
          item_general_info:
            dynamic_secret_producer_details:
              producer_type: producer_type
              producer_status: producer_status
            cert_issue_details:
              max_ttl: 0
              pki_cert_issuer_details:
                country:
                - country
                - country
                street_address:
                - street_address
                - street_address
                allow_subdomains: true
                key_type: key_type
                allow_any_name: true
                locality:
                - locality
                - locality
                basic_constraints_valid_for_non_ca: true
                organization_unit_list:
                - organization_unit_list
                - organization_unit_list
                server_flag: true
                is_ca: true
                not_before_duration: 1
                key_bits: 6
                organization_list:
                - organization_list
                - organization_list
                require_cn: true
                code_signing_flag: true
                province:
                - province
                - province
                allowed_domains_list:
                - allowed_domains_list
                - allowed_domains_list
                enforce_hostnames: true
                allowed_uri_sans:
                - allowed_uri_sans
                - allowed_uri_sans
                postal_code:
                - postal_code
                - postal_code
                client_flag: true
                key_usage_list:
                - key_usage_list
                - key_usage_list
              ssh_cert_issuer_details:
                static_key_id: static_key_id
                allowed_users:
                - allowed_users
                - allowed_users
                cert_type: 5
                extensions:
                  key: extensions
                allowed_domains:
                - allowed_domains
                - allowed_domains
                critical_options:
                  key: critical_options
                principals:
                - principals
                - principals
                allowed_user_key_lengths:
                  key: 5
              cert_issuer_type: cert_issuer_type
          last_version: 9
          next_rotation_date: 2000-01-23T04:56:07.000+00:00
          client_permissions:
          - client_permissions
          - client_permissions
          with_customer_fragment: true
          certificates: certificates
          rotation_interval: 3
          item_metadata: item_metadata
          deletion_date: 2000-01-23T04:56:07.000+00:00
          producer_status: producer_status
          protection_key_name: protection_key_name
          public_value: public_value
      properties:
        folders:
          items:
            type: string
          type: array
          x-go-name: Folders
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
          x-go-name: Items
        next_page:
          type: string
          x-go-name: NextPage
      title: ListItemsInPathOutput is a list of items and/or folders in a specific
        path.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ListRolesOutput:
      example:
        next_page: next_page
        roles:
        - role_name: role_name
          client_permissions:
          - client_permissions
          - client_permissions
          role_auth_methods_assoc:
          - assoc_id: assoc_id
            auth_method_name: auth_method_name
            auth_method_sub_claims:
              key:
              - auth_method_sub_claims
              - auth_method_sub_claims
            auth_method_access_id: auth_method_access_id
          - assoc_id: assoc_id
            auth_method_name: auth_method_name
            auth_method_sub_claims:
              key:
              - auth_method_sub_claims
              - auth_method_sub_claims
            auth_method_access_id: auth_method_access_id
          comment: comment
          rules:
            path_rules:
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            admin: true
        - role_name: role_name
          client_permissions:
          - client_permissions
          - client_permissions
          role_auth_methods_assoc:
          - assoc_id: assoc_id
            auth_method_name: auth_method_name
            auth_method_sub_claims:
              key:
              - auth_method_sub_claims
              - auth_method_sub_claims
            auth_method_access_id: auth_method_access_id
          - assoc_id: assoc_id
            auth_method_name: auth_method_name
            auth_method_sub_claims:
              key:
              - auth_method_sub_claims
              - auth_method_sub_claims
            auth_method_access_id: auth_method_access_id
          comment: comment
          rules:
            path_rules:
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            admin: true
      properties:
        next_page:
          type: string
          x-go-name: NextPage
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
          x-go-name: Roles
      title: ListRolesOutput is a list of roles.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    OAuth2AccessRules:
      description: |-
        OAuth2AccessRules contains access rules specific to OAuth2 authentication
        method.
      example:
        bound_claims:
        - values:
          - values
          - values
          name: name
        - values:
          - values
          - values
          name: name
        audience: audience
        jwks_uri: jwks_uri
        bound_clients_id:
        - bound_clients_id
        - bound_clients_id
        issuer: issuer
      properties:
        audience:
          description: The audience in the JWT.
          type: string
          x-go-name: Audience
        bound_claims:
          description: The claims that login is restricted to.
          items:
            $ref: '#/components/schemas/OAuth2CustomClaim'
          type: array
          x-go-name: BoundCustomClaims
        bound_clients_id:
          description: The clients ids that login is restricted to.
          items:
            type: string
          type: array
          x-go-name: BoundClientsIDs
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        jwks_uri:
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    OAuth2CustomClaim:
      description: |-
        OAuth2CustomClaim is a custom claim specific to OAuth2 authentication
        method.
      example:
        values:
        - values
        - values
        name: name
      properties:
        name:
          type: string
          x-go-name: Name
        values:
          items:
            type: string
          type: array
          x-go-name: Values
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    PKICertificateIssueDetails:
      example:
        country:
        - country
        - country
        street_address:
        - street_address
        - street_address
        allow_subdomains: true
        key_type: key_type
        allow_any_name: true
        locality:
        - locality
        - locality
        basic_constraints_valid_for_non_ca: true
        organization_unit_list:
        - organization_unit_list
        - organization_unit_list
        server_flag: true
        is_ca: true
        not_before_duration: 1
        key_bits: 6
        organization_list:
        - organization_list
        - organization_list
        require_cn: true
        code_signing_flag: true
        province:
        - province
        - province
        allowed_domains_list:
        - allowed_domains_list
        - allowed_domains_list
        enforce_hostnames: true
        allowed_uri_sans:
        - allowed_uri_sans
        - allowed_uri_sans
        postal_code:
        - postal_code
        - postal_code
        client_flag: true
        key_usage_list:
        - key_usage_list
        - key_usage_list
      properties:
        allow_any_name:
          type: boolean
          x-go-name: AllowAnyName
        allow_subdomains:
          type: boolean
          x-go-name: AllowSubdomains
        allowed_domains_list:
          items:
            type: string
          type: array
          x-go-name: AllowedDomains
        allowed_uri_sans:
          items:
            type: string
          type: array
          x-go-name: AllowedURISANs
        basic_constraints_valid_for_non_ca:
          type: boolean
          x-go-name: BasicConstraintsValidForNonCA
        client_flag:
          type: boolean
          x-go-name: ClientFlag
        code_signing_flag:
          type: boolean
          x-go-name: CodeSigningFlag
        country:
          items:
            type: string
          type: array
          x-go-name: Country
        enforce_hostnames:
          type: boolean
          x-go-name: EnforceHostnames
        is_ca:
          type: boolean
          x-go-name: IsCA
        key_bits:
          format: int64
          type: integer
          x-go-name: KeyBits
        key_type:
          type: string
          x-go-name: KeyType
        key_usage_list:
          items:
            type: string
          type: array
          x-go-name: KeyUsage
        locality:
          items:
            type: string
          type: array
          x-go-name: Locality
        not_before_duration:
          description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
          format: int64
          type: integer
          x-go-package: time
        organization_list:
          items:
            type: string
          type: array
          x-go-name: Organization
        organization_unit_list:
          items:
            type: string
          type: array
          x-go-name: OrganizationalUnit
        postal_code:
          items:
            type: string
          type: array
          x-go-name: PostalCode
        province:
          items:
            type: string
          type: array
          x-go-name: Province
        require_cn:
          type: boolean
          x-go-name: RequireCN
        server_flag:
          type: boolean
          x-go-name: ServerFlag
        street_address:
          items:
            type: string
          type: array
          x-go-name: StreetAddress
      title: PKICertificateIssueDetails defines PKI certificate details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    PathRule:
      example:
        path: path
        capabilities:
        - capabilities
        - capabilities
        type: type
      properties:
        capabilities:
          description: The approved/denied capabilities in the path
          items:
            type: string
          type: array
          x-go-name: Capabilities
        path:
          description: The path the rule refers to
          type: string
          x-go-name: Path
        type:
          title: PathRuleType defines a kind of every PathRule assigned to a Role.
          type: string
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
      title: PathRule is a single rule used in AKEYLESS RBAC.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    PathRuleType:
      title: PathRuleType defines a kind of every PathRule assigned to a Role.
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ProducerStatus:
      description: ProducerStatus defines types of Producer Status
      type: string
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ReverseRBACClient:
      example:
        allowed_ops:
        - allowed_ops
        - allowed_ops
        auth_method_name: auth_method_name
        assocs:
        - role_name: role_name
          assoc_id: assoc_id
          rules:
            path_rules:
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            admin: true
          auth_method_sub_claims:
            key:
            - auth_method_sub_claims
            - auth_method_sub_claims
        - role_name: role_name
          assoc_id: assoc_id
          rules:
            path_rules:
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            - path: path
              capabilities:
              - capabilities
              - capabilities
              type: type
            admin: true
          auth_method_sub_claims:
            key:
            - auth_method_sub_claims
            - auth_method_sub_claims
      properties:
        allowed_ops:
          items:
            type: string
          type: array
          x-go-name: AllowedOperations
        assocs:
          items:
            $ref: '#/components/schemas/AuthMethodRoleAssociation'
          type: array
          x-go-name: Assocs
        auth_method_name:
          type: string
          x-go-name: AuthMethodName
      title: ReverseRBACClient is a single entity that has access to a given object.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    ReverseRBACOutput:
      example:
        clients:
          key:
            allowed_ops:
            - allowed_ops
            - allowed_ops
            auth_method_name: auth_method_name
            assocs:
            - role_name: role_name
              assoc_id: assoc_id
              rules:
                path_rules:
                - path: path
                  capabilities:
                  - capabilities
                  - capabilities
                  type: type
                - path: path
                  capabilities:
                  - capabilities
                  - capabilities
                  type: type
                admin: true
              auth_method_sub_claims:
                key:
                - auth_method_sub_claims
                - auth_method_sub_claims
            - role_name: role_name
              assoc_id: assoc_id
              rules:
                path_rules:
                - path: path
                  capabilities:
                  - capabilities
                  - capabilities
                  type: type
                - path: path
                  capabilities:
                  - capabilities
                  - capabilities
                  type: type
                admin: true
              auth_method_sub_claims:
                key:
                - auth_method_sub_claims
                - auth_method_sub_claims
      properties:
        clients:
          additionalProperties:
            $ref: '#/components/schemas/ReverseRBACClient'
          type: object
          x-go-name: Clients
      title: ReverseRBACOutput defines output of ReverseRBAC operation.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Role:
      example:
        role_name: role_name
        client_permissions:
        - client_permissions
        - client_permissions
        role_auth_methods_assoc:
        - assoc_id: assoc_id
          auth_method_name: auth_method_name
          auth_method_sub_claims:
            key:
            - auth_method_sub_claims
            - auth_method_sub_claims
          auth_method_access_id: auth_method_access_id
        - assoc_id: assoc_id
          auth_method_name: auth_method_name
          auth_method_sub_claims:
            key:
            - auth_method_sub_claims
            - auth_method_sub_claims
          auth_method_access_id: auth_method_access_id
        comment: comment
        rules:
          path_rules:
          - path: path
            capabilities:
            - capabilities
            - capabilities
            type: type
          - path: path
            capabilities:
            - capabilities
            - capabilities
            type: type
          admin: true
      properties:
        client_permissions:
          items:
            type: string
          type: array
          x-go-name: ClientPermissions
        comment:
          type: string
          x-go-name: Comment
        role_auth_methods_assoc:
          items:
            $ref: '#/components/schemas/RoleAuthMethodAssociation'
          type: array
          x-go-name: RoleAuthMethodsAssoc
        role_name:
          type: string
          x-go-name: RoleName
        rules:
          $ref: '#/components/schemas/Rules'
      title: Role includes role details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    RoleAuthMethodAssociation:
      description: |-
        RoleAuthMethodAssociation includes details of an association between a role
        and an auth method.
      example:
        assoc_id: assoc_id
        auth_method_name: auth_method_name
        auth_method_sub_claims:
          key:
          - auth_method_sub_claims
          - auth_method_sub_claims
        auth_method_access_id: auth_method_access_id
      properties:
        assoc_id:
          type: string
          x-go-name: AssociationID
        auth_method_access_id:
          type: string
          x-go-name: AuthMethodAccessID
        auth_method_name:
          type: string
          x-go-name: AuthMethodName
        auth_method_sub_claims:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-go-name: AuthMethodSubClaims
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    RotateKeyOutput:
      description: RotateKeyOutput defines output of RotateKey operation
      example:
        next_rotation_date: 2000-01-23T04:56:07.000+00:00
        new_item_version: 0
      properties:
        new_item_version:
          format: int32
          type: integer
          x-go-name: NewKeyVersion
        next_rotation_date:
          format: date-time
          type: string
          x-go-name: NextRotationDate
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    Rules:
      example:
        path_rules:
        - path: path
          capabilities:
          - capabilities
          - capabilities
          type: type
        - path: path
          capabilities:
          - capabilities
          - capabilities
          type: type
        admin: true
      properties:
        admin:
          description: Is admin
          type: boolean
          x-go-name: Admin
        path_rules:
          description: The path the rules refers to
          items:
            $ref: '#/components/schemas/PathRule'
          type: array
          x-go-name: PathRules
      title: Rules are a part of AKEYLESS RBAC.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SAMLAccessRules:
      example:
        idp_metadata_url: idp_metadata_url
        bound_attributes:
        - values:
          - values
          - values
          name: name
        - values:
          - values
          - values
          name: name
        idp_metadata_xml: idp_metadata_xml
      properties:
        bound_attributes:
          description: The attributes that login is restricted to.
          items:
            $ref: '#/components/schemas/SAMLAttribute'
          type: array
          x-go-name: BoundAttributes
        idp_metadata_url:
          description: IDP metadata url
          type: string
          x-go-name: IDPMetadataURL
        idp_metadata_xml:
          description: IDP metadata XML
          type: string
          x-go-name: IDPMetadataXML
      title: SAMLAccessRules defines access rules specific to SAML authentication
        method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SAMLAttribute:
      example:
        values:
        - values
        - values
        name: name
      properties:
        name:
          type: string
          x-go-name: Name
        values:
          items:
            type: string
          type: array
          x-go-name: Values
      title: SAMLAttribute defines an attribute of SAML authentication.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SSHCertificateIssueDetails:
      example:
        static_key_id: static_key_id
        allowed_users:
        - allowed_users
        - allowed_users
        cert_type: 5
        extensions:
          key: extensions
        allowed_domains:
        - allowed_domains
        - allowed_domains
        critical_options:
          key: critical_options
        principals:
        - principals
        - principals
        allowed_user_key_lengths:
          key: 5
      properties:
        allowed_domains:
          description: Relevant for host certificate
          items:
            type: string
          type: array
          x-go-name: AllowedDomains
        allowed_user_key_lengths:
          additionalProperties:
            format: int64
            type: integer
          type: object
          x-go-name: AllowedUserKeyLengths
        allowed_users:
          description: Relevant for user certificate
          items:
            type: string
          type: array
          x-go-name: AllowedUsers
        cert_type:
          format: uint32
          title: SSHCertificateType defines the types of SSH certificates.
          type: integer
          x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
        critical_options:
          additionalProperties:
            type: string
          type: object
          x-go-name: CriticalOptions
        extensions:
          additionalProperties:
            type: string
          type: object
          x-go-name: Extensions
        principals:
          items:
            type: string
          type: array
          x-go-name: Principals
        static_key_id:
          description: In case it is empty, the key ID will be combination of user
            identifiers and a random string
          type: string
          x-go-name: StaticKeyID
      title: SSHCertificateIssueDetails defines SSH certificate details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    SSHCertificateType:
      format: uint32
      title: SSHCertificateType defines the types of SSH certificates.
      type: integer
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    UIDTokenDetails:
      example:
        deny_inheritance: true
        depth: 1
        last_rotate: last_rotate
        children: {}
        comment: comment
        id: id
        revoked: true
        ttl: 5
        deny_rotate: true
        expired_date: expired_date
      properties:
        children:
          additionalProperties:
            $ref: '#/components/schemas/UIDTokenDetails'
          type: object
          x-go-name: Children
        comment:
          type: string
          x-go-name: Comment
        deny_inheritance:
          type: boolean
          x-go-name: DenyInheritance
        deny_rotate:
          type: boolean
          x-go-name: DenyRotate
        depth:
          format: uint16
          type: integer
          x-go-name: Depth
        expired_date:
          type: string
          x-go-name: ExpiredDate
        id:
          type: string
          x-go-name: ID
        last_rotate:
          type: string
          x-go-name: LastRotate
        revoked:
          type: boolean
          x-go-name: Revoked
        ttl:
          format: int32
          type: integer
          x-go-name: TTL
      title: UIDTokenDetails Universal identity type.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    UniversalIdentityAccessRules:
      example:
        deny_inheritance: true
        ttl: 6
        deny_rotate: true
      properties:
        deny_inheritance:
          type: boolean
          x-go-name: DenyInheritance
        deny_rotate:
          type: boolean
          x-go-name: DenyRotate
        ttl:
          format: int32
          type: integer
          x-go-name: TTL
      title: UniversalIdentityAccessRules contains access rules specific to Universal
        Identity.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    UniversalIdentityDetails:
      example:
        number_of_tokens: 6
        max_depth: 0
        root:
          deny_inheritance: true
          depth: 1
          last_rotate: last_rotate
          children: {}
          comment: comment
          id: id
          revoked: true
          ttl: 5
          deny_rotate: true
          expired_date: expired_date
      properties:
        max_depth:
          format: uint16
          type: integer
          x-go-name: MaxDepth
        number_of_tokens:
          format: int64
          type: integer
          x-go-name: NumberOfTokens
        root:
          $ref: '#/components/schemas/UIDTokenDetails'
      title: UniversalIdentityDetails Universal identity type.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/infra/types
    assocRoleAuthMethod:
      description: |-
        assocRoleAuthMethod is a command that creates an association between role
        and auth method.
      properties:
        am-name:
          description: The auth method to associate
          type: string
          x-go-name: AuthMethodName
        role-name:
          description: The role to associate
          type: string
          x-go-name: RoleName
        sub-claims:
          additionalProperties:
            type: string
          description: key/val of sub claims, e.g group=admins,developers
          type: object
          x-go-name: SubClaims
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - am-name
      - role-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    auth:
      properties:
        access-id:
          description: Access ID
          type: string
          x-go-name: AccessID
        access-key:
          description: Access key (relevant only for access-type=access_key)
          type: string
          x-go-name: AccessKey
        access-type:
          default: access_key
          description: |-
            Access Type
            (access_key/password/saml/ldap/azure_ad/aws_iam/universal_identity/jwt)
          type: string
          x-go-name: AccessType
        admin-email:
          description: Email (relevant only for access-type=password)
          type: string
          x-go-name: AdminEmail
        admin-password:
          description: Password (relevant only for access-type=password)
          type: string
          x-go-name: AdminPass
        cloud-id:
          description: The cloud identity (relevant only for access-type=azure_ad,aws_iam)
          type: string
          x-go-name: CloudIdentity
        jwt:
          description: The Json Web Token (relevant only for access-type=jwt/oidc)
          type: string
          x-go-name: JWT
        ldap_password:
          description: LDAP password (relevant only for access-type=ldap)
          type: string
          x-go-name: LDAPPassword
        ldap_proxy_url:
          description: Address URL for LDAP proxy (relevant only for access-type=ldap)
          type: string
          x-go-name: LDAPProxyURL
        ldap_username:
          description: LDAP username (relevant only for access-type=ldap)
          type: string
          x-go-name: LDAPUsername
        uid_token:
          description: |-
            The universal_identity token (relevant only for
            access-type=universal_identity)
          type: string
          x-go-name: UIDToken
      title: auth is a command that creates temporary access credentials.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    authOutput:
      example:
        token: token
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    clientData:
      properties:
        clientCertificateData:
          type: string
          x-go-name: ClientCertificateData
        clientKeyData:
          type: string
          x-go-name: ClientKeyData
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    configure:
      properties:
        access-id:
          description: Access ID
          type: string
          x-go-name: AccessID
        access-key:
          description: Access Key
          type: string
          x-go-name: AccessKey
        access-type:
          default: access_key
          description: Access Type (access_key/password/azure_ad/saml/ldap/aws_iam)
          type: string
          x-go-name: AccessType
        admin-email:
          description: Email (relevant only for access-type=password)
          type: string
          x-go-name: AdminEmail
        admin-password:
          description: Password (relevant only for access-type=password)
          type: string
          x-go-name: AdminPass
        azure_ad_object_id:
          description: Azure Active Directory ObjectId (relevant only for access-type=azure_ad)
          type: string
          x-go-name: AzureAdObjectID
        ldap_proxy_url:
          description: Address URL for ldap proxy (relevant only for access-type=ldap)
          type: string
          x-go-name: LDAPProxyURL
      title: configure is a command that creates a new Akeyless profile.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    configureOutput:
      example:
        profile: profile
        token: token
      properties:
        profile:
          type: string
          x-go-name: Profile
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethod:
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist with the IPs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createAuthMethod is a command that creates a new auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodAWSIAM:
      description: |-
        createAuthMethodAWSIAM is a command that creates a new Auth Method that will
        be able to authenticate using AWS IAM credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-arn:
          description: A list of full arns that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundArn
        bound-aws-account-id:
          description: A list of AWS account-IDs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundAccountID
        bound-ips:
          description: A CIDR whitelist of the IPs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-resource-id:
          description: A list of full resource ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundResourceID
        bound-role-id:
          description: A list of full role ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundRoleID
        bound-role-name:
          description: A list of full role-name that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundRoleName
        bound-user-id:
          description: A list of full user ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserID
        bound-user-name:
          description: A list of full user-name that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserName
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        sts-url:
          default: https://sts.amazonaws.com
          description: sts URL
          type: string
          x-go-name: STSEndpoint
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - bound-aws-account-id
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodAWSIAMOutput:
      example:
        access_id: access_id
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodAzureAD:
      description: |-
        createAuthMethodAzureAD is a command that creates a new auth method that
        will be able to authenticate using Azure Active Directory credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          default: https://management.azure.com/
          description: The audience in the JWT
          type: string
          x-go-name: Audience
        bound-group-id:
          description: A list of group ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundGroupIDs
        bound-ips:
          description: A CIDR whitelist of the IPs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-providers:
          description: |-
            A list of resource providers that the access is restricted to (e.g,
            Microsoft.Compute, Microsoft.ManagedIdentity, etc)
          items:
            type: string
          type: array
          x-go-name: BoundResourceProviders
        bound-resource-id:
          description: A list of full resource ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundResourceIds
        bound-resource-names:
          description: |-
            A list of resource names that the access is restricted to (e.g, a
            virtual machine name, scale set name, etc).
          items:
            type: string
          type: array
          x-go-name: BoundResourceNames
        bound-resource-types:
          description: |-
            A list of resource types that the access is restricted to (e.g,
            virtualMachines, userAssignedIdentities, etc)
          items:
            type: string
          type: array
          x-go-name: BoundResourceTypes
        bound-rg-id:
          description: A list of resource groups that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundResourceGroups
        bound-spid:
          description: A list of service principal IDs that the access is restricted
            to
          items:
            type: string
          type: array
          x-go-name: BoundServicePrincipalIDs
        bound-sub-id:
          description: A list of subscription ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundSubscriptionsIDs
        bound-tenant-id:
          description: The Azure tenant id that the access is restricted to
          type: string
          x-go-name: BoundTenantID
        issuer:
          default: https://sts.windows.net/---bound_tenant_id---
          description: Issuer URL
          type: string
          x-go-name: Issuer
        jwks-uri:
          default: https://login.microsoftonline.com/common/discovery/keys
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - bound-tenant-id
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodAzureADOutput:
      example:
        access_id: access_id
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodHuawei:
      description: |-
        createAuthMethodHuawei is a command that creates a new auth method that will
        be able to authenticate using Huawei credentials.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        auth-url:
          default: https://iam.myhwclouds.com:443/v3
          description: sts URL
          type: string
          x-go-name: AuthEndpoint
        bound-domain-id:
          description: A list of domain IDs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundDomainID
        bound-domain-name:
          description: A list of domain names that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundDomainIDName
        bound-ips:
          description: A CIDR whitelist of the IPs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        bound-tenant-id:
          description: A list of full tenant ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundTenantID
        bound-tenant-name:
          description: A list of full tenant names that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundTenantName
        bound-user-id:
          description: A list of full user ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserID
        bound-user-name:
          description: A list of full user-name that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundUserName
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodHuaweiOutput:
      example:
        access_id: access_id
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodLDAP:
      description: |-
        createAuthMethodLDAP is a command that creates a new auth method that will
        be able to authenticate using LDAP.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist of the IPs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        public-key-file-path:
          description: |-
            A public key generated for LDAP authentication method on Akeyless
            [RSA2048]
          type: string
          x-go-name: PublicKeyFilePath
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - public-key-file-path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodLDAPOutput:
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodOAuth2:
      description: |-
        createAuthMethodOAuth2 is a command that creates a new auth method that will
        be able to authenticate using OpenID/Oauth2.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        audience:
          description: The audience in the JWT
          type: string
          x-go-name: Audience
        bound-client-ids:
          description: The clients ids that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: BoundClientID
        bound-ips:
          description: A CIDR whitelist of the IPs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        issuer:
          description: Issuer URL
          type: string
          x-go-name: Issuer
        jwks-uri:
          description: |-
            The URL to the JSON Web Key Set (JWKS) that containing the public keys
            that should be used to verify any JSON Web Token (JWT) issued by the
            authorization server.
          type: string
          x-go-name: JWKeySetURL
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - jwks-uri
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodOAuth2Output:
      example:
        access_id: access_id
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodOutput:
      example:
        access_key: access_key
        name: name
        access_id: access_id
      properties:
        access_id:
          type: string
          x-go-name: AccessID
        access_key:
          type: string
          x-go-name: AccessKey
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodSAML:
      description: |-
        createAuthMethodSAML is a command that creates a new auth method that will
        be available to authenticate using SAML.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist of the IPs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        idp-metadata-url:
          description: IDP metadata url
          type: string
          x-go-name: IDPMetadataURL
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodSAMLOutput:
      example:
        access_id: access_id
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodUniversalIdentity:
      description: |-
        createAuthMethodUniversalIdentity is a command that creates a new auth
        method that will be able to authenticate using Akeyless Universal Identity.
      properties:
        access-expires:
          default: 0
          description: |-
            Access expiration date in Unix timestamp (select 0 for access without
            expiry date)
          format: int64
          type: integer
          x-go-name: AccessExpires
        bound-ips:
          description: A CIDR whitelist of the IPs that the access is restricted to
          items:
            type: string
          type: array
          x-go-name: CIDRWhitelist
        deny-inheritance:
          description: Deny from root to create children
          type: boolean
          x-go-name: BoundDenyInheritance
        deny-rotate:
          description: Deny from the token to rotate
          type: boolean
          x-go-name: BoundDenyRotate
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: Token ttl
          format: int32
          type: integer
          x-go-name: BoundTTL
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createAuthMethodUniversalIdentityOutput:
      example:
        access_id: access_id
      properties:
        access_id:
          type: string
          x-go-name: AccessID
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDynamicSecret:
      properties:
        key:
          description: |-
            The name of a key that used to encrypt the dynamic secret values (if
            empty, the account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        metadata:
          default: None
          description: Metadata about the dynamic secret
          type: string
          x-go-name: Metadata
        name:
          description: Dynamic secret name
          type: string
          x-go-name: DynamicSecretName
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createDynamicSecret is a command that creates a new dynamic secret item.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createDynamicSecretOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createKey:
      properties:
        alg:
          description: |-
            Key type; options: [AES128GCM, AES256GCM, AES128SIV, AES256SIV, RSA1024,
            RSA2048]
          type: string
          x-go-name: Alg
        customer-frg-id:
          description: |-
            The customer fragment ID that will be used to create the key (if empty,
            the key will be created independently of a customer fragment)
          type: string
          x-go-name: CustomerFragmentID
        metadata:
          description: Metadata about the key
          type: string
          x-go-name: Metadata
        name:
          description: Key name
          type: string
          x-go-name: KeyName
        split-level:
          default: 2
          description: |-
            The number of fragments that the item will be split into (not includes
            customer fragment)
          format: int64
          type: integer
          x-go-name: SplitLevel
        tag:
          description: List of the tags attached to this key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - alg
      - name
      title: createKey is a command that creates a new key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createKeyOutput:
      example:
        fragment_results:
        - null
        - null
      properties:
        fragment_results:
          items:
            $ref: '#/components/schemas/Duration'
          type: array
          x-go-name: FragmentResults
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createPKICertIssuer:
      properties:
        allow-any-name:
          description: If set, clients can request certificates for any CN
          type: boolean
          x-go-name: AllowAnyName
        allow-subdomains:
          description: |-
            If set, clients can request certificates for subdomains and wildcard
            subdomains of the allowed domains
          type: boolean
          x-go-name: AllowSubdomains
        allowed-domains:
          description: |-
            A list of the allowed domains that clients can request to be included in
            the certificate (in a comma-delimited list)
          type: string
          x-go-name: AllowedDomains
        allowed-uri-sans:
          description: |-
            A list of the allowed URIs that clients can request to be included in
            the certificate as part of the URI Subject Alternative Names (in a
            comma-delimited list)
          type: string
          x-go-name: AllowedURISANs
        client-flag:
          description: If set, certificates will be flagged for client auth use
          type: boolean
          x-go-name: ClientFlag
        code-signing-flag:
          description: If set, certificates will be flagged for code signing use
          type: boolean
          x-go-name: CodeSigningFlag
        country:
          description: |-
            A comma-separated list of the country that will be set in the issued
            certificate
          type: string
          x-go-name: Country
        key-usage:
          default: DigitalSignature,KeyAgreement,KeyEncipherment
          description: key-usage
          type: string
          x-go-name: KeyUsage
        locality:
          description: |-
            A comma-separated list of the locality that will be set in the issued
            certificate
          type: string
          x-go-name: Locality
        metadata:
          description: A metadata about the issuer
          type: string
          x-go-name: Metadata
        name:
          description: PKI certificate issuer name
          type: string
          x-go-name: IssuerName
        not-enforce-hostnames:
          description: |-
            If set, any names are allowed for CN and SANs in the certificate and not
            only a valid host name
          type: boolean
          x-go-name: NotEnforceHostnames
        not-require-cn:
          description: If set, clients can request certificates without a CN
          type: boolean
          x-go-name: NotRequireCN
        organizational-units:
          description: |-
            A comma-separated list of organizational units (OU) that will be set in
            the issued certificate
          type: string
          x-go-name: OrganizationalUnits
        organizations:
          description: |-
            A comma-separated list of organizations (O) that will be set in the
            issued certificate
          type: string
          x-go-name: Organizations
        postal-code:
          description: |-
            A comma-separated list of the postal code that will be set in the issued
            certificate
          type: string
          x-go-name: PostalCode
        province:
          description: |-
            A comma-separated list of the province that will be set in the issued
            certificate
          type: string
          x-go-name: Province
        server-flag:
          description: If set, certificates will be flagged for server auth use
          type: boolean
          x-go-name: ServerFlag
        signer-key-name:
          description: A key to sign the certificate with
          type: string
          x-go-name: SignerKeyName
        street-address:
          description: |-
            A comma-separated list of the street address that will be set in the
            issued certificate
          type: string
          x-go-name: StreetAddress
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: The requested Time To Live for the certificate, use second
            units
          format: int64
          type: integer
          x-go-name: TTL
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - signer-key-name
      - ttl
      title: createPKICertIssuer is a command that creates a new PKI certificate issuer.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createPKICertIssuerOutput:
      example:
        name: name
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createRole:
      properties:
        comment:
          description: Comment about the role
          type: string
          x-go-name: Comment
        name:
          description: Role name
          type: string
          x-go-name: RoleName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: createRole is a command that creates a new role.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createRoleOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSSHCertIssuer:
      properties:
        allowed-users:
          description: Users allowed to fetch the certificate, e.g root,ubuntu
          type: string
          x-go-name: AllowedUsers
        extensions:
          additionalProperties:
            type: string
          description: Signed certificates with extensions, e.g permit-port-forwarding=\"\"
          type: object
          x-go-name: Extensions
        metadata:
          description: A metadata about the issuer
          type: string
          x-go-name: Metadata
        name:
          description: SSH certificate issuer name
          type: string
          x-go-name: IssuerName
        principals:
          description: Signed certificates with principal, e.g example_role1,example_role2
          type: string
          x-go-name: Principals
        signer-key-name:
          description: A key to sign the certificate with
          type: string
          x-go-name: SignerKeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        ttl:
          description: The requested Time To Live for the certificate, use second
            units
          format: int64
          type: integer
          x-go-name: TTL
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - allowed-users
      - name
      - signer-key-name
      - ttl
      title: createSSHCertIssuer is a command that creates a new SSH certificate issuer.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSSHCertIssuerOutput:
      example:
        name: name
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSecret:
      properties:
        metadata:
          description: Metadata about the secret
          type: string
          x-go-name: Metadata
        multiline_value:
          description: The provided value is a multiline value (separated by '\n')
          type: boolean
          x-go-name: MultilineValue
        name:
          description: Secret name
          type: string
          x-go-name: SecretName
        protection_key:
          description: |-
            The name of a key that used to encrypt the secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        tags:
          description: List of the tags attached to this secret
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        value:
          description: The secret value
          type: string
          x-go-name: Value
      required:
      - name
      - value
      title: createSecret is a command that creates a static secret.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    createSecretOutput:
      example:
        name: name
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decrypt:
      description: |-
        decrypt is a command that decrypts ciphertext into plaintext by using an AES
        key.
      properties:
        ciphertext:
          description: Ciphertext to be decrypted in base64 encoded format
          type: string
          x-go-name: Ciphertext
        encryption-context:
          additionalProperties:
            type: string
          description: |-
            The encryption context. If this was specified in the encrypt command, it
            must be specified here or the decryption operation will fail
          type: object
          x-go-name: EncContext
        key-name:
          description: The name of the key to use in the decryption process
          type: string
          x-go-name: KeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - ciphertext
      - key-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptFile:
      properties:
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: decryptFile is a command that decrypts a file using an AES key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptFileOutput:
      properties:
        path:
          type: string
          x-go-name: Path
        plain_text:
          type: string
          x-go-name: PlainText
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptOutput:
      example:
        result: result
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptPKCS1:
      properties:
        ciphertext:
          description: Ciphertext to be decrypted in base64 encoded format
          type: string
          x-go-name: Ciphertext
        key-name:
          description: The name of the RSA key to use in the decryption process
          type: string
          x-go-name: KeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - ciphertext
      - key-name
      title: decryptPKCS1 is a command that decrypts plaintext using RSA and the padding
        scheme from PKCS#1 v1.5.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    decryptPKCS1Output:
      example:
        plaintext: plaintext
      properties:
        plaintext:
          type: string
          x-go-name: Plaintext
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteAuthMethod:
      properties:
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: deleteAuthMethod is a command that deletes the auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteAuthMethodOutput:
      example:
        name: name
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteAuthMethods:
      description: |-
        deleteAuthMethods is a command that deletes multiple auth methods from a
        given path.
      properties:
        path:
          description: Path to delete the auth methods from
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteAuthMethodsOutput:
      example:
        path: path
      properties:
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteItem:
      properties:
        delete-immediately:
          default: false
          description: When delete-in-days=-1, must be set
          type: boolean
          x-go-name: DeleteImmediately
        delete-in-days:
          default: 7
          description: |-
            The number of days to wait before deleting the item (relevant for keys
            only)
          format: int64
          type: integer
          x-go-name: DeleteInDays
        name:
          description: Item name
          type: string
          x-go-name: ItemName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          default: -1
          description: |-
            The specific version you want to delete - 0=last version, -1=entire item
            with all versions (default)
          format: int32
          type: integer
          x-go-name: Version
      required:
      - name
      title: deleteItem is a command that deletes an item from Akeyless.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteItems:
      properties:
        path:
          description: Path to delete the items from
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      title: deleteItems is a command that deletes multiple items from a given path.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteItemsOutput:
      example:
        path: path
      properties:
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRole:
      properties:
        name:
          description: Role name
          type: string
          x-go-name: RoleName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: deleteRole is a command that deletes a role.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleAssociation:
      description: |-
        deleteRoleAssociation is a command that deletes an association between role
        and auth method.
      properties:
        assoc-id:
          description: The association id to be deleted
          type: string
          x-go-name: AssocID
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - assoc-id
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleAssociationOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleRule:
      properties:
        path:
          description: The path the rule refers to
          type: string
          x-go-name: Path
        role-name:
          description: The role name to be updated
          type: string
          x-go-name: RoleName
        rule-type:
          default: item-rule
          description: item-rule, role-rule or auth-method-rule
          type: string
          x-go-name: RuleType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      - role-name
      title: deleteRoleRule is a command that deletes a rule from a role.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoleRuleOutput:
      example:
        result: result
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRoles:
      properties:
        path:
          description: Path to delete the auth methods from
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      title: deleteRoles is a command that deletes multiple roles from a given path.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    deleteRolesOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    describeItem:
      properties:
        name:
          description: Item name
          type: string
          x-go-name: ItemName
        show-versions:
          default: false
          description: Include all item versions in reply
          type: boolean
          x-go-name: ShowVersions
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: describeItem is a command that returns a single item.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encrypt:
      properties:
        encryption-context:
          additionalProperties:
            type: string
          description: |-
            name-value pair that specifies the encryption context to be used for
            authenticated encryption. If used here, the same value must be supplied
            to the decrypt command or decryption will fail
          type: object
          x-go-name: EncContext
        key-name:
          description: The name of the key to use in the encryption process
          type: string
          x-go-name: KeyName
        plaintext:
          description: Data to be encrypted
          type: string
          x-go-name: Plaintext
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      - plaintext
      title: encrypt is a command that encrypts plaintext into ciphertext by using
        an AES key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptFile:
      properties:
        encryption-context:
          additionalProperties:
            type: string
          description: |-
            name-value pair that specifies the encryption context to be used for
            authenticated encryption. If used here, the same value must be supplied
            to the decrypt command or decryption will fail
          type: object
          x-go-name: EncContext
        in:
          description: |-
            Path to the file to be encrypted. If not provided, the content will be
            taken from stdin
          type: string
          x-go-name: InputFile
        key-name:
          description: The name of the key to use in the encryption process
          type: string
          x-go-name: KeyName
        out:
          description: |-
            Path to the output file. If not provided, the output will be sent to
            stdout
          type: string
          x-go-name: OutputFilePath
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - in
      - key-name
      title: encryptFile is a command that encrypts a file by using an AES key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptFileOutput:
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptPKCS1:
      properties:
        key-name:
          description: The name of the RSA key to use in the encryption process
          type: string
          x-go-name: KeyName
        plaintext:
          description: Data to be encrypted
          type: string
          x-go-name: Plaintext
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      - plaintext
      title: encryptPKCS1 is a command that encrypts the given message with RSA and
        the padding scheme PKCS#1 v1.5.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    encryptPKCS1Output:
      example:
        result:
        - 0
        - 0
      properties:
        result:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    genCustomerFragment:
      properties:
        description:
          description: The Customer Fragment Description
          type: string
          x-go-name: Description
      title: genCustomerFragment is a command that generates customer fragment.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getAuthMethod:
      properties:
        name:
          description: Auth Method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getAuthMethod is a command that returns information about the auth method.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getCloudIdentity:
      description: |-
        getCloudIdentity is a command that gets Cloud Identity Token (relevant only
        for access-type=azure_ad, aws_iam).
      properties:
        azure_ad_object_id:
          description: Azure Active Directory ObjectId (relevant only for access-type=azure_ad)
          type: string
          x-go-name: AzureADObjectID
        url_safe:
          description: escapes the token so it can be safely placed inside a URL query
          type: boolean
          x-go-name: URLEncoding
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getCloudIdentityOutput:
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getDynamicSecretValue:
      properties:
        name:
          description: Dynamic secret name
          type: string
          x-go-name: DynamicSecretName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getDynamicSecretValue is a command that gets dynamic secret value.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getKubeExecCreds:
      description: |-
        getKubeExecCreds is a command that gets credentials for authentication with
        Kubernetes cluster based on a PKI cert issuer.
      properties:
        alt-names:
          description: |-
            The Subject Alternative Names to be included in the PKI certificate (in
            a comma-delimited list)
          type: string
          x-go-name: AltNames
        cert-issuer-name:
          description: The name of the PKI certificate issuer
          type: string
          x-go-name: CertIssuerName
        common-name:
          description: The common name to be included in the PKI certificate
          type: string
          x-go-name: CommonName
        key-file-path:
          description: |-
            The client public or private key file path (in case of a private key, it
            will be use to extract the public key)
          type: string
          x-go-name: KeyFilePath
        outfile:
          description: |-
            Output file path with the certificate. If not provided, the file with
            the certificate will be created in the same location of the provided
            public key with the -cert extension
          type: string
          x-go-name: OutFilePath
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        uri-sans:
          description: |-
            The URI Subject Alternative Names to be included in the PKI certificate
            (in a comma-delimited list)
          type: string
          x-go-name: URISANs
      required:
      - cert-issuer-name
      - key-file-path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getKubeExecCredsOutput:
      properties:
        apiVersion:
          type: string
          x-go-name: APIVersion
        kind:
          type: string
          x-go-name: Kind
        status:
          $ref: '#/components/schemas/clientData'
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getPKICertificateOutput:
      properties:
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getRSAPublic:
      description: |-
        getRSAPublic is a command that obtains the public key from a specific RSA
        private key.
      properties:
        name:
          description: Name of RSA key to extract the public key from
          type: string
          x-go-name: KeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getRSAPublicOutput:
      example:
        raw: raw
        ssh:
        - 0
        - 0
      properties:
        raw:
          type: string
          x-go-name: Raw
        ssh:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: SSH
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getRole:
      properties:
        name:
          description: Role name
          type: string
          x-go-name: RoleName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: getRole is a command that returns role details.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getSSHCertificate:
      properties:
        cert-issuer-name:
          description: The name of the SSH certificate issuer
          type: string
          x-go-name: CertIssuerName
        cert-username:
          description: The username to sign in the SSH certificate
          type: string
          x-go-name: Username
        public-key-data:
          description: |-
            SSH public key file contents. If this option is used, the certificate
            will be printed to stdout
          type: string
          x-go-name: PublicKeyData
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - cert-issuer-name
      - cert-username
      title: getSSHCertificate is a command that generates SSH certificate.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getSSHCertificateOutput:
      example:
        path: path
        data: data
      properties:
        data:
          type: string
          x-go-name: Data
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    getSecretValue:
      properties:
        names:
          description: Secret name
          items:
            type: string
          type: array
          x-go-name: Names
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          description: Secret version
          format: int32
          type: integer
          x-go-name: Version
      required:
      - names
      title: getSecretValue is a command that creates a new Akeyless profile.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listAuthMethods:
      description: |-
        listAuthMethods is a command that returns a list of all auth methods in the
        account.
      properties:
        pagination-token:
          description: Next page reference
          type: string
          x-go-name: PaginationToken
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listItems:
      properties:
        filter:
          description: Filter by item name or part of it
          type: string
          x-go-name: Filter
        pagination-token:
          description: Next page reference
          type: string
          x-go-name: PaginationToken
        path:
          description: Path to folder
          type: string
          x-go-name: Path
        tag:
          description: Filter by item tag
          type: string
          x-go-name: Tag
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: |-
            The item types list of the requested items. In case it is empty, all
            types of items will be returned. options: [key, static-secret,
            dynamic-secret]
          items:
            type: string
          type: array
          x-go-name: Types
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: listItems is a command that returns items list.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    listRoles:
      properties:
        pagination-token:
          description: Next page reference
          type: string
          x-go-name: PaginationToken
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: listRoles is a command that returns a list of roles.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    moveObjects:
      properties:
        objects-type:
          default: item
          description: The objects type to move (item/auth_method/role)
          type: string
          x-go-name: ObjectsType
        source:
          description: Source path to move the objects from
          type: string
          x-go-name: SourcePath
        target:
          description: Target path to move the objects to
          type: string
          x-go-name: TargetPath
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - source
      - target
      title: moveObjects is a command that moves/renames objects.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    moveObjectsOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    refreshKey:
      properties:
        name:
          description: Key name
          type: string
          x-go-name: KeyName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: refreshKey is a command that refreshes a key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    refreshKeyOutput:
      example:
        result: result
      properties:
        result:
          type: string
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    reverseRBAC:
      description: |-
        reverseRBAC is a command that shows which auth methods have access to a
        particular object.
      properties:
        path:
          description: Path to an object
          type: string
          x-go-name: Path
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        type:
          description: Type of object (item, am, role)
          type: string
          x-go-name: Type
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - path
      - type
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    rollbackSecret:
      properties:
        name:
          description: Secret name
          type: string
          x-go-name: SecretName
        old-version:
          description: Old secret version to rollback to
          format: int32
          type: integer
          x-go-name: OldSecretVersion
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      - old-version
      title: rollbackSecret is a command that rollbacks secret to older version.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    rollbackSecretOutput:
      example:
        name: name
        version: 0
      properties:
        name:
          type: string
          x-go-name: Name
        version:
          format: int32
          type: integer
          x-go-name: Version
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    rotateKey:
      description: |-
        rotateKey is a command that rotates an existing key, creating a new version
        of it.
      properties:
        auto-rotate:
          description: |-
            Whether to automatically rotate every --rotation-interval days, or
            disable existing automatic rotation
          type: string
          x-go-name: AutoRotate
        name:
          description: Key name
          type: string
          x-go-name: KeyName
        rotation-interval:
          description: The number of days to wait between every automatic key rotation
            (7-365)
          type: string
          x-go-name: RotationInterval
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    setItemState:
      properties:
        desired-state:
          description: Desired item state (Enabled, Disabled)
          type: string
          x-go-name: State
        name:
          description: Current item name
          type: string
          x-go-name: ItemName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        version:
          default: 0
          description: 'The specific version you want to update: 0=item level state
            (default)'
          format: int32
          type: integer
          x-go-name: Version
      required:
      - desired-state
      - name
      title: setItemState is a command that sets item's state to enabled/disabled.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    setItemStateOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    setRoleRule:
      properties:
        capability:
          description: |-
            List of the approved/denied capabilities in the path options: [read,
            create, update, delete, list, deny]
          items:
            type: string
          type: array
          x-go-name: Capabilities
        path:
          description: The path the rule refers to
          type: string
          x-go-name: Path
        role-name:
          description: The role name to be updated
          type: string
          x-go-name: RoleName
        rule-type:
          default: item-rule
          description: item-rule, role-rule or auth-method-rule
          type: string
          x-go-name: RuleType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - capability
      - path
      - role-name
      title: setRoleRule is a command that sets a rule to a role.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    setRoleRuleOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signPKCS1:
      description: |-
        signPKCS1 is a command that calculates the signature of hashed data using
        RSASSA-PKCS1-V1_5-SIGN from RSA PKCS#1 v1.5.
      properties:
        key-name:
          description: The name of the RSA key to use in the signing process
          type: string
          x-go-name: KeyName
        message:
          description: The message to be signed
          type: string
          x-go-name: Message
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      - message
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    signPKCS1Output:
      example:
        result:
        - 0
        - 0
      properties:
        result:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: Result
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    staticCredsAuth:
      description: |-
        staticCredsAuth is a command that creates a temporary access profile using
        the provided static credentials.
      properties:
        access-id:
          description: Akeyless JWT token
          type: string
          x-go-name: AccessID
        admin-email:
          description: Akeyless JWT token
          type: string
          x-go-name: AdminEmail
        creds:
          description: Akeyless JWT token
          type: string
          x-go-name: Creds
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    staticCredsAuthOutput:
      example:
        token: token
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidCreateChildToken:
      description: |-
        uidCreateChildToken is a command that creates a new child token using
        Akeyless Universal Identity.
      properties:
        auth-method-name:
          description: The universal identity auth method name
          type: string
          x-go-name: AuthMethodName
        child-deny-inheritance:
          description: Deny from new child to create their own children
          type: boolean
          x-go-name: ChildDenyInheritance
        child-deny-rotate:
          description: Deny from new child to rotate
          type: boolean
          x-go-name: ChildDenyRotate
        child-ttl:
          description: New child token ttl
          format: int32
          type: integer
          x-go-name: ChildTTL
        comment:
          description: New Token comment
          type: string
          x-go-name: Comment
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidCreateChildTokenOutput:
      example:
        token: token
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidGenerateToken:
      description: |-
        uidGenerateToken is a command that generates a new token using Akeyless
        Universal Identity.
      properties:
        auth-method-name:
          description: The universal identity auth method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - auth-method-name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidGenerateTokenOutput:
      example:
        token: token
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidListChildren:
      description: |-
        uidListChildren is a command that lists child token ids of Akeyless
        Universal Identity.
      properties:
        auth-method-name:
          description: The universal identity auth method name
          type: string
          x-go-name: AuthMethodName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidRevokeToken:
      properties:
        auth-method-name:
          description: The universal identity auth method name
          type: string
          x-go-name: AuthMethodName
        revoke-token:
          description: the universal identity token/token-id to revoke
          type: string
          x-go-name: RevokeToken
        revoke-type:
          description: |-
            revokeSelf/revokeAll (delete only this token/this token and his
            children)
          type: string
          x-go-name: RevokeType
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - revoke-token
      - revoke-type
      title: uidRevokeToken is a command that revokes universal identity token.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidRevokeTokenOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidRotateToken:
      description: |-
        uidRotateToken is a command that rotates an Akeyless Universal Identity
        token.
      properties:
        fork:
          description: Create a new child token with default parameters
          type: boolean
          x-go-name: Fork
        send-manual-ack-token:
          description: |-
            The new rotated token to send manual ack for (with
            uid-token=the-orig-token)
          type: string
          x-go-name: SendManualAckToken
        uid-token:
          description: The Universal identity token
          type: string
          x-go-name: UIDToken
        with-manual-ack:
          description: Disable automatic ack
          type: boolean
          x-go-name: WithManualAck
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uidRotateTokenOutput:
      example:
        token: token
      properties:
        token:
          type: string
          x-go-name: Token
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    unconfigure:
      properties:
        profile:
          default: default
          description: The profile name to be removed
          type: string
          x-go-name: Profile
      title: unconfigure is a command that removes configuration of client profile.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    unconfigureOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    update:
      properties:
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      title: update is a command that updates to the latest AKEYLESS CLI version.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateItem:
      properties:
        add-tag:
          description: List of the new tags that will be attached to this item
          items:
            type: string
          type: array
          x-go-name: AddTags
        name:
          description: Current item name
          type: string
          x-go-name: ItemName
        new-metadata:
          default: default_metadata
          description: New item metadata
          type: string
          x-go-name: NewMetadata
        new-name:
          description: New item name
          type: string
          x-go-name: NewName
        rm-tag:
          description: List of the existent tags that will be removed from this item
          items:
            type: string
          type: array
          x-go-name: RemoveTags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateItem is a command that updates item.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateItemOutput:
      example:
        updated: true
      properties:
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateOutput:
      properties:
        latest:
          type: string
          x-go-name: Latest
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRole:
      properties:
        analytics-access:
          description: |-
            Allow this role to view analytics. Currently only 'none' and 'self'
            values are supported, allowing associated auth methods to view reports
            produced by the same auth methods.
          type: string
          x-go-name: AnalyticsAccess
        audit-access:
          description: |-
            Allow this role to view audit logs. Currently only 'none' and 'self'
            values are supported, allowing associated auth methods to view audit
            logs produced by the same auth methods.
          type: string
          x-go-name: AuditAccess
        name:
          description: Role name
          type: string
          x-go-name: RoleName
        new-comment:
          default: default_comment
          description: New comment about the role
          type: string
          x-go-name: Comment
        new-name:
          description: New Role name
          type: string
          x-go-name: NewName
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - name
      title: updateRole is a command that updates an existing role.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateRoleOutput:
      example:
        updated: true
      properties:
        updated:
          type: boolean
          x-go-name: Updated
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSecretVal:
      properties:
        key:
          description: |-
            The name of a key that used to encrypt the secret value (if empty, the
            account default protectionKey key will be used)
          type: string
          x-go-name: ProtectionKey
        multiline:
          description: The provided value is a multiline value (separated by '\n')
          type: boolean
          x-go-name: MultilineValue
        name:
          description: Secret name
          type: string
          x-go-name: SecretName
        new-version:
          default: false
          description: Whether to create a new version of not
          type: boolean
          x-go-name: NewVersion
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
        value:
          description: The new secret value
          type: string
          x-go-name: Value
      required:
      - name
      - value
      title: updateSecretVal is a command that updates static secret value.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    updateSecretValOutput:
      example:
        name: name
      properties:
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uploadPKCS12:
      properties:
        cert:
          description: |-
            Path to a file that contain the certificate in a PEM format. If this
            parameter is not empty, the certificate will be taken from here and not
            from the PKCS#12 input file
          type: string
          x-go-name: CertFile
        customer-frg-id:
          description: |-
            The customer fragment ID that will be used to split the key (if empty,
            the key will be created independently of a customer fragment)
          type: string
          x-go-name: CustomerFragmentID
        in:
          description: PKCS#12 input file (private key and certificate only)
          type: string
          x-go-name: PKCS12File
        metadata:
          description: A metadata about the key
          type: string
          x-go-name: Metadata
        name:
          description: Name of key to be created
          type: string
          x-go-name: KeyName
        passphrase:
          description: Passphrase to unlock the pkcs#12 bundle
          type: string
          x-go-name: Passphrase
        split-level:
          default: 2
          description: The number of fragments that the item will be split into
          format: int64
          type: integer
          x-go-name: SplitLevel
        tag:
          description: List of the tags attached to this key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - in
      - name
      - passphrase
      title: uploadPKCS12 is a command that uploads a PKCS#12 key and certificates.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uploadPKCS12Output:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uploadRSA:
      properties:
        alg:
          description: 'Key type. options: [RSA1024, RSA2048]'
          type: string
          x-go-name: Alg
        cert:
          description: Path to a file that contain the certificate in a PEM format.
          type: string
          x-go-name: CertFile
        cert-file-data:
          description: Certificate in a PEM format.
          type: string
          x-go-name: CertFileData
        customer-frg-id:
          description: |-
            The customer fragment ID that will be used to split the key (if empty,
            the key will be created independently of a customer fragment)
          type: string
          x-go-name: CustomerFragmentID
        metadata:
          description: A metadata about the key
          type: string
          x-go-name: Metadata
        name:
          description: Name of key to be created
          type: string
          x-go-name: KeyName
        rsa-file-data:
          description: RSA private key data, base64 encoded
          type: string
          x-go-name: RSAFileData
        rsa-key-file-path:
          description: RSA private key file path
          type: string
          x-go-name: RSAFile
        split-level:
          default: 2
          description: The number of fragments that the item will be split into
          format: int64
          type: integer
          x-go-name: SplitLevel
        tag:
          description: List of the tags attached to this key
          items:
            type: string
          type: array
          x-go-name: Tags
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - alg
      - name
      title: uploadRSA is a command that uploads RSA key.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    uploadRSAOutput:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyPKCS1:
      properties:
        key-name:
          description: The name of the RSA key to use in the verification process
          type: string
          x-go-name: KeyName
        message:
          description: The message to be verified
          type: string
          x-go-name: Message
        signature:
          description: The message's signature
          type: string
          x-go-name: Signature
        token:
          description: Authentication token (see `/auth` and `/configure`)
          type: string
          x-go-name: Profile
        uid-token:
          description: |-
            The universal identity token, Required only for universal_identity
            authentication
          type: string
          x-go-name: UIDToken
      required:
      - key-name
      - message
      - signature
      title: verifyPKCS1 is a command that verifies an RSA PKCS#1 v1.5 signature.
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
    verifyPKCS1Output:
      type: object
      x-go-package: akeyless.io/akeyless-main-repo/go/src/client/commands
