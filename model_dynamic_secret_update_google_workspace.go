/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// DynamicSecretUpdateGoogleWorkspace dynamicSecretUpdateGoogleWorkspace is a command that updates a Google Workspace dynamic secret
type DynamicSecretUpdateGoogleWorkspace struct {
	AccessMode string `json:"access-mode"`
	// Admin user email
	AdminName string `json:"admin-name"`
	// Protection from accidental deletion of this item [true/false]
	DeleteProtection *string `json:"delete_protection,omitempty"`
	// Description of the object
	Description *string `json:"description,omitempty"`
	// Base64-encoded service account private key text
	GcpKey *string `json:"gcp-key,omitempty"`
	// A group email, relevant only for group access-mode
	GroupName *string `json:"group-name,omitempty"`
	GroupRoleType *string `json:"group-role-type,omitempty"`
	// Set output format to JSON
	Json *bool `json:"json,omitempty"`
	// Dynamic secret name
	Name string `json:"name"`
	// Dynamic secret new name
	NewName *string `json:"new-name,omitempty"`
	// Dynamic producer encryption key
	ProducerEncryptionKeyName *string `json:"producer-encryption-key-name,omitempty"`
	// Name of the admin role to assign to the user, relevant only for role access-mode
	RoleName *string `json:"role-name,omitempty"`
	RoleScope *string `json:"role-scope,omitempty"`
	// Add tags attached to this object
	Tags *[]string `json:"tags,omitempty"`
	// Name of existing target to use in producer creation
	TargetName *string `json:"target-name,omitempty"`
	// Authentication token (see `/auth` and `/configure`)
	Token *string `json:"token,omitempty"`
	// The universal identity token, Required only for universal_identity authentication
	UidToken *string `json:"uid-token,omitempty"`
	// User TTL
	UserTtl *string `json:"user-ttl,omitempty"`
}

// NewDynamicSecretUpdateGoogleWorkspace instantiates a new DynamicSecretUpdateGoogleWorkspace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicSecretUpdateGoogleWorkspace(accessMode string, adminName string, name string, ) *DynamicSecretUpdateGoogleWorkspace {
	this := DynamicSecretUpdateGoogleWorkspace{}
	this.AccessMode = accessMode
	this.AdminName = adminName
	var json bool = false
	this.Json = &json
	this.Name = name
	var userTtl string = "60m"
	this.UserTtl = &userTtl
	return &this
}

// NewDynamicSecretUpdateGoogleWorkspaceWithDefaults instantiates a new DynamicSecretUpdateGoogleWorkspace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicSecretUpdateGoogleWorkspaceWithDefaults() *DynamicSecretUpdateGoogleWorkspace {
	this := DynamicSecretUpdateGoogleWorkspace{}
	var json bool = false
	this.Json = &json
	var userTtl string = "60m"
	this.UserTtl = &userTtl
	return &this
}

// GetAccessMode returns the AccessMode field value
func (o *DynamicSecretUpdateGoogleWorkspace) GetAccessMode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccessMode
}

// GetAccessModeOk returns a tuple with the AccessMode field value
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetAccessModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessMode, true
}

// SetAccessMode sets field value
func (o *DynamicSecretUpdateGoogleWorkspace) SetAccessMode(v string) {
	o.AccessMode = v
}

// GetAdminName returns the AdminName field value
func (o *DynamicSecretUpdateGoogleWorkspace) GetAdminName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AdminName
}

// GetAdminNameOk returns a tuple with the AdminName field value
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetAdminNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AdminName, true
}

// SetAdminName sets field value
func (o *DynamicSecretUpdateGoogleWorkspace) SetAdminName(v string) {
	o.AdminName = v
}

// GetDeleteProtection returns the DeleteProtection field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetDeleteProtection() string {
	if o == nil || o.DeleteProtection == nil {
		var ret string
		return ret
	}
	return *o.DeleteProtection
}

// GetDeleteProtectionOk returns a tuple with the DeleteProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetDeleteProtectionOk() (*string, bool) {
	if o == nil || o.DeleteProtection == nil {
		return nil, false
	}
	return o.DeleteProtection, true
}

// HasDeleteProtection returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasDeleteProtection() bool {
	if o != nil && o.DeleteProtection != nil {
		return true
	}

	return false
}

// SetDeleteProtection gets a reference to the given string and assigns it to the DeleteProtection field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetDeleteProtection(v string) {
	o.DeleteProtection = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetDescription(v string) {
	o.Description = &v
}

// GetGcpKey returns the GcpKey field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetGcpKey() string {
	if o == nil || o.GcpKey == nil {
		var ret string
		return ret
	}
	return *o.GcpKey
}

// GetGcpKeyOk returns a tuple with the GcpKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetGcpKeyOk() (*string, bool) {
	if o == nil || o.GcpKey == nil {
		return nil, false
	}
	return o.GcpKey, true
}

// HasGcpKey returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasGcpKey() bool {
	if o != nil && o.GcpKey != nil {
		return true
	}

	return false
}

// SetGcpKey gets a reference to the given string and assigns it to the GcpKey field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetGcpKey(v string) {
	o.GcpKey = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetGroupName(v string) {
	o.GroupName = &v
}

// GetGroupRoleType returns the GroupRoleType field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetGroupRoleType() string {
	if o == nil || o.GroupRoleType == nil {
		var ret string
		return ret
	}
	return *o.GroupRoleType
}

// GetGroupRoleTypeOk returns a tuple with the GroupRoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetGroupRoleTypeOk() (*string, bool) {
	if o == nil || o.GroupRoleType == nil {
		return nil, false
	}
	return o.GroupRoleType, true
}

// HasGroupRoleType returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasGroupRoleType() bool {
	if o != nil && o.GroupRoleType != nil {
		return true
	}

	return false
}

// SetGroupRoleType gets a reference to the given string and assigns it to the GroupRoleType field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetGroupRoleType(v string) {
	o.GroupRoleType = &v
}

// GetJson returns the Json field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetJson() bool {
	if o == nil || o.Json == nil {
		var ret bool
		return ret
	}
	return *o.Json
}

// GetJsonOk returns a tuple with the Json field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetJsonOk() (*bool, bool) {
	if o == nil || o.Json == nil {
		return nil, false
	}
	return o.Json, true
}

// HasJson returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasJson() bool {
	if o != nil && o.Json != nil {
		return true
	}

	return false
}

// SetJson gets a reference to the given bool and assigns it to the Json field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetJson(v bool) {
	o.Json = &v
}

// GetName returns the Name field value
func (o *DynamicSecretUpdateGoogleWorkspace) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DynamicSecretUpdateGoogleWorkspace) SetName(v string) {
	o.Name = v
}

// GetNewName returns the NewName field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetNewName() string {
	if o == nil || o.NewName == nil {
		var ret string
		return ret
	}
	return *o.NewName
}

// GetNewNameOk returns a tuple with the NewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetNewNameOk() (*string, bool) {
	if o == nil || o.NewName == nil {
		return nil, false
	}
	return o.NewName, true
}

// HasNewName returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasNewName() bool {
	if o != nil && o.NewName != nil {
		return true
	}

	return false
}

// SetNewName gets a reference to the given string and assigns it to the NewName field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetNewName(v string) {
	o.NewName = &v
}

// GetProducerEncryptionKeyName returns the ProducerEncryptionKeyName field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetProducerEncryptionKeyName() string {
	if o == nil || o.ProducerEncryptionKeyName == nil {
		var ret string
		return ret
	}
	return *o.ProducerEncryptionKeyName
}

// GetProducerEncryptionKeyNameOk returns a tuple with the ProducerEncryptionKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetProducerEncryptionKeyNameOk() (*string, bool) {
	if o == nil || o.ProducerEncryptionKeyName == nil {
		return nil, false
	}
	return o.ProducerEncryptionKeyName, true
}

// HasProducerEncryptionKeyName returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasProducerEncryptionKeyName() bool {
	if o != nil && o.ProducerEncryptionKeyName != nil {
		return true
	}

	return false
}

// SetProducerEncryptionKeyName gets a reference to the given string and assigns it to the ProducerEncryptionKeyName field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetProducerEncryptionKeyName(v string) {
	o.ProducerEncryptionKeyName = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetRoleName() string {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetRoleNameOk() (*string, bool) {
	if o == nil || o.RoleName == nil {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasRoleName() bool {
	if o != nil && o.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetRoleName(v string) {
	o.RoleName = &v
}

// GetRoleScope returns the RoleScope field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetRoleScope() string {
	if o == nil || o.RoleScope == nil {
		var ret string
		return ret
	}
	return *o.RoleScope
}

// GetRoleScopeOk returns a tuple with the RoleScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetRoleScopeOk() (*string, bool) {
	if o == nil || o.RoleScope == nil {
		return nil, false
	}
	return o.RoleScope, true
}

// HasRoleScope returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasRoleScope() bool {
	if o != nil && o.RoleScope != nil {
		return true
	}

	return false
}

// SetRoleScope gets a reference to the given string and assigns it to the RoleScope field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetRoleScope(v string) {
	o.RoleScope = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetTags(v []string) {
	o.Tags = &v
}

// GetTargetName returns the TargetName field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetTargetName() string {
	if o == nil || o.TargetName == nil {
		var ret string
		return ret
	}
	return *o.TargetName
}

// GetTargetNameOk returns a tuple with the TargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetTargetNameOk() (*string, bool) {
	if o == nil || o.TargetName == nil {
		return nil, false
	}
	return o.TargetName, true
}

// HasTargetName returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasTargetName() bool {
	if o != nil && o.TargetName != nil {
		return true
	}

	return false
}

// SetTargetName gets a reference to the given string and assigns it to the TargetName field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetTargetName(v string) {
	o.TargetName = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetToken(v string) {
	o.Token = &v
}

// GetUidToken returns the UidToken field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetUidToken() string {
	if o == nil || o.UidToken == nil {
		var ret string
		return ret
	}
	return *o.UidToken
}

// GetUidTokenOk returns a tuple with the UidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetUidTokenOk() (*string, bool) {
	if o == nil || o.UidToken == nil {
		return nil, false
	}
	return o.UidToken, true
}

// HasUidToken returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasUidToken() bool {
	if o != nil && o.UidToken != nil {
		return true
	}

	return false
}

// SetUidToken gets a reference to the given string and assigns it to the UidToken field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetUidToken(v string) {
	o.UidToken = &v
}

// GetUserTtl returns the UserTtl field value if set, zero value otherwise.
func (o *DynamicSecretUpdateGoogleWorkspace) GetUserTtl() string {
	if o == nil || o.UserTtl == nil {
		var ret string
		return ret
	}
	return *o.UserTtl
}

// GetUserTtlOk returns a tuple with the UserTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) GetUserTtlOk() (*string, bool) {
	if o == nil || o.UserTtl == nil {
		return nil, false
	}
	return o.UserTtl, true
}

// HasUserTtl returns a boolean if a field has been set.
func (o *DynamicSecretUpdateGoogleWorkspace) HasUserTtl() bool {
	if o != nil && o.UserTtl != nil {
		return true
	}

	return false
}

// SetUserTtl gets a reference to the given string and assigns it to the UserTtl field.
func (o *DynamicSecretUpdateGoogleWorkspace) SetUserTtl(v string) {
	o.UserTtl = &v
}

func (o DynamicSecretUpdateGoogleWorkspace) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access-mode"] = o.AccessMode
	}
	if true {
		toSerialize["admin-name"] = o.AdminName
	}
	if o.DeleteProtection != nil {
		toSerialize["delete_protection"] = o.DeleteProtection
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.GcpKey != nil {
		toSerialize["gcp-key"] = o.GcpKey
	}
	if o.GroupName != nil {
		toSerialize["group-name"] = o.GroupName
	}
	if o.GroupRoleType != nil {
		toSerialize["group-role-type"] = o.GroupRoleType
	}
	if o.Json != nil {
		toSerialize["json"] = o.Json
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.NewName != nil {
		toSerialize["new-name"] = o.NewName
	}
	if o.ProducerEncryptionKeyName != nil {
		toSerialize["producer-encryption-key-name"] = o.ProducerEncryptionKeyName
	}
	if o.RoleName != nil {
		toSerialize["role-name"] = o.RoleName
	}
	if o.RoleScope != nil {
		toSerialize["role-scope"] = o.RoleScope
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TargetName != nil {
		toSerialize["target-name"] = o.TargetName
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.UidToken != nil {
		toSerialize["uid-token"] = o.UidToken
	}
	if o.UserTtl != nil {
		toSerialize["user-ttl"] = o.UserTtl
	}
	return json.Marshal(toSerialize)
}

type NullableDynamicSecretUpdateGoogleWorkspace struct {
	value *DynamicSecretUpdateGoogleWorkspace
	isSet bool
}

func (v NullableDynamicSecretUpdateGoogleWorkspace) Get() *DynamicSecretUpdateGoogleWorkspace {
	return v.value
}

func (v *NullableDynamicSecretUpdateGoogleWorkspace) Set(val *DynamicSecretUpdateGoogleWorkspace) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicSecretUpdateGoogleWorkspace) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicSecretUpdateGoogleWorkspace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicSecretUpdateGoogleWorkspace(val *DynamicSecretUpdateGoogleWorkspace) *NullableDynamicSecretUpdateGoogleWorkspace {
	return &NullableDynamicSecretUpdateGoogleWorkspace{value: val, isSet: true}
}

func (v NullableDynamicSecretUpdateGoogleWorkspace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicSecretUpdateGoogleWorkspace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


