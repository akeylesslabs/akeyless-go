/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// RequiredActivity struct for RequiredActivity
type RequiredActivity struct {
	MigrationsRequiredActivity *map[string]bool `json:"migrations_required_activity,omitempty"`
}

// NewRequiredActivity instantiates a new RequiredActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequiredActivity() *RequiredActivity {
	this := RequiredActivity{}
	return &this
}

// NewRequiredActivityWithDefaults instantiates a new RequiredActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequiredActivityWithDefaults() *RequiredActivity {
	this := RequiredActivity{}
	return &this
}

// GetMigrationsRequiredActivity returns the MigrationsRequiredActivity field value if set, zero value otherwise.
func (o *RequiredActivity) GetMigrationsRequiredActivity() map[string]bool {
	if o == nil || o.MigrationsRequiredActivity == nil {
		var ret map[string]bool
		return ret
	}
	return *o.MigrationsRequiredActivity
}

// GetMigrationsRequiredActivityOk returns a tuple with the MigrationsRequiredActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequiredActivity) GetMigrationsRequiredActivityOk() (*map[string]bool, bool) {
	if o == nil || o.MigrationsRequiredActivity == nil {
		return nil, false
	}
	return o.MigrationsRequiredActivity, true
}

// HasMigrationsRequiredActivity returns a boolean if a field has been set.
func (o *RequiredActivity) HasMigrationsRequiredActivity() bool {
	if o != nil && o.MigrationsRequiredActivity != nil {
		return true
	}

	return false
}

// SetMigrationsRequiredActivity gets a reference to the given map[string]bool and assigns it to the MigrationsRequiredActivity field.
func (o *RequiredActivity) SetMigrationsRequiredActivity(v map[string]bool) {
	o.MigrationsRequiredActivity = &v
}

func (o RequiredActivity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MigrationsRequiredActivity != nil {
		toSerialize["migrations_required_activity"] = o.MigrationsRequiredActivity
	}
	return json.Marshal(toSerialize)
}

type NullableRequiredActivity struct {
	value *RequiredActivity
	isSet bool
}

func (v NullableRequiredActivity) Get() *RequiredActivity {
	return v.value
}

func (v *NullableRequiredActivity) Set(val *RequiredActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableRequiredActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableRequiredActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequiredActivity(val *RequiredActivity) *NullableRequiredActivity {
	return &NullableRequiredActivity{value: val, isSet: true}
}

func (v NullableRequiredActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequiredActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


