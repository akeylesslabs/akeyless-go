/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0.1
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// Configure struct for Configure
type Configure struct {
	// Access ID
	AccessId *string `json:"access-id,omitempty"`
	// Access Key
	AccessKey *string `json:"access-key,omitempty"`
	// Access Type (access_key/password/azure_ad/saml/ldap/aws_iam)
	AccessType *string `json:"access-type,omitempty"`
	// Email (relevant only for access-type=password)
	AdminEmail *string `json:"admin-email,omitempty"`
	// Password (relevant only for access-type=password)
	AdminPassword *string `json:"admin-password,omitempty"`
	// Azure Active Directory ObjectId (relevant only for access-type=azure_ad)
	AzureAdObjectId *string `json:"azure_ad_object_id,omitempty"`
	// Address URL for ldap proxy (relevant only for access-type=ldap)
	LdapProxyUrl *string `json:"ldap_proxy_url,omitempty"`
}

// NewConfigure instantiates a new Configure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigure() *Configure {
	this := Configure{}
	var accessType string = "access_key"
	this.AccessType = &accessType
	return &this
}

// NewConfigureWithDefaults instantiates a new Configure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigureWithDefaults() *Configure {
	this := Configure{}
	var accessType string = "access_key"
	this.AccessType = &accessType
	return &this
}

// GetAccessId returns the AccessId field value if set, zero value otherwise.
func (o *Configure) GetAccessId() string {
	if o == nil || o.AccessId == nil {
		var ret string
		return ret
	}
	return *o.AccessId
}

// GetAccessIdOk returns a tuple with the AccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Configure) GetAccessIdOk() (*string, bool) {
	if o == nil || o.AccessId == nil {
		return nil, false
	}
	return o.AccessId, true
}

// HasAccessId returns a boolean if a field has been set.
func (o *Configure) HasAccessId() bool {
	if o != nil && o.AccessId != nil {
		return true
	}

	return false
}

// SetAccessId gets a reference to the given string and assigns it to the AccessId field.
func (o *Configure) SetAccessId(v string) {
	o.AccessId = &v
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *Configure) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Configure) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *Configure) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *Configure) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetAccessType returns the AccessType field value if set, zero value otherwise.
func (o *Configure) GetAccessType() string {
	if o == nil || o.AccessType == nil {
		var ret string
		return ret
	}
	return *o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Configure) GetAccessTypeOk() (*string, bool) {
	if o == nil || o.AccessType == nil {
		return nil, false
	}
	return o.AccessType, true
}

// HasAccessType returns a boolean if a field has been set.
func (o *Configure) HasAccessType() bool {
	if o != nil && o.AccessType != nil {
		return true
	}

	return false
}

// SetAccessType gets a reference to the given string and assigns it to the AccessType field.
func (o *Configure) SetAccessType(v string) {
	o.AccessType = &v
}

// GetAdminEmail returns the AdminEmail field value if set, zero value otherwise.
func (o *Configure) GetAdminEmail() string {
	if o == nil || o.AdminEmail == nil {
		var ret string
		return ret
	}
	return *o.AdminEmail
}

// GetAdminEmailOk returns a tuple with the AdminEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Configure) GetAdminEmailOk() (*string, bool) {
	if o == nil || o.AdminEmail == nil {
		return nil, false
	}
	return o.AdminEmail, true
}

// HasAdminEmail returns a boolean if a field has been set.
func (o *Configure) HasAdminEmail() bool {
	if o != nil && o.AdminEmail != nil {
		return true
	}

	return false
}

// SetAdminEmail gets a reference to the given string and assigns it to the AdminEmail field.
func (o *Configure) SetAdminEmail(v string) {
	o.AdminEmail = &v
}

// GetAdminPassword returns the AdminPassword field value if set, zero value otherwise.
func (o *Configure) GetAdminPassword() string {
	if o == nil || o.AdminPassword == nil {
		var ret string
		return ret
	}
	return *o.AdminPassword
}

// GetAdminPasswordOk returns a tuple with the AdminPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Configure) GetAdminPasswordOk() (*string, bool) {
	if o == nil || o.AdminPassword == nil {
		return nil, false
	}
	return o.AdminPassword, true
}

// HasAdminPassword returns a boolean if a field has been set.
func (o *Configure) HasAdminPassword() bool {
	if o != nil && o.AdminPassword != nil {
		return true
	}

	return false
}

// SetAdminPassword gets a reference to the given string and assigns it to the AdminPassword field.
func (o *Configure) SetAdminPassword(v string) {
	o.AdminPassword = &v
}

// GetAzureAdObjectId returns the AzureAdObjectId field value if set, zero value otherwise.
func (o *Configure) GetAzureAdObjectId() string {
	if o == nil || o.AzureAdObjectId == nil {
		var ret string
		return ret
	}
	return *o.AzureAdObjectId
}

// GetAzureAdObjectIdOk returns a tuple with the AzureAdObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Configure) GetAzureAdObjectIdOk() (*string, bool) {
	if o == nil || o.AzureAdObjectId == nil {
		return nil, false
	}
	return o.AzureAdObjectId, true
}

// HasAzureAdObjectId returns a boolean if a field has been set.
func (o *Configure) HasAzureAdObjectId() bool {
	if o != nil && o.AzureAdObjectId != nil {
		return true
	}

	return false
}

// SetAzureAdObjectId gets a reference to the given string and assigns it to the AzureAdObjectId field.
func (o *Configure) SetAzureAdObjectId(v string) {
	o.AzureAdObjectId = &v
}

// GetLdapProxyUrl returns the LdapProxyUrl field value if set, zero value otherwise.
func (o *Configure) GetLdapProxyUrl() string {
	if o == nil || o.LdapProxyUrl == nil {
		var ret string
		return ret
	}
	return *o.LdapProxyUrl
}

// GetLdapProxyUrlOk returns a tuple with the LdapProxyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Configure) GetLdapProxyUrlOk() (*string, bool) {
	if o == nil || o.LdapProxyUrl == nil {
		return nil, false
	}
	return o.LdapProxyUrl, true
}

// HasLdapProxyUrl returns a boolean if a field has been set.
func (o *Configure) HasLdapProxyUrl() bool {
	if o != nil && o.LdapProxyUrl != nil {
		return true
	}

	return false
}

// SetLdapProxyUrl gets a reference to the given string and assigns it to the LdapProxyUrl field.
func (o *Configure) SetLdapProxyUrl(v string) {
	o.LdapProxyUrl = &v
}

func (o Configure) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessId != nil {
		toSerialize["access-id"] = o.AccessId
	}
	if o.AccessKey != nil {
		toSerialize["access-key"] = o.AccessKey
	}
	if o.AccessType != nil {
		toSerialize["access-type"] = o.AccessType
	}
	if o.AdminEmail != nil {
		toSerialize["admin-email"] = o.AdminEmail
	}
	if o.AdminPassword != nil {
		toSerialize["admin-password"] = o.AdminPassword
	}
	if o.AzureAdObjectId != nil {
		toSerialize["azure_ad_object_id"] = o.AzureAdObjectId
	}
	if o.LdapProxyUrl != nil {
		toSerialize["ldap_proxy_url"] = o.LdapProxyUrl
	}
	return json.Marshal(toSerialize)
}

type NullableConfigure struct {
	value *Configure
	isSet bool
}

func (v NullableConfigure) Get() *Configure {
	return v.value
}

func (v *NullableConfigure) Set(val *Configure) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigure) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigure(val *Configure) *NullableConfigure {
	return &NullableConfigure{value: val, isSet: true}
}

func (v NullableConfigure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


