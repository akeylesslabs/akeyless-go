/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GatewayUpdateLogForwardingAzureAnalytics gatewayUpdateLogForwardingAzureAnalytics is a command that updates log forwarding config (azure-analytics target)
type GatewayUpdateLogForwardingAzureAnalytics struct {
	// Enable Log Forwarding [true/false]
	Enable *string `json:"enable,omitempty"`
	// Set output format to JSON
	Json *bool `json:"json,omitempty"`
	// Logs format [text/json]
	OutputFormat *string `json:"output-format,omitempty"`
	// Pull interval in seconds
	PullInterval *string `json:"pull-interval,omitempty"`
	// Authentication token (see `/auth` and `/configure`)
	Token *string `json:"token,omitempty"`
	// The universal identity token, Required only for universal_identity authentication
	UidToken *string `json:"uid-token,omitempty"`
	// Azure workspace id
	WorkspaceId *string `json:"workspace-id,omitempty"`
	// Azure workspace key
	WorkspaceKey *string `json:"workspace-key,omitempty"`
}

// NewGatewayUpdateLogForwardingAzureAnalytics instantiates a new GatewayUpdateLogForwardingAzureAnalytics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayUpdateLogForwardingAzureAnalytics() *GatewayUpdateLogForwardingAzureAnalytics {
	this := GatewayUpdateLogForwardingAzureAnalytics{}
	var enable string = "true"
	this.Enable = &enable
	var json bool = false
	this.Json = &json
	var outputFormat string = "text"
	this.OutputFormat = &outputFormat
	var pullInterval string = "10"
	this.PullInterval = &pullInterval
	return &this
}

// NewGatewayUpdateLogForwardingAzureAnalyticsWithDefaults instantiates a new GatewayUpdateLogForwardingAzureAnalytics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayUpdateLogForwardingAzureAnalyticsWithDefaults() *GatewayUpdateLogForwardingAzureAnalytics {
	this := GatewayUpdateLogForwardingAzureAnalytics{}
	var enable string = "true"
	this.Enable = &enable
	var json bool = false
	this.Json = &json
	var outputFormat string = "text"
	this.OutputFormat = &outputFormat
	var pullInterval string = "10"
	this.PullInterval = &pullInterval
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetEnable() string {
	if o == nil || o.Enable == nil {
		var ret string
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetEnableOk() (*string, bool) {
	if o == nil || o.Enable == nil {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) HasEnable() bool {
	if o != nil && o.Enable != nil {
		return true
	}

	return false
}

// SetEnable gets a reference to the given string and assigns it to the Enable field.
func (o *GatewayUpdateLogForwardingAzureAnalytics) SetEnable(v string) {
	o.Enable = &v
}

// GetJson returns the Json field value if set, zero value otherwise.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetJson() bool {
	if o == nil || o.Json == nil {
		var ret bool
		return ret
	}
	return *o.Json
}

// GetJsonOk returns a tuple with the Json field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetJsonOk() (*bool, bool) {
	if o == nil || o.Json == nil {
		return nil, false
	}
	return o.Json, true
}

// HasJson returns a boolean if a field has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) HasJson() bool {
	if o != nil && o.Json != nil {
		return true
	}

	return false
}

// SetJson gets a reference to the given bool and assigns it to the Json field.
func (o *GatewayUpdateLogForwardingAzureAnalytics) SetJson(v bool) {
	o.Json = &v
}

// GetOutputFormat returns the OutputFormat field value if set, zero value otherwise.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetOutputFormat() string {
	if o == nil || o.OutputFormat == nil {
		var ret string
		return ret
	}
	return *o.OutputFormat
}

// GetOutputFormatOk returns a tuple with the OutputFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetOutputFormatOk() (*string, bool) {
	if o == nil || o.OutputFormat == nil {
		return nil, false
	}
	return o.OutputFormat, true
}

// HasOutputFormat returns a boolean if a field has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) HasOutputFormat() bool {
	if o != nil && o.OutputFormat != nil {
		return true
	}

	return false
}

// SetOutputFormat gets a reference to the given string and assigns it to the OutputFormat field.
func (o *GatewayUpdateLogForwardingAzureAnalytics) SetOutputFormat(v string) {
	o.OutputFormat = &v
}

// GetPullInterval returns the PullInterval field value if set, zero value otherwise.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetPullInterval() string {
	if o == nil || o.PullInterval == nil {
		var ret string
		return ret
	}
	return *o.PullInterval
}

// GetPullIntervalOk returns a tuple with the PullInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetPullIntervalOk() (*string, bool) {
	if o == nil || o.PullInterval == nil {
		return nil, false
	}
	return o.PullInterval, true
}

// HasPullInterval returns a boolean if a field has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) HasPullInterval() bool {
	if o != nil && o.PullInterval != nil {
		return true
	}

	return false
}

// SetPullInterval gets a reference to the given string and assigns it to the PullInterval field.
func (o *GatewayUpdateLogForwardingAzureAnalytics) SetPullInterval(v string) {
	o.PullInterval = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *GatewayUpdateLogForwardingAzureAnalytics) SetToken(v string) {
	o.Token = &v
}

// GetUidToken returns the UidToken field value if set, zero value otherwise.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetUidToken() string {
	if o == nil || o.UidToken == nil {
		var ret string
		return ret
	}
	return *o.UidToken
}

// GetUidTokenOk returns a tuple with the UidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetUidTokenOk() (*string, bool) {
	if o == nil || o.UidToken == nil {
		return nil, false
	}
	return o.UidToken, true
}

// HasUidToken returns a boolean if a field has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) HasUidToken() bool {
	if o != nil && o.UidToken != nil {
		return true
	}

	return false
}

// SetUidToken gets a reference to the given string and assigns it to the UidToken field.
func (o *GatewayUpdateLogForwardingAzureAnalytics) SetUidToken(v string) {
	o.UidToken = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetWorkspaceId() string {
	if o == nil || o.WorkspaceId == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || o.WorkspaceId == nil {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) HasWorkspaceId() bool {
	if o != nil && o.WorkspaceId != nil {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *GatewayUpdateLogForwardingAzureAnalytics) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

// GetWorkspaceKey returns the WorkspaceKey field value if set, zero value otherwise.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetWorkspaceKey() string {
	if o == nil || o.WorkspaceKey == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceKey
}

// GetWorkspaceKeyOk returns a tuple with the WorkspaceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) GetWorkspaceKeyOk() (*string, bool) {
	if o == nil || o.WorkspaceKey == nil {
		return nil, false
	}
	return o.WorkspaceKey, true
}

// HasWorkspaceKey returns a boolean if a field has been set.
func (o *GatewayUpdateLogForwardingAzureAnalytics) HasWorkspaceKey() bool {
	if o != nil && o.WorkspaceKey != nil {
		return true
	}

	return false
}

// SetWorkspaceKey gets a reference to the given string and assigns it to the WorkspaceKey field.
func (o *GatewayUpdateLogForwardingAzureAnalytics) SetWorkspaceKey(v string) {
	o.WorkspaceKey = &v
}

func (o GatewayUpdateLogForwardingAzureAnalytics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enable != nil {
		toSerialize["enable"] = o.Enable
	}
	if o.Json != nil {
		toSerialize["json"] = o.Json
	}
	if o.OutputFormat != nil {
		toSerialize["output-format"] = o.OutputFormat
	}
	if o.PullInterval != nil {
		toSerialize["pull-interval"] = o.PullInterval
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.UidToken != nil {
		toSerialize["uid-token"] = o.UidToken
	}
	if o.WorkspaceId != nil {
		toSerialize["workspace-id"] = o.WorkspaceId
	}
	if o.WorkspaceKey != nil {
		toSerialize["workspace-key"] = o.WorkspaceKey
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayUpdateLogForwardingAzureAnalytics struct {
	value *GatewayUpdateLogForwardingAzureAnalytics
	isSet bool
}

func (v NullableGatewayUpdateLogForwardingAzureAnalytics) Get() *GatewayUpdateLogForwardingAzureAnalytics {
	return v.value
}

func (v *NullableGatewayUpdateLogForwardingAzureAnalytics) Set(val *GatewayUpdateLogForwardingAzureAnalytics) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayUpdateLogForwardingAzureAnalytics) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayUpdateLogForwardingAzureAnalytics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayUpdateLogForwardingAzureAnalytics(val *GatewayUpdateLogForwardingAzureAnalytics) *NullableGatewayUpdateLogForwardingAzureAnalytics {
	return &NullableGatewayUpdateLogForwardingAzureAnalytics{value: val, isSet: true}
}

func (v NullableGatewayUpdateLogForwardingAzureAnalytics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayUpdateLogForwardingAzureAnalytics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


