/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// KMIPClientGetResponse struct for KMIPClientGetResponse
type KMIPClientGetResponse struct {
	Client *KMIPClient `json:"client,omitempty"`
}

// NewKMIPClientGetResponse instantiates a new KMIPClientGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKMIPClientGetResponse() *KMIPClientGetResponse {
	this := KMIPClientGetResponse{}
	return &this
}

// NewKMIPClientGetResponseWithDefaults instantiates a new KMIPClientGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKMIPClientGetResponseWithDefaults() *KMIPClientGetResponse {
	this := KMIPClientGetResponse{}
	return &this
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *KMIPClientGetResponse) GetClient() KMIPClient {
	if o == nil || o.Client == nil {
		var ret KMIPClient
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KMIPClientGetResponse) GetClientOk() (*KMIPClient, bool) {
	if o == nil || o.Client == nil {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *KMIPClientGetResponse) HasClient() bool {
	if o != nil && o.Client != nil {
		return true
	}

	return false
}

// SetClient gets a reference to the given KMIPClient and assigns it to the Client field.
func (o *KMIPClientGetResponse) SetClient(v KMIPClient) {
	o.Client = &v
}

func (o KMIPClientGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Client != nil {
		toSerialize["client"] = o.Client
	}
	return json.Marshal(toSerialize)
}

type NullableKMIPClientGetResponse struct {
	value *KMIPClientGetResponse
	isSet bool
}

func (v NullableKMIPClientGetResponse) Get() *KMIPClientGetResponse {
	return v.value
}

func (v *NullableKMIPClientGetResponse) Set(val *KMIPClientGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKMIPClientGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKMIPClientGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKMIPClientGetResponse(val *KMIPClientGetResponse) *NullableKMIPClientGetResponse {
	return &NullableKMIPClientGetResponse{value: val, isSet: true}
}

func (v NullableKMIPClientGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKMIPClientGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


