/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// checks if the GatewayUpdateProducerCertificateAutomation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayUpdateProducerCertificateAutomation{}

// GatewayUpdateProducerCertificateAutomation gatewayUpdateProducerCertificateAutomation is a command that updates a Certificate Automation dynamic secret producer to dynamically update certificates generated by Venafi or have Akeyless generated certificates using PKI be monitored by Venafi
type GatewayUpdateProducerCertificateAutomation struct {
	// Admin credentials rotation interval (days)
	AdminRotationIntervalDays *int64 `json:"admin-rotation-interval-days,omitempty"`
	// Allow subdomains
	AllowSubdomains *bool `json:"allow-subdomains,omitempty"`
	// Allowed domains
	AllowedDomains []string `json:"allowed-domains,omitempty"`
	// Auto generated folder
	AutoGeneratedFolder *string `json:"auto-generated-folder,omitempty"`
	// Protection from accidental deletion of this item [true/false]
	DeleteProtection *string `json:"delete_protection,omitempty"`
	// Automatic admin credentials rotation
	EnableAdminRotation *bool `json:"enable-admin-rotation,omitempty"`
	// Set output format to JSON
	Json *bool `json:"json,omitempty"`
	// Producer name
	Name string `json:"name"`
	// Producer name
	NewName *string `json:"new-name,omitempty"`
	// Dynamic producer encryption key
	ProducerEncryptionKeyName *string `json:"producer-encryption-key-name,omitempty"`
	// Root first in chain
	RootFirstInChain *bool `json:"root-first-in-chain,omitempty"`
	// Use Akeyless PKI issuer or Venafi issuer
	SignUsingAkeylessPki *bool `json:"sign-using-akeyless-pki,omitempty"`
	// Signer key name
	SignerKeyName *string `json:"signer-key-name,omitempty"`
	// Store private key
	StorePrivateKey *bool `json:"store-private-key,omitempty"`
	// Add tags attached to this object
	Tags []string `json:"tags,omitempty"`
	// Target name
	TargetName *string `json:"target-name,omitempty"`
	// Authentication token (see `/auth` and `/configure`)
	Token *string `json:"token,omitempty"`
	// The universal identity token, Required only for universal_identity authentication
	UidToken *string `json:"uid-token,omitempty"`
	// User TTL in time.Duration format (2160h / 129600m / etc...). When using sign-using-akeyless-pki certificates created will have this validity period, otherwise the user-ttl is taken from the Validity Period field of the Zone's' Issuing Template. When using cert-manager it is advised to have a TTL of above 60 days (1440h). For more information - https://cert-manager.io/docs/usage/certificate/
	UserTtl *string `json:"user-ttl,omitempty"`
	// Venafi Access Token to use to access the TPP environment (Relevant when using TPP)
	VenafiAccessToken *string `json:"venafi-access-token,omitempty"`
	// Venafi API key
	VenafiApiKey *string `json:"venafi-api-key,omitempty"`
	// Venafi Baseurl
	VenafiBaseurl *string `json:"venafi-baseurl,omitempty"`
	// Venafi Client ID that was used when the access token was generated
	VenafiClientId *string `json:"venafi-client-id,omitempty"`
	// Venafi Refresh Token to use when the Access Token is expired (Relevant when using TPP)
	VenafiRefreshToken *string `json:"venafi-refresh-token,omitempty"`
	// Venafi using TPP
	VenafiUseTpp *bool `json:"venafi-use-tpp,omitempty"`
	// Venafi Zone
	VenafiZone *string `json:"venafi-zone,omitempty"`
}

// NewGatewayUpdateProducerCertificateAutomation instantiates a new GatewayUpdateProducerCertificateAutomation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayUpdateProducerCertificateAutomation(name string) *GatewayUpdateProducerCertificateAutomation {
	this := GatewayUpdateProducerCertificateAutomation{}
	var adminRotationIntervalDays int64 = 0
	this.AdminRotationIntervalDays = &adminRotationIntervalDays
	var enableAdminRotation bool = false
	this.EnableAdminRotation = &enableAdminRotation
	var json bool = false
	this.Json = &json
	this.Name = name
	var userTtl string = "2160h"
	this.UserTtl = &userTtl
	var venafiClientId string = "akeyless"
	this.VenafiClientId = &venafiClientId
	return &this
}

// NewGatewayUpdateProducerCertificateAutomationWithDefaults instantiates a new GatewayUpdateProducerCertificateAutomation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayUpdateProducerCertificateAutomationWithDefaults() *GatewayUpdateProducerCertificateAutomation {
	this := GatewayUpdateProducerCertificateAutomation{}
	var adminRotationIntervalDays int64 = 0
	this.AdminRotationIntervalDays = &adminRotationIntervalDays
	var enableAdminRotation bool = false
	this.EnableAdminRotation = &enableAdminRotation
	var json bool = false
	this.Json = &json
	var userTtl string = "2160h"
	this.UserTtl = &userTtl
	var venafiClientId string = "akeyless"
	this.VenafiClientId = &venafiClientId
	return &this
}

// GetAdminRotationIntervalDays returns the AdminRotationIntervalDays field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetAdminRotationIntervalDays() int64 {
	if o == nil || IsNil(o.AdminRotationIntervalDays) {
		var ret int64
		return ret
	}
	return *o.AdminRotationIntervalDays
}

// GetAdminRotationIntervalDaysOk returns a tuple with the AdminRotationIntervalDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetAdminRotationIntervalDaysOk() (*int64, bool) {
	if o == nil || IsNil(o.AdminRotationIntervalDays) {
		return nil, false
	}
	return o.AdminRotationIntervalDays, true
}

// HasAdminRotationIntervalDays returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasAdminRotationIntervalDays() bool {
	if o != nil && !IsNil(o.AdminRotationIntervalDays) {
		return true
	}

	return false
}

// SetAdminRotationIntervalDays gets a reference to the given int64 and assigns it to the AdminRotationIntervalDays field.
func (o *GatewayUpdateProducerCertificateAutomation) SetAdminRotationIntervalDays(v int64) {
	o.AdminRotationIntervalDays = &v
}

// GetAllowSubdomains returns the AllowSubdomains field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetAllowSubdomains() bool {
	if o == nil || IsNil(o.AllowSubdomains) {
		var ret bool
		return ret
	}
	return *o.AllowSubdomains
}

// GetAllowSubdomainsOk returns a tuple with the AllowSubdomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetAllowSubdomainsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSubdomains) {
		return nil, false
	}
	return o.AllowSubdomains, true
}

// HasAllowSubdomains returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasAllowSubdomains() bool {
	if o != nil && !IsNil(o.AllowSubdomains) {
		return true
	}

	return false
}

// SetAllowSubdomains gets a reference to the given bool and assigns it to the AllowSubdomains field.
func (o *GatewayUpdateProducerCertificateAutomation) SetAllowSubdomains(v bool) {
	o.AllowSubdomains = &v
}

// GetAllowedDomains returns the AllowedDomains field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetAllowedDomains() []string {
	if o == nil || IsNil(o.AllowedDomains) {
		var ret []string
		return ret
	}
	return o.AllowedDomains
}

// GetAllowedDomainsOk returns a tuple with the AllowedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetAllowedDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedDomains) {
		return nil, false
	}
	return o.AllowedDomains, true
}

// HasAllowedDomains returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasAllowedDomains() bool {
	if o != nil && !IsNil(o.AllowedDomains) {
		return true
	}

	return false
}

// SetAllowedDomains gets a reference to the given []string and assigns it to the AllowedDomains field.
func (o *GatewayUpdateProducerCertificateAutomation) SetAllowedDomains(v []string) {
	o.AllowedDomains = v
}

// GetAutoGeneratedFolder returns the AutoGeneratedFolder field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetAutoGeneratedFolder() string {
	if o == nil || IsNil(o.AutoGeneratedFolder) {
		var ret string
		return ret
	}
	return *o.AutoGeneratedFolder
}

// GetAutoGeneratedFolderOk returns a tuple with the AutoGeneratedFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetAutoGeneratedFolderOk() (*string, bool) {
	if o == nil || IsNil(o.AutoGeneratedFolder) {
		return nil, false
	}
	return o.AutoGeneratedFolder, true
}

// HasAutoGeneratedFolder returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasAutoGeneratedFolder() bool {
	if o != nil && !IsNil(o.AutoGeneratedFolder) {
		return true
	}

	return false
}

// SetAutoGeneratedFolder gets a reference to the given string and assigns it to the AutoGeneratedFolder field.
func (o *GatewayUpdateProducerCertificateAutomation) SetAutoGeneratedFolder(v string) {
	o.AutoGeneratedFolder = &v
}

// GetDeleteProtection returns the DeleteProtection field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetDeleteProtection() string {
	if o == nil || IsNil(o.DeleteProtection) {
		var ret string
		return ret
	}
	return *o.DeleteProtection
}

// GetDeleteProtectionOk returns a tuple with the DeleteProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetDeleteProtectionOk() (*string, bool) {
	if o == nil || IsNil(o.DeleteProtection) {
		return nil, false
	}
	return o.DeleteProtection, true
}

// HasDeleteProtection returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasDeleteProtection() bool {
	if o != nil && !IsNil(o.DeleteProtection) {
		return true
	}

	return false
}

// SetDeleteProtection gets a reference to the given string and assigns it to the DeleteProtection field.
func (o *GatewayUpdateProducerCertificateAutomation) SetDeleteProtection(v string) {
	o.DeleteProtection = &v
}

// GetEnableAdminRotation returns the EnableAdminRotation field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetEnableAdminRotation() bool {
	if o == nil || IsNil(o.EnableAdminRotation) {
		var ret bool
		return ret
	}
	return *o.EnableAdminRotation
}

// GetEnableAdminRotationOk returns a tuple with the EnableAdminRotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetEnableAdminRotationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAdminRotation) {
		return nil, false
	}
	return o.EnableAdminRotation, true
}

// HasEnableAdminRotation returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasEnableAdminRotation() bool {
	if o != nil && !IsNil(o.EnableAdminRotation) {
		return true
	}

	return false
}

// SetEnableAdminRotation gets a reference to the given bool and assigns it to the EnableAdminRotation field.
func (o *GatewayUpdateProducerCertificateAutomation) SetEnableAdminRotation(v bool) {
	o.EnableAdminRotation = &v
}

// GetJson returns the Json field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetJson() bool {
	if o == nil || IsNil(o.Json) {
		var ret bool
		return ret
	}
	return *o.Json
}

// GetJsonOk returns a tuple with the Json field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetJsonOk() (*bool, bool) {
	if o == nil || IsNil(o.Json) {
		return nil, false
	}
	return o.Json, true
}

// HasJson returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasJson() bool {
	if o != nil && !IsNil(o.Json) {
		return true
	}

	return false
}

// SetJson gets a reference to the given bool and assigns it to the Json field.
func (o *GatewayUpdateProducerCertificateAutomation) SetJson(v bool) {
	o.Json = &v
}

// GetName returns the Name field value
func (o *GatewayUpdateProducerCertificateAutomation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GatewayUpdateProducerCertificateAutomation) SetName(v string) {
	o.Name = v
}

// GetNewName returns the NewName field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetNewName() string {
	if o == nil || IsNil(o.NewName) {
		var ret string
		return ret
	}
	return *o.NewName
}

// GetNewNameOk returns a tuple with the NewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetNewNameOk() (*string, bool) {
	if o == nil || IsNil(o.NewName) {
		return nil, false
	}
	return o.NewName, true
}

// HasNewName returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasNewName() bool {
	if o != nil && !IsNil(o.NewName) {
		return true
	}

	return false
}

// SetNewName gets a reference to the given string and assigns it to the NewName field.
func (o *GatewayUpdateProducerCertificateAutomation) SetNewName(v string) {
	o.NewName = &v
}

// GetProducerEncryptionKeyName returns the ProducerEncryptionKeyName field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetProducerEncryptionKeyName() string {
	if o == nil || IsNil(o.ProducerEncryptionKeyName) {
		var ret string
		return ret
	}
	return *o.ProducerEncryptionKeyName
}

// GetProducerEncryptionKeyNameOk returns a tuple with the ProducerEncryptionKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetProducerEncryptionKeyNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProducerEncryptionKeyName) {
		return nil, false
	}
	return o.ProducerEncryptionKeyName, true
}

// HasProducerEncryptionKeyName returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasProducerEncryptionKeyName() bool {
	if o != nil && !IsNil(o.ProducerEncryptionKeyName) {
		return true
	}

	return false
}

// SetProducerEncryptionKeyName gets a reference to the given string and assigns it to the ProducerEncryptionKeyName field.
func (o *GatewayUpdateProducerCertificateAutomation) SetProducerEncryptionKeyName(v string) {
	o.ProducerEncryptionKeyName = &v
}

// GetRootFirstInChain returns the RootFirstInChain field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetRootFirstInChain() bool {
	if o == nil || IsNil(o.RootFirstInChain) {
		var ret bool
		return ret
	}
	return *o.RootFirstInChain
}

// GetRootFirstInChainOk returns a tuple with the RootFirstInChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetRootFirstInChainOk() (*bool, bool) {
	if o == nil || IsNil(o.RootFirstInChain) {
		return nil, false
	}
	return o.RootFirstInChain, true
}

// HasRootFirstInChain returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasRootFirstInChain() bool {
	if o != nil && !IsNil(o.RootFirstInChain) {
		return true
	}

	return false
}

// SetRootFirstInChain gets a reference to the given bool and assigns it to the RootFirstInChain field.
func (o *GatewayUpdateProducerCertificateAutomation) SetRootFirstInChain(v bool) {
	o.RootFirstInChain = &v
}

// GetSignUsingAkeylessPki returns the SignUsingAkeylessPki field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetSignUsingAkeylessPki() bool {
	if o == nil || IsNil(o.SignUsingAkeylessPki) {
		var ret bool
		return ret
	}
	return *o.SignUsingAkeylessPki
}

// GetSignUsingAkeylessPkiOk returns a tuple with the SignUsingAkeylessPki field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetSignUsingAkeylessPkiOk() (*bool, bool) {
	if o == nil || IsNil(o.SignUsingAkeylessPki) {
		return nil, false
	}
	return o.SignUsingAkeylessPki, true
}

// HasSignUsingAkeylessPki returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasSignUsingAkeylessPki() bool {
	if o != nil && !IsNil(o.SignUsingAkeylessPki) {
		return true
	}

	return false
}

// SetSignUsingAkeylessPki gets a reference to the given bool and assigns it to the SignUsingAkeylessPki field.
func (o *GatewayUpdateProducerCertificateAutomation) SetSignUsingAkeylessPki(v bool) {
	o.SignUsingAkeylessPki = &v
}

// GetSignerKeyName returns the SignerKeyName field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetSignerKeyName() string {
	if o == nil || IsNil(o.SignerKeyName) {
		var ret string
		return ret
	}
	return *o.SignerKeyName
}

// GetSignerKeyNameOk returns a tuple with the SignerKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetSignerKeyNameOk() (*string, bool) {
	if o == nil || IsNil(o.SignerKeyName) {
		return nil, false
	}
	return o.SignerKeyName, true
}

// HasSignerKeyName returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasSignerKeyName() bool {
	if o != nil && !IsNil(o.SignerKeyName) {
		return true
	}

	return false
}

// SetSignerKeyName gets a reference to the given string and assigns it to the SignerKeyName field.
func (o *GatewayUpdateProducerCertificateAutomation) SetSignerKeyName(v string) {
	o.SignerKeyName = &v
}

// GetStorePrivateKey returns the StorePrivateKey field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetStorePrivateKey() bool {
	if o == nil || IsNil(o.StorePrivateKey) {
		var ret bool
		return ret
	}
	return *o.StorePrivateKey
}

// GetStorePrivateKeyOk returns a tuple with the StorePrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetStorePrivateKeyOk() (*bool, bool) {
	if o == nil || IsNil(o.StorePrivateKey) {
		return nil, false
	}
	return o.StorePrivateKey, true
}

// HasStorePrivateKey returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasStorePrivateKey() bool {
	if o != nil && !IsNil(o.StorePrivateKey) {
		return true
	}

	return false
}

// SetStorePrivateKey gets a reference to the given bool and assigns it to the StorePrivateKey field.
func (o *GatewayUpdateProducerCertificateAutomation) SetStorePrivateKey(v bool) {
	o.StorePrivateKey = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GatewayUpdateProducerCertificateAutomation) SetTags(v []string) {
	o.Tags = v
}

// GetTargetName returns the TargetName field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetTargetName() string {
	if o == nil || IsNil(o.TargetName) {
		var ret string
		return ret
	}
	return *o.TargetName
}

// GetTargetNameOk returns a tuple with the TargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetTargetNameOk() (*string, bool) {
	if o == nil || IsNil(o.TargetName) {
		return nil, false
	}
	return o.TargetName, true
}

// HasTargetName returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasTargetName() bool {
	if o != nil && !IsNil(o.TargetName) {
		return true
	}

	return false
}

// SetTargetName gets a reference to the given string and assigns it to the TargetName field.
func (o *GatewayUpdateProducerCertificateAutomation) SetTargetName(v string) {
	o.TargetName = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *GatewayUpdateProducerCertificateAutomation) SetToken(v string) {
	o.Token = &v
}

// GetUidToken returns the UidToken field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetUidToken() string {
	if o == nil || IsNil(o.UidToken) {
		var ret string
		return ret
	}
	return *o.UidToken
}

// GetUidTokenOk returns a tuple with the UidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetUidTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UidToken) {
		return nil, false
	}
	return o.UidToken, true
}

// HasUidToken returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasUidToken() bool {
	if o != nil && !IsNil(o.UidToken) {
		return true
	}

	return false
}

// SetUidToken gets a reference to the given string and assigns it to the UidToken field.
func (o *GatewayUpdateProducerCertificateAutomation) SetUidToken(v string) {
	o.UidToken = &v
}

// GetUserTtl returns the UserTtl field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetUserTtl() string {
	if o == nil || IsNil(o.UserTtl) {
		var ret string
		return ret
	}
	return *o.UserTtl
}

// GetUserTtlOk returns a tuple with the UserTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetUserTtlOk() (*string, bool) {
	if o == nil || IsNil(o.UserTtl) {
		return nil, false
	}
	return o.UserTtl, true
}

// HasUserTtl returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasUserTtl() bool {
	if o != nil && !IsNil(o.UserTtl) {
		return true
	}

	return false
}

// SetUserTtl gets a reference to the given string and assigns it to the UserTtl field.
func (o *GatewayUpdateProducerCertificateAutomation) SetUserTtl(v string) {
	o.UserTtl = &v
}

// GetVenafiAccessToken returns the VenafiAccessToken field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiAccessToken() string {
	if o == nil || IsNil(o.VenafiAccessToken) {
		var ret string
		return ret
	}
	return *o.VenafiAccessToken
}

// GetVenafiAccessTokenOk returns a tuple with the VenafiAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiAccessToken) {
		return nil, false
	}
	return o.VenafiAccessToken, true
}

// HasVenafiAccessToken returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasVenafiAccessToken() bool {
	if o != nil && !IsNil(o.VenafiAccessToken) {
		return true
	}

	return false
}

// SetVenafiAccessToken gets a reference to the given string and assigns it to the VenafiAccessToken field.
func (o *GatewayUpdateProducerCertificateAutomation) SetVenafiAccessToken(v string) {
	o.VenafiAccessToken = &v
}

// GetVenafiApiKey returns the VenafiApiKey field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiApiKey() string {
	if o == nil || IsNil(o.VenafiApiKey) {
		var ret string
		return ret
	}
	return *o.VenafiApiKey
}

// GetVenafiApiKeyOk returns a tuple with the VenafiApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiApiKey) {
		return nil, false
	}
	return o.VenafiApiKey, true
}

// HasVenafiApiKey returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasVenafiApiKey() bool {
	if o != nil && !IsNil(o.VenafiApiKey) {
		return true
	}

	return false
}

// SetVenafiApiKey gets a reference to the given string and assigns it to the VenafiApiKey field.
func (o *GatewayUpdateProducerCertificateAutomation) SetVenafiApiKey(v string) {
	o.VenafiApiKey = &v
}

// GetVenafiBaseurl returns the VenafiBaseurl field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiBaseurl() string {
	if o == nil || IsNil(o.VenafiBaseurl) {
		var ret string
		return ret
	}
	return *o.VenafiBaseurl
}

// GetVenafiBaseurlOk returns a tuple with the VenafiBaseurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiBaseurlOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiBaseurl) {
		return nil, false
	}
	return o.VenafiBaseurl, true
}

// HasVenafiBaseurl returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasVenafiBaseurl() bool {
	if o != nil && !IsNil(o.VenafiBaseurl) {
		return true
	}

	return false
}

// SetVenafiBaseurl gets a reference to the given string and assigns it to the VenafiBaseurl field.
func (o *GatewayUpdateProducerCertificateAutomation) SetVenafiBaseurl(v string) {
	o.VenafiBaseurl = &v
}

// GetVenafiClientId returns the VenafiClientId field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiClientId() string {
	if o == nil || IsNil(o.VenafiClientId) {
		var ret string
		return ret
	}
	return *o.VenafiClientId
}

// GetVenafiClientIdOk returns a tuple with the VenafiClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiClientId) {
		return nil, false
	}
	return o.VenafiClientId, true
}

// HasVenafiClientId returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasVenafiClientId() bool {
	if o != nil && !IsNil(o.VenafiClientId) {
		return true
	}

	return false
}

// SetVenafiClientId gets a reference to the given string and assigns it to the VenafiClientId field.
func (o *GatewayUpdateProducerCertificateAutomation) SetVenafiClientId(v string) {
	o.VenafiClientId = &v
}

// GetVenafiRefreshToken returns the VenafiRefreshToken field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiRefreshToken() string {
	if o == nil || IsNil(o.VenafiRefreshToken) {
		var ret string
		return ret
	}
	return *o.VenafiRefreshToken
}

// GetVenafiRefreshTokenOk returns a tuple with the VenafiRefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiRefreshToken) {
		return nil, false
	}
	return o.VenafiRefreshToken, true
}

// HasVenafiRefreshToken returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasVenafiRefreshToken() bool {
	if o != nil && !IsNil(o.VenafiRefreshToken) {
		return true
	}

	return false
}

// SetVenafiRefreshToken gets a reference to the given string and assigns it to the VenafiRefreshToken field.
func (o *GatewayUpdateProducerCertificateAutomation) SetVenafiRefreshToken(v string) {
	o.VenafiRefreshToken = &v
}

// GetVenafiUseTpp returns the VenafiUseTpp field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiUseTpp() bool {
	if o == nil || IsNil(o.VenafiUseTpp) {
		var ret bool
		return ret
	}
	return *o.VenafiUseTpp
}

// GetVenafiUseTppOk returns a tuple with the VenafiUseTpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiUseTppOk() (*bool, bool) {
	if o == nil || IsNil(o.VenafiUseTpp) {
		return nil, false
	}
	return o.VenafiUseTpp, true
}

// HasVenafiUseTpp returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasVenafiUseTpp() bool {
	if o != nil && !IsNil(o.VenafiUseTpp) {
		return true
	}

	return false
}

// SetVenafiUseTpp gets a reference to the given bool and assigns it to the VenafiUseTpp field.
func (o *GatewayUpdateProducerCertificateAutomation) SetVenafiUseTpp(v bool) {
	o.VenafiUseTpp = &v
}

// GetVenafiZone returns the VenafiZone field value if set, zero value otherwise.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiZone() string {
	if o == nil || IsNil(o.VenafiZone) {
		var ret string
		return ret
	}
	return *o.VenafiZone
}

// GetVenafiZoneOk returns a tuple with the VenafiZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayUpdateProducerCertificateAutomation) GetVenafiZoneOk() (*string, bool) {
	if o == nil || IsNil(o.VenafiZone) {
		return nil, false
	}
	return o.VenafiZone, true
}

// HasVenafiZone returns a boolean if a field has been set.
func (o *GatewayUpdateProducerCertificateAutomation) HasVenafiZone() bool {
	if o != nil && !IsNil(o.VenafiZone) {
		return true
	}

	return false
}

// SetVenafiZone gets a reference to the given string and assigns it to the VenafiZone field.
func (o *GatewayUpdateProducerCertificateAutomation) SetVenafiZone(v string) {
	o.VenafiZone = &v
}

func (o GatewayUpdateProducerCertificateAutomation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayUpdateProducerCertificateAutomation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminRotationIntervalDays) {
		toSerialize["admin-rotation-interval-days"] = o.AdminRotationIntervalDays
	}
	if !IsNil(o.AllowSubdomains) {
		toSerialize["allow-subdomains"] = o.AllowSubdomains
	}
	if !IsNil(o.AllowedDomains) {
		toSerialize["allowed-domains"] = o.AllowedDomains
	}
	if !IsNil(o.AutoGeneratedFolder) {
		toSerialize["auto-generated-folder"] = o.AutoGeneratedFolder
	}
	if !IsNil(o.DeleteProtection) {
		toSerialize["delete_protection"] = o.DeleteProtection
	}
	if !IsNil(o.EnableAdminRotation) {
		toSerialize["enable-admin-rotation"] = o.EnableAdminRotation
	}
	if !IsNil(o.Json) {
		toSerialize["json"] = o.Json
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.NewName) {
		toSerialize["new-name"] = o.NewName
	}
	if !IsNil(o.ProducerEncryptionKeyName) {
		toSerialize["producer-encryption-key-name"] = o.ProducerEncryptionKeyName
	}
	if !IsNil(o.RootFirstInChain) {
		toSerialize["root-first-in-chain"] = o.RootFirstInChain
	}
	if !IsNil(o.SignUsingAkeylessPki) {
		toSerialize["sign-using-akeyless-pki"] = o.SignUsingAkeylessPki
	}
	if !IsNil(o.SignerKeyName) {
		toSerialize["signer-key-name"] = o.SignerKeyName
	}
	if !IsNil(o.StorePrivateKey) {
		toSerialize["store-private-key"] = o.StorePrivateKey
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.TargetName) {
		toSerialize["target-name"] = o.TargetName
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.UidToken) {
		toSerialize["uid-token"] = o.UidToken
	}
	if !IsNil(o.UserTtl) {
		toSerialize["user-ttl"] = o.UserTtl
	}
	if !IsNil(o.VenafiAccessToken) {
		toSerialize["venafi-access-token"] = o.VenafiAccessToken
	}
	if !IsNil(o.VenafiApiKey) {
		toSerialize["venafi-api-key"] = o.VenafiApiKey
	}
	if !IsNil(o.VenafiBaseurl) {
		toSerialize["venafi-baseurl"] = o.VenafiBaseurl
	}
	if !IsNil(o.VenafiClientId) {
		toSerialize["venafi-client-id"] = o.VenafiClientId
	}
	if !IsNil(o.VenafiRefreshToken) {
		toSerialize["venafi-refresh-token"] = o.VenafiRefreshToken
	}
	if !IsNil(o.VenafiUseTpp) {
		toSerialize["venafi-use-tpp"] = o.VenafiUseTpp
	}
	if !IsNil(o.VenafiZone) {
		toSerialize["venafi-zone"] = o.VenafiZone
	}
	return toSerialize, nil
}

type NullableGatewayUpdateProducerCertificateAutomation struct {
	value *GatewayUpdateProducerCertificateAutomation
	isSet bool
}

func (v NullableGatewayUpdateProducerCertificateAutomation) Get() *GatewayUpdateProducerCertificateAutomation {
	return v.value
}

func (v *NullableGatewayUpdateProducerCertificateAutomation) Set(val *GatewayUpdateProducerCertificateAutomation) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayUpdateProducerCertificateAutomation) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayUpdateProducerCertificateAutomation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayUpdateProducerCertificateAutomation(val *GatewayUpdateProducerCertificateAutomation) *NullableGatewayUpdateProducerCertificateAutomation {
	return &NullableGatewayUpdateProducerCertificateAutomation{value: val, isSet: true}
}

func (v NullableGatewayUpdateProducerCertificateAutomation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayUpdateProducerCertificateAutomation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


