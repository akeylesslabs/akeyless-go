/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// checks if the GatewayBasicInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayBasicInfo{}

// GatewayBasicInfo struct for GatewayBasicInfo
type GatewayBasicInfo struct {
	ClusterDisplayName *string `json:"cluster_display_name,omitempty"`
	ClusterId *int64 `json:"cluster_id,omitempty"`
	ClusterName *string `json:"cluster_name,omitempty"`
	ClusterUrl *string `json:"cluster_url,omitempty"`
}

// NewGatewayBasicInfo instantiates a new GatewayBasicInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayBasicInfo() *GatewayBasicInfo {
	this := GatewayBasicInfo{}
	return &this
}

// NewGatewayBasicInfoWithDefaults instantiates a new GatewayBasicInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayBasicInfoWithDefaults() *GatewayBasicInfo {
	this := GatewayBasicInfo{}
	return &this
}

// GetClusterDisplayName returns the ClusterDisplayName field value if set, zero value otherwise.
func (o *GatewayBasicInfo) GetClusterDisplayName() string {
	if o == nil || IsNil(o.ClusterDisplayName) {
		var ret string
		return ret
	}
	return *o.ClusterDisplayName
}

// GetClusterDisplayNameOk returns a tuple with the ClusterDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayBasicInfo) GetClusterDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterDisplayName) {
		return nil, false
	}
	return o.ClusterDisplayName, true
}

// HasClusterDisplayName returns a boolean if a field has been set.
func (o *GatewayBasicInfo) HasClusterDisplayName() bool {
	if o != nil && !IsNil(o.ClusterDisplayName) {
		return true
	}

	return false
}

// SetClusterDisplayName gets a reference to the given string and assigns it to the ClusterDisplayName field.
func (o *GatewayBasicInfo) SetClusterDisplayName(v string) {
	o.ClusterDisplayName = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *GatewayBasicInfo) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId) {
		var ret int64
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayBasicInfo) GetClusterIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *GatewayBasicInfo) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int64 and assigns it to the ClusterId field.
func (o *GatewayBasicInfo) SetClusterId(v int64) {
	o.ClusterId = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *GatewayBasicInfo) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayBasicInfo) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *GatewayBasicInfo) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *GatewayBasicInfo) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetClusterUrl returns the ClusterUrl field value if set, zero value otherwise.
func (o *GatewayBasicInfo) GetClusterUrl() string {
	if o == nil || IsNil(o.ClusterUrl) {
		var ret string
		return ret
	}
	return *o.ClusterUrl
}

// GetClusterUrlOk returns a tuple with the ClusterUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayBasicInfo) GetClusterUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterUrl) {
		return nil, false
	}
	return o.ClusterUrl, true
}

// HasClusterUrl returns a boolean if a field has been set.
func (o *GatewayBasicInfo) HasClusterUrl() bool {
	if o != nil && !IsNil(o.ClusterUrl) {
		return true
	}

	return false
}

// SetClusterUrl gets a reference to the given string and assigns it to the ClusterUrl field.
func (o *GatewayBasicInfo) SetClusterUrl(v string) {
	o.ClusterUrl = &v
}

func (o GatewayBasicInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayBasicInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterDisplayName) {
		toSerialize["cluster_display_name"] = o.ClusterDisplayName
	}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if !IsNil(o.ClusterUrl) {
		toSerialize["cluster_url"] = o.ClusterUrl
	}
	return toSerialize, nil
}

type NullableGatewayBasicInfo struct {
	value *GatewayBasicInfo
	isSet bool
}

func (v NullableGatewayBasicInfo) Get() *GatewayBasicInfo {
	return v.value
}

func (v *NullableGatewayBasicInfo) Set(val *GatewayBasicInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayBasicInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayBasicInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayBasicInfo(val *GatewayBasicInfo) *NullableGatewayBasicInfo {
	return &NullableGatewayBasicInfo{value: val, isSet: true}
}

func (v NullableGatewayBasicInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayBasicInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


