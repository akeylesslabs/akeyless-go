/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * API version: 2.0
 * Contact: support@akeyless.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// GatewayCreateK8SAuthConfig gatewayCreateK8SAuth is a command that creates k8s auth config
type GatewayCreateK8SAuthConfig struct {
	// The access ID of the Kubernetes auth method
	AccessId string `json:"access-id"`
	// Config encryption key
	ConfigEncryptionKeyName *string `json:"config-encryption-key-name,omitempty"`
	// The CA Cert (in PEM format) to use to call into the kubernetes API server
	K8sCaCert *string `json:"k8s-ca-cert,omitempty"`
	// The URL of the kubernetes API server
	K8sHost string `json:"k8s-host"`
	// The Kubernetes JWT issuer name. If not set, kubernetes/serviceaccount will use as an issuer.
	K8sIssuer *string `json:"k8s-issuer,omitempty"`
	// K8S Auth config name
	Name string `json:"name"`
	// The private key (in base64 encoded of the PEM format) associated with the public key defined in the Kubernetes auth
	SigningKey string `json:"signing-key"`
	// Authentication token (see `/auth` and `/configure`)
	Token *string `json:"token,omitempty"`
	// Time in seconds of expiration of the Akeyless Kube Auth Method token
	TokenExp *int64 `json:"token-exp,omitempty"`
	// A Kubernetes service account JWT used to access the TokenReview API to validate other JWTs. If not set, the JWT submitted in the authentication process will be used to access the Kubernetes TokenReview API.
	TokenReviewerJwt *string `json:"token-reviewer-jwt,omitempty"`
	// The universal identity token, Required only for universal_identity authentication
	UidToken *string `json:"uid-token,omitempty"`
}

// NewGatewayCreateK8SAuthConfig instantiates a new GatewayCreateK8SAuthConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayCreateK8SAuthConfig(accessId string, k8sHost string, name string, signingKey string, ) *GatewayCreateK8SAuthConfig {
	this := GatewayCreateK8SAuthConfig{}
	this.AccessId = accessId
	this.K8sHost = k8sHost
	this.Name = name
	this.SigningKey = signingKey
	var tokenExp int64 = 300
	this.TokenExp = &tokenExp
	return &this
}

// NewGatewayCreateK8SAuthConfigWithDefaults instantiates a new GatewayCreateK8SAuthConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayCreateK8SAuthConfigWithDefaults() *GatewayCreateK8SAuthConfig {
	this := GatewayCreateK8SAuthConfig{}
	var tokenExp int64 = 300
	this.TokenExp = &tokenExp
	return &this
}

// GetAccessId returns the AccessId field value
func (o *GatewayCreateK8SAuthConfig) GetAccessId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccessId
}

// GetAccessIdOk returns a tuple with the AccessId field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetAccessIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessId, true
}

// SetAccessId sets field value
func (o *GatewayCreateK8SAuthConfig) SetAccessId(v string) {
	o.AccessId = v
}

// GetConfigEncryptionKeyName returns the ConfigEncryptionKeyName field value if set, zero value otherwise.
func (o *GatewayCreateK8SAuthConfig) GetConfigEncryptionKeyName() string {
	if o == nil || o.ConfigEncryptionKeyName == nil {
		var ret string
		return ret
	}
	return *o.ConfigEncryptionKeyName
}

// GetConfigEncryptionKeyNameOk returns a tuple with the ConfigEncryptionKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetConfigEncryptionKeyNameOk() (*string, bool) {
	if o == nil || o.ConfigEncryptionKeyName == nil {
		return nil, false
	}
	return o.ConfigEncryptionKeyName, true
}

// HasConfigEncryptionKeyName returns a boolean if a field has been set.
func (o *GatewayCreateK8SAuthConfig) HasConfigEncryptionKeyName() bool {
	if o != nil && o.ConfigEncryptionKeyName != nil {
		return true
	}

	return false
}

// SetConfigEncryptionKeyName gets a reference to the given string and assigns it to the ConfigEncryptionKeyName field.
func (o *GatewayCreateK8SAuthConfig) SetConfigEncryptionKeyName(v string) {
	o.ConfigEncryptionKeyName = &v
}

// GetK8sCaCert returns the K8sCaCert field value if set, zero value otherwise.
func (o *GatewayCreateK8SAuthConfig) GetK8sCaCert() string {
	if o == nil || o.K8sCaCert == nil {
		var ret string
		return ret
	}
	return *o.K8sCaCert
}

// GetK8sCaCertOk returns a tuple with the K8sCaCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetK8sCaCertOk() (*string, bool) {
	if o == nil || o.K8sCaCert == nil {
		return nil, false
	}
	return o.K8sCaCert, true
}

// HasK8sCaCert returns a boolean if a field has been set.
func (o *GatewayCreateK8SAuthConfig) HasK8sCaCert() bool {
	if o != nil && o.K8sCaCert != nil {
		return true
	}

	return false
}

// SetK8sCaCert gets a reference to the given string and assigns it to the K8sCaCert field.
func (o *GatewayCreateK8SAuthConfig) SetK8sCaCert(v string) {
	o.K8sCaCert = &v
}

// GetK8sHost returns the K8sHost field value
func (o *GatewayCreateK8SAuthConfig) GetK8sHost() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.K8sHost
}

// GetK8sHostOk returns a tuple with the K8sHost field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetK8sHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.K8sHost, true
}

// SetK8sHost sets field value
func (o *GatewayCreateK8SAuthConfig) SetK8sHost(v string) {
	o.K8sHost = v
}

// GetK8sIssuer returns the K8sIssuer field value if set, zero value otherwise.
func (o *GatewayCreateK8SAuthConfig) GetK8sIssuer() string {
	if o == nil || o.K8sIssuer == nil {
		var ret string
		return ret
	}
	return *o.K8sIssuer
}

// GetK8sIssuerOk returns a tuple with the K8sIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetK8sIssuerOk() (*string, bool) {
	if o == nil || o.K8sIssuer == nil {
		return nil, false
	}
	return o.K8sIssuer, true
}

// HasK8sIssuer returns a boolean if a field has been set.
func (o *GatewayCreateK8SAuthConfig) HasK8sIssuer() bool {
	if o != nil && o.K8sIssuer != nil {
		return true
	}

	return false
}

// SetK8sIssuer gets a reference to the given string and assigns it to the K8sIssuer field.
func (o *GatewayCreateK8SAuthConfig) SetK8sIssuer(v string) {
	o.K8sIssuer = &v
}

// GetName returns the Name field value
func (o *GatewayCreateK8SAuthConfig) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GatewayCreateK8SAuthConfig) SetName(v string) {
	o.Name = v
}

// GetSigningKey returns the SigningKey field value
func (o *GatewayCreateK8SAuthConfig) GetSigningKey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SigningKey
}

// GetSigningKeyOk returns a tuple with the SigningKey field value
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetSigningKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SigningKey, true
}

// SetSigningKey sets field value
func (o *GatewayCreateK8SAuthConfig) SetSigningKey(v string) {
	o.SigningKey = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GatewayCreateK8SAuthConfig) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GatewayCreateK8SAuthConfig) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *GatewayCreateK8SAuthConfig) SetToken(v string) {
	o.Token = &v
}

// GetTokenExp returns the TokenExp field value if set, zero value otherwise.
func (o *GatewayCreateK8SAuthConfig) GetTokenExp() int64 {
	if o == nil || o.TokenExp == nil {
		var ret int64
		return ret
	}
	return *o.TokenExp
}

// GetTokenExpOk returns a tuple with the TokenExp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetTokenExpOk() (*int64, bool) {
	if o == nil || o.TokenExp == nil {
		return nil, false
	}
	return o.TokenExp, true
}

// HasTokenExp returns a boolean if a field has been set.
func (o *GatewayCreateK8SAuthConfig) HasTokenExp() bool {
	if o != nil && o.TokenExp != nil {
		return true
	}

	return false
}

// SetTokenExp gets a reference to the given int64 and assigns it to the TokenExp field.
func (o *GatewayCreateK8SAuthConfig) SetTokenExp(v int64) {
	o.TokenExp = &v
}

// GetTokenReviewerJwt returns the TokenReviewerJwt field value if set, zero value otherwise.
func (o *GatewayCreateK8SAuthConfig) GetTokenReviewerJwt() string {
	if o == nil || o.TokenReviewerJwt == nil {
		var ret string
		return ret
	}
	return *o.TokenReviewerJwt
}

// GetTokenReviewerJwtOk returns a tuple with the TokenReviewerJwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetTokenReviewerJwtOk() (*string, bool) {
	if o == nil || o.TokenReviewerJwt == nil {
		return nil, false
	}
	return o.TokenReviewerJwt, true
}

// HasTokenReviewerJwt returns a boolean if a field has been set.
func (o *GatewayCreateK8SAuthConfig) HasTokenReviewerJwt() bool {
	if o != nil && o.TokenReviewerJwt != nil {
		return true
	}

	return false
}

// SetTokenReviewerJwt gets a reference to the given string and assigns it to the TokenReviewerJwt field.
func (o *GatewayCreateK8SAuthConfig) SetTokenReviewerJwt(v string) {
	o.TokenReviewerJwt = &v
}

// GetUidToken returns the UidToken field value if set, zero value otherwise.
func (o *GatewayCreateK8SAuthConfig) GetUidToken() string {
	if o == nil || o.UidToken == nil {
		var ret string
		return ret
	}
	return *o.UidToken
}

// GetUidTokenOk returns a tuple with the UidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCreateK8SAuthConfig) GetUidTokenOk() (*string, bool) {
	if o == nil || o.UidToken == nil {
		return nil, false
	}
	return o.UidToken, true
}

// HasUidToken returns a boolean if a field has been set.
func (o *GatewayCreateK8SAuthConfig) HasUidToken() bool {
	if o != nil && o.UidToken != nil {
		return true
	}

	return false
}

// SetUidToken gets a reference to the given string and assigns it to the UidToken field.
func (o *GatewayCreateK8SAuthConfig) SetUidToken(v string) {
	o.UidToken = &v
}

func (o GatewayCreateK8SAuthConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access-id"] = o.AccessId
	}
	if o.ConfigEncryptionKeyName != nil {
		toSerialize["config-encryption-key-name"] = o.ConfigEncryptionKeyName
	}
	if o.K8sCaCert != nil {
		toSerialize["k8s-ca-cert"] = o.K8sCaCert
	}
	if true {
		toSerialize["k8s-host"] = o.K8sHost
	}
	if o.K8sIssuer != nil {
		toSerialize["k8s-issuer"] = o.K8sIssuer
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["signing-key"] = o.SigningKey
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.TokenExp != nil {
		toSerialize["token-exp"] = o.TokenExp
	}
	if o.TokenReviewerJwt != nil {
		toSerialize["token-reviewer-jwt"] = o.TokenReviewerJwt
	}
	if o.UidToken != nil {
		toSerialize["uid-token"] = o.UidToken
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayCreateK8SAuthConfig struct {
	value *GatewayCreateK8SAuthConfig
	isSet bool
}

func (v NullableGatewayCreateK8SAuthConfig) Get() *GatewayCreateK8SAuthConfig {
	return v.value
}

func (v *NullableGatewayCreateK8SAuthConfig) Set(val *GatewayCreateK8SAuthConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayCreateK8SAuthConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayCreateK8SAuthConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayCreateK8SAuthConfig(val *GatewayCreateK8SAuthConfig) *NullableGatewayCreateK8SAuthConfig {
	return &NullableGatewayCreateK8SAuthConfig{value: val, isSet: true}
}

func (v NullableGatewayCreateK8SAuthConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayCreateK8SAuthConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


