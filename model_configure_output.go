/*
Akeyless API

The purpose of this application is to provide access to Akeyless API.

API version: 2.0
Contact: support@akeyless.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package akeyless

import (
	"encoding/json"
)

// checks if the ConfigureOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigureOutput{}

// ConfigureOutput struct for ConfigureOutput
type ConfigureOutput struct {
	Profile *string `json:"profile,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewConfigureOutput instantiates a new ConfigureOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigureOutput() *ConfigureOutput {
	this := ConfigureOutput{}
	return &this
}

// NewConfigureOutputWithDefaults instantiates a new ConfigureOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigureOutputWithDefaults() *ConfigureOutput {
	this := ConfigureOutput{}
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ConfigureOutput) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigureOutput) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ConfigureOutput) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *ConfigureOutput) SetProfile(v string) {
	o.Profile = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ConfigureOutput) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigureOutput) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ConfigureOutput) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ConfigureOutput) SetToken(v string) {
	o.Token = &v
}

func (o ConfigureOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigureOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableConfigureOutput struct {
	value *ConfigureOutput
	isSet bool
}

func (v NullableConfigureOutput) Get() *ConfigureOutput {
	return v.value
}

func (v *NullableConfigureOutput) Set(val *ConfigureOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigureOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigureOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigureOutput(val *ConfigureOutput) *NullableConfigureOutput {
	return &NullableConfigureOutput{value: val, isSet: true}
}

func (v NullableConfigureOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigureOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


